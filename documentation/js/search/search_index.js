var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessTokenCreatedEvent.html",[0,0.122,1,3.058]],["body/classes/AccessTokenCreatedEvent.html",[0,0.112,1,3.95,2,0.836,3,0.102,4,0.102,5,0.09,6,6.982,7,3.037,8,3.046,9,0.999,10,3.046,11,3.95,12,1.354,13,0.16,14,0.922,15,4.329,16,1.868,17,2.774,18,4.871,19,3.753,20,2.386,21,3.753,22,4.871,23,4.582,24,0.634,25,4.871,26,1.011,27,2.812,28,1.168,29,3.753,30,0.536,31,3.359,32,0.505,33,0.011,34,0.345,35,0.353,36,2.625,37,3.359,38,3.359,39,3.359,40,3.359,41,3.835,42,3.835,43,3.835,44,3.835,45,0.102,46,0.007,47,0.007]],["title/classes/AccessTokenNotFoundException.html",[0,0.122,48,2.854]],["body/classes/AccessTokenNotFoundException.html",[0,0.118,2,0.877,3,0.107,4,0.107,5,0.095,7,2.951,9,1.047,12,2.436,13,0.168,17,2.92,20,2.646,21,3.951,24,0.651,28,1.084,30,0.435,32,0.842,33,0.012,34,0.576,35,0.286,45,0.107,46,0.007,47,0.007,48,4.957,49,6.042,50,3.195,51,4.424,52,4.424,53,5.752,54,2.1,55,5.598,56,1.077,57,4.385,58,5.571,59,4.424,60,5.571,61,5.571,62,4.023,63,5.951,64,5.951,65,1.236,66,4.679,67,4.88,68,4.023,69,5.571,70,4.023,71,0.18,72,0.877,73,2.054,74,1.568,75,1.664,76,4.023,77,2.753]],["title/injectables/AccessTokenRepository.html",[78,1.521,79,2.413]],["body/injectables/AccessTokenRepository.html",[0,0.102,3,0.092,4,0.092,5,0.082,7,2.844,13,0.145,16,0.759,17,2.872,20,1.229,21,3.41,24,0.728,26,0.943,28,1.048,30,0.487,32,0.941,33,0.012,34,0.644,35,0.32,45,0.092,46,0.007,47,0.007,48,2.382,56,0.973,65,1.327,71,0.32,72,0.759,74,1.683,78,1.834,79,2.91,80,2.014,81,6.455,82,3.049,83,2.551,84,2.554,85,3.687,86,5.029,87,5.171,88,5.171,89,3.049,90,3.466,91,3.481,92,3.049,93,3.436,94,3.481,95,2.36,96,5.029,97,3.481,98,5.029,99,3.481,100,3.049,101,3.481,102,3.049,103,3.481,104,2.014,105,1.562,106,3.481,107,1.053,108,1.623,109,1.758,110,1.453,111,3.481,112,3.049,113,2.774,114,3.049,115,2.382,116,1.312,117,3.481,118,1.191,119,1.667,120,2.422,121,4.405,122,5.029,123,1.895,124,2.652,125,3.481,126,3.481,127,3.481,128,3.481,129,3.481]],["title/interfaces/AccessTokenRepositoryInterface.html",[113,2.301,130,0.759]],["body/interfaces/AccessTokenRepositoryInterface.html",[3,0.113,4,0.113,5,0.1,7,3.066,9,1.106,12,2.802,13,0.177,17,2.878,21,3.05,24,0.67,28,1.038,30,0.448,32,0.866,33,0.012,34,0.592,35,0.295,45,0.113,46,0.008,47,0.008,48,3.959,56,1.119,65,1.272,71,0.19,73,2.114,75,1.506,84,2.845,87,5.067,88,5.067,92,3.722,93,3.291,95,2.304,100,5.067,102,5.067,108,1.981,109,2.147,110,1.774,113,3.191,130,1.197,131,1.174,132,6.184,133,3.375,134,3.347,135,3.724,136,5.067,137,5.785,138,4.241,139,4.241,140,4.25,141,4.594,142,5.067,143,3.722,144,4.831,145,3.722,146,4.241]],["title/injectables/AccessTokenStrategy.html",[78,1.521,147,3.058]],["body/injectables/AccessTokenStrategy.html",[0,0.123,3,0.111,4,0.111,5,0.099,7,2.166,12,2.03,13,0.175,16,1.427,17,2.74,24,0.585,26,1.078,28,0.892,30,0.392,32,0.757,33,0.012,34,0.518,35,0.258,45,0.111,46,0.008,47,0.008,54,2.166,56,1.112,65,0.814,66,2.564,71,0.341,72,0.918,73,1.353,78,2.096,79,3.326,80,2.436,83,2.04,95,1.738,105,1.89,107,1.273,113,3.879,118,2.239,119,1.396,120,1.487,131,1.163,147,4.214,148,5.733,149,3.343,150,6.545,151,5.846,152,3.879,153,3.688,154,5.733,155,4.527,156,4.5,157,4.21,158,5.748,159,4.21,160,6.287,161,4.565,162,5.733,163,5.748,164,3.688,165,3.688,166,2.127,167,2.71,168,3.086,169,3.086,170,3.934,171,3.343,172,3.688,173,2.881,174,4.21,175,4.21]],["title/interfaces/AdminConfig.html",[130,0.759,176,2.854]],["body/interfaces/AdminConfig.html",[3,0.147,4,0.147,5,0.13,13,0.231,14,1.176,24,0.7,28,0.755,33,0.011,35,0.308,45,0.182,46,0.009,47,0.009,54,2.59,71,0.335,72,1.207,130,1.251,131,1.53,176,4.703,177,4.398,178,6.02,179,4.893,180,6.845,181,5.031,182,4.759,183,4.85,184,3.79,185,4.06,186,4.06,187,3.79]],["title/injectables/AdminLoader.html",[78,1.521,188,3.312]],["body/injectables/AdminLoader.html",[0,0.161,3,0.145,4,0.145,5,0.129,13,0.229,14,1.169,16,1.623,24,0.559,26,1.029,30,0.466,32,0.723,33,0.011,34,0.494,35,0.246,45,0.145,46,0.009,47,0.009,71,0.306,72,1.196,75,1.779,78,2.492,80,3.175,118,2.546,188,5.427,189,4.806,190,5.015,191,6.834,192,6.823,193,6.834,194,5.487,195,2.212,196,2.291,197,6.834,198,3.175,199,4.806,200,5.487,201,4.358]],["title/modules/AdminModule.html",[202,1.944,203,3.312]],["body/modules/AdminModule.html",[0,0.121,3,0.109,4,0.109,5,0.097,15,2.863,16,1.235,24,0.42,30,0.386,32,0.543,33,0.012,34,0.371,35,0.185,45,0.109,46,0.008,47,0.008,56,0.798,57,3.126,65,1.096,71,0.347,72,0.899,74,1.589,75,1.686,83,1.766,116,1.554,118,1.411,166,2.863,176,4.771,179,2.511,190,3.648,192,5.671,198,2.386,199,3.612,202,3.25,203,5.142,204,2.174,205,4.124,206,3.275,207,4.5,208,4.124,209,2.452,210,4.747,211,6.401,212,4.124,213,3.275,214,5.142,215,5.667,216,5.667,217,5.667,218,4.771,219,4.124,220,3.023,221,4.5,222,3.612,223,2.822,224,3.612,225,4.5,226,2.655,227,4.124,228,2.174,229,3.612,230,2.822,231,4.124,232,4.124,233,3.612,234,1.939,235,3.275,236,4.124,237,3.612,238,3.275,239,3.612,240,2.386,241,4.431,242,3.612,243,4.964,244,2.655,245,4.124,246,2.655]],["title/controllers/AuthController.html",[247,2.301,248,3.058]],["body/controllers/AuthController.html",[0,0.105,3,0.06,4,0.06,5,0.053,7,2.126,9,1.81,13,0.094,16,1.312,17,0.876,21,2.376,24,0.525,26,0.676,29,2.499,30,0.351,32,0.679,33,0.012,34,0.464,35,0.283,45,0.06,46,0.005,47,0.005,56,0.697,65,0.997,71,0.347,72,0.49,73,1.158,74,0.884,75,1.71,83,2.254,90,1.747,95,1.558,104,1.301,105,1.009,107,0.68,110,0.938,118,2.059,119,1.995,120,2.125,124,1.899,131,0.621,152,1.987,154,1.969,155,2.319,156,2.608,166,1.136,170,2.465,172,1.969,181,2.319,209,0.973,213,1.785,226,1.447,235,2.861,238,2.861,247,1.987,248,2.641,249,1.24,250,1.969,251,3.579,252,6.018,253,3.602,254,2.248,255,3.778,256,1.657,257,2.248,258,3.602,259,3.602,260,2.248,261,6.018,262,3.778,263,2.248,264,3.947,265,2.248,266,3.041,267,3.602,268,3.602,269,5.154,270,5.154,271,4.514,272,2.248,273,2.248,274,7.101,275,2.248,276,3.602,277,2.248,278,2.248,279,2.248,280,2.248,281,2.248,282,2.248,283,1.785,284,1.969,285,1.785,286,2.248,287,1.785,288,2.465,289,3.947,290,4.514,291,1.969,292,5.754,293,1.648,294,0.82,295,3.155,296,1.969,297,3.947,298,1.969,299,1.648,300,1.969,301,1.185,302,1.538,303,1.24,304,1.447,305,2.248,306,2.248,307,1.648,308,2.248,309,2.248,310,1.899,311,2.319,312,2.248,313,1.24,314,1.969,315,1.969,316,1.538,317,2.465,318,2.248,319,1.301,320,2.248,321,1.24,322,1.969,323,1.648,324,1.785,325,1.648,326,2.248,327,1.301,328,2.248,329,1.785,330,1.09,331,1.785,332,1.969,333,1.969,334,1.969,335,1.648,336,1.785,337,2.248,338,4.514,339,6.018,340,2.248,341,1.494,342,1.969,343,1.785,344,2.248,345,2.248,346,2.248,347,5.154,348,1.82,349,2.248,350,2.248,351,2.248,352,2.248,353,2.248,354,5.154,355,2.248,356,2.248,357,1.969,358,2.248,359,2.248,360,2.248,361,3.602,362,3.602,363,3.602,364,3.579,365,3.602,366,2.248,367,2.248,368,2.248,369,2.248,370,2.248,371,3.602,372,2.248,373,3.602,374,1.648,375,2.248,376,2.248,377,3.947,378,2.248,379,2.248,380,2.248,381,1.369,382,2.248,383,4.507,384,1.447,385,1.648,386,2.248,387,3.602,388,2.248,389,2.248,390,3.602,391,2.248,392,2.194,393,2.641,394,2.248,395,2.248]],["title/entities/AuthJwtTokenEntity.html",[301,2.199,396,1.572]],["body/entities/AuthJwtTokenEntity.html",[0,0.109,3,0.098,4,0.098,5,0.088,13,0.255,14,0.902,17,2.386,18,4.191,20,2.163,21,3.229,22,4.191,28,1.046,29,3.723,30,0.523,33,0.011,34,0.713,35,0.344,45,0.098,46,0.007,47,0.007,54,1.401,71,0.167,107,1.124,234,2.5,256,2.468,301,2.779,303,4.308,392,3.729,393,4.489,396,1.401,397,1.608,398,5.028,399,2.952,400,4.489,401,4.186,402,3.864,403,4.617,404,6.423,405,4.582,406,3.855,407,5.836,408,3.717,409,6.725,410,4.186,411,3.717,412,4.617,413,3.256,414,4.186,415,3.717,416,3.256,417,3.717,418,3.393,419,3.864,420,3.717,421,4.186,422,3.717,423,5.271,424,3.256,425,2.457,426,4.058,427,2.725,428,3.717]],["title/classes/AuthJwtTokenResponse.html",[0,0.122,429,3.058]],["body/classes/AuthJwtTokenResponse.html",[0,0.172,2,0.949,3,0.115,4,0.115,5,0.102,13,0.181,14,1.006,18,4.556,20,2.351,22,4.556,24,0.443,26,0.816,28,0.972,29,3.869,30,0.534,32,0.573,33,0.011,34,0.392,35,0.352,45,0.115,46,0.008,47,0.008,71,0.298,110,1.817,256,2.466,294,1.587,301,2.295,302,2.978,303,4.459,392,4.054,393,4.88,400,4.88,429,4.31,430,6.336,431,3.456,432,5.879,433,7.446,434,5.879,435,7.673,436,4.352,437,4.352,438,4.352,439,3.812,440,4.352,441,3.394,442,4.777,443,2.029,444,4.352]],["title/classes/AuthLoginTokenResponse.html",[0,0.122,262,3.058]],["body/classes/AuthLoginTokenResponse.html",[0,0.172,2,0.947,3,0.115,4,0.115,5,0.102,7,3.046,9,1.731,11,4.303,12,2.073,13,0.181,14,1.004,24,0.442,26,0.815,30,0.453,32,0.572,33,0.012,34,0.529,35,0.319,45,0.115,46,0.008,47,0.008,71,0.319,73,1.887,131,1.2,134,3.396,234,2.275,251,5.656,256,1.887,262,4.303,294,1.583,310,4.043,317,5.457,319,2.512,341,2.786,430,5.656,431,3.448,439,3.803,441,2.877,442,3.574,443,2.024,445,5.869,446,5.869,447,4.017,448,3.574,449,4.661,450,3.237,451,2.795,452,4.585,453,3.803,454,5.869,455,2.971,456,4.341,457,4.341]],["title/modules/AuthModule.html",[202,1.944,220,3.058]],["body/modules/AuthModule.html",[0,0.076,3,0.069,4,0.069,5,0.061,15,1.317,16,1.22,24,0.266,26,0.489,30,0.276,32,0.343,33,0.012,34,0.235,35,0.117,45,0.192,46,0.005,47,0.005,56,0.504,57,3.087,65,0.783,71,0.365,72,0.569,73,0.838,74,1.373,75,0.679,79,2.343,83,1.547,84,1.752,90,1.265,93,1.888,105,1.171,110,1.089,113,2.234,116,0.983,118,1.915,119,2.552,141,2.071,147,2.969,155,1.679,166,2.827,181,3.901,190,2.607,202,2.314,204,1.375,206,2.071,207,3.216,209,3.074,210,3.639,211,5.307,214,3.942,220,3.639,223,1.785,224,2.284,225,3.216,226,1.679,229,2.284,230,1.785,233,2.284,234,0.892,235,2.071,237,2.284,238,2.071,239,2.284,240,3.238,241,4.389,242,2.284,243,4.348,246,1.679,248,2.969,249,2.234,299,4.442,300,2.284,301,2.135,302,2.771,303,1.438,311,1.679,316,1.785,330,1.964,331,2.071,334,2.284,341,0.865,397,1.128,458,2.071,459,2.608,460,4.049,461,2.608,462,1.679,463,1.818,464,2.466,465,2.607,466,2.343,467,2.608,468,2.071,469,3.196,470,3.196,471,3.942,472,3.547,473,1.171,474,2.284,475,2.771,476,2.284,477,2.284,478,2.771,479,2.771,480,2.771,481,2.608,482,2.771,483,1.912,484,1.912,485,2.969,486,2.608,487,2.969,488,2.608,489,2.969,490,2.608,491,2.343,492,2.071,493,2.771,494,2.771,495,2.771,496,3.639,497,2.969,498,2.608,499,2.071,500,2.608,501,3.216,502,3.216,503,3.216,504,3.216,505,1.964,506,3.547,507,3.216,508,3.216,509,3.216,510,2.608,511,2.608,512,4.049,513,4.964,514,2.608,515,4.964,516,2.608,517,4.964,518,1.785,519,2.608,520,2.608,521,2.284,522,2.608,523,2.608,524,4.049,525,2.608,526,2.608]],["title/entities/AuthPermissionEntity.html",[396,1.572,464,2.54]],["body/entities/AuthPermissionEntity.html",[0,0.144,3,0.13,4,0.13,5,0.116,13,0.205,14,1.091,28,1.02,30,0.482,33,0.012,34,0.443,35,0.317,45,0.13,46,0.008,47,0.008,54,1.854,71,0.286,107,1.488,179,2.996,256,2.274,396,1.854,397,2.129,398,4.818,406,4.33,425,2.973,426,2.996,464,3.883,465,4.818,527,4.309,528,5.618,529,5.927,530,5.186,531,5.064,532,5.943,533,4.92,534,4.309,535,4.92,536,4.92,537,5.064,538,4.92,539,5.064,540,5.064,541,3.907,542,3.367,543,4.92,544,4.92,545,4.92]],["title/entities/AuthPermissionGroupEntity.html",[396,1.572,465,2.685]],["body/entities/AuthPermissionGroupEntity.html",[0,0.144,3,0.131,4,0.131,5,0.116,13,0.206,14,1.092,24,0.65,28,1.021,30,0.483,33,0.012,35,0.317,45,0.131,46,0.008,47,0.008,54,1.859,71,0.286,107,1.492,179,3.004,256,2.277,396,1.859,397,2.134,398,4.822,406,4.334,425,2.978,426,3.004,464,3.89,465,4.112,528,5.625,530,5.193,531,5.072,532,5.949,537,5.072,541,3.918,542,5.126,546,4.321,547,3.907,548,4.933,549,4.682,550,4.321,551,3.227,552,6.387,553,4.933,554,4.933,555,5.595,556,4.321,557,4.933]],["title/entities/AuthRoleAssignmentEntity.html",[396,1.572,466,2.413]],["body/entities/AuthRoleAssignmentEntity.html",[0,0.146,3,0.132,4,0.132,5,0.117,13,0.296,14,1.098,20,2.511,28,0.875,30,0.484,33,0.011,34,0.448,35,0.319,45,0.132,46,0.009,47,0.009,54,1.875,71,0.288,107,1.504,179,3.029,256,2.286,348,3.244,392,4.576,396,1.875,397,2.152,398,4.838,416,4.357,419,3.647,425,2.994,426,3.911,427,5.213,466,3.715,491,4.348,492,3.95,534,4.357,539,5.099,540,5.099,551,4.257,558,4.357,559,4.974,560,4.974,561,4.974,562,4.974,563,4.974,564,4.974,565,4.974]],["title/entities/AuthRoleEntity.html",[396,1.572,491,2.413]],["body/entities/AuthRoleEntity.html",[0,0.133,3,0.12,4,0.12,5,0.107,13,0.19,14,1.036,28,0.989,30,0.495,33,0.012,34,0.41,35,0.325,45,0.12,46,0.008,47,0.008,54,1.714,71,0.325,107,1.375,179,3.688,256,2.333,294,1.659,396,1.714,397,1.968,398,4.866,406,4.2,425,2.823,426,2.77,441,2.945,464,4.42,466,3.504,491,3.504,528,5.406,530,4.991,531,3.612,532,5.764,537,3.612,541,3.612,547,3.755,549,4.44,550,3.984,551,2.298,555,5.304,556,3.984,566,3.984,567,6.62,568,4.549,569,4.549,570,4.549,571,6.056,572,4.549,573,4.549,574,4.549,575,6.056,576,4.549,577,6.056,578,6.056,579,3.612,580,4.549]],["title/injectables/AuthTasksService.html",[78,1.521,497,3.058]],["body/injectables/AuthTasksService.html",[0,0.139,3,0.126,4,0.126,5,0.112,13,0.198,14,1.066,16,1.61,24,0.484,26,1.169,30,0.474,32,0.626,33,0.011,34,0.428,35,0.213,45,0.126,46,0.008,47,0.008,56,1.205,65,0.919,71,0.344,72,1.036,75,1.623,78,2.273,80,2.749,85,3.484,90,3.581,104,2.749,105,2.133,107,1.437,110,1.984,118,2.526,138,3.484,190,4.754,195,1.916,196,1.984,256,1.527,301,2.506,302,3.252,303,3.438,335,3.484,336,4.95,462,3.059,468,3.774,497,4.57,499,5.864,581,6.468,582,4.162,583,7.384,584,4.752,585,6.233,586,6.233,587,4.752,588,6.233,589,4.752,590,4.752,591,4.752,592,4.752,593,4.752,594,4.752,595,4.752,596,4.752]],["title/interfaces/BasicCommandOptions.html",[130,0.759,597,3.058]],["body/interfaces/BasicCommandOptions.html",[0,0.133,3,0.12,4,0.12,5,0.107,9,1.77,13,0.189,14,1.034,16,0.989,24,0.738,28,1.111,33,0.012,34,0.409,35,0.271,45,0.12,46,0.008,47,0.008,54,1.71,71,0.305,74,1.484,75,1.574,83,1.414,95,1.372,120,1.602,130,0.826,131,1.254,173,3.105,209,2.616,228,2.392,234,1.552,341,1.504,473,2.037,551,3.924,597,4.984,598,3.326,599,3.603,600,4.494,601,4.141,602,3.75,603,4.432,604,5.955,605,2.921,606,3.105,607,2.763,608,3.974,609,3.974,610,3.326,611,2.503,612,3.603,613,3.974,614,3.974,615,2.921,616,5.295,617,3.974,618,5.295,619,3.974,620,5.295,621,3.974,622,3.974,623,3.326,624,3.105,625,3.974,626,3.974,627,3.974]],["title/modules/CliModule.html",[202,1.944,628,3.058]],["body/modules/CliModule.html",[0,0.149,3,0.135,4,0.135,5,0.12,33,0.011,45,0.135,46,0.009,47,0.009,71,0.351,72,1.109,201,4.039,202,3.35,204,2.682,210,3.729,230,3.481,240,3.769,246,4.626,249,2.805,472,5.705,473,2.283,615,5.312,628,5.973,629,3.729,630,4.455,631,4.455,632,4.455,633,4.455,634,5.647,635,5.647,636,5.705,637,4.455,638,4.455,639,5.086,640,6.514,641,5.086,642,5.086,643,5.086,644,5.086]],["title/classes/ClientCreatedEvent.html",[0,0.122,645,3.058]],["body/classes/ClientCreatedEvent.html",[0,0.14,2,1.044,3,0.127,4,0.127,5,0.113,8,3.804,9,1.247,10,3.804,13,0.2,14,1.072,15,4.259,16,1.838,19,4.053,20,2.616,24,0.488,26,1.176,27,3.511,28,1.149,29,3.592,30,0.524,31,4.195,32,0.631,33,0.011,34,0.71,35,0.345,37,4.195,38,4.195,39,4.195,40,4.195,45,0.127,46,0.008,47,0.008,123,1.805,645,4.593,646,6.907,647,4.79,648,3.804,649,6.733]],["title/classes/ClientCredentialsStrategy.html",[0,0.122,493,2.854]],["body/classes/ClientCredentialsStrategy.html",[0,0.101,2,0.752,3,0.091,4,0.091,5,0.081,12,1.218,13,0.144,16,1.089,17,1.343,24,0.598,26,1.208,28,0.8,30,0.4,32,0.773,33,0.012,34,0.529,35,0.263,45,0.091,46,0.007,47,0.007,56,0.966,65,0.966,71,0.344,72,0.752,73,1.605,74,1.441,75,1.3,83,2.221,93,2.328,95,1.947,108,2.328,109,1.742,110,1.439,116,1.882,118,1.709,119,2.135,120,1.218,123,2.685,131,0.953,152,3.239,166,1.742,266,3.067,313,1.902,319,1.995,330,2.847,374,3.661,405,1.995,463,3.298,473,1.548,483,2.528,493,3.418,505,3.122,601,4.583,624,2.359,650,5.639,651,3.02,652,3.239,653,4.019,654,2.528,655,3.448,656,2.359,657,3.712,658,3.448,659,2.359,660,3.448,661,2.359,662,2.738,663,1.818,664,2.738,665,3.041,666,2.528,667,1.902,668,1.995,669,2.755,670,2.22,671,3.448,672,2.22,673,2.528,674,3.966,675,2.528,676,2.738,677,2.738,678,2.738,679,3.448,680,4.374,681,3.215,682,6.24,683,3.448,684,3.448,685,3.02,686,3.02,687,3.02,688,3.02,689,3.02,690,3.02,691,3.02,692,3.966,693,3.02]],["title/classes/ClientNotFoundException.html",[0,0.122,694,2.854]],["body/classes/ClientNotFoundException.html",[0,0.119,2,0.885,3,0.107,4,0.107,5,0.096,9,1.057,13,0.169,19,3.651,20,2.848,24,0.654,28,1.086,30,0.437,32,0.846,33,0.012,34,0.694,35,0.288,45,0.107,46,0.007,47,0.007,50,3.223,51,4.452,52,4.452,53,5.771,54,2.113,55,5.624,56,1.084,57,4.394,59,4.452,63,5.967,64,5.967,65,1.242,66,4.425,67,4.91,71,0.182,72,0.885,73,2.064,74,1.576,75,1.672,123,3.002,284,5.624,694,4.973,695,6.065,696,5.605,697,5.605,698,5.605,699,4.059,700,4.059,701,5.605,702,4.059]],["title/classes/ClientPayload.html",[0,0.122,169,3.058]],["body/classes/ClientPayload.html",[0,0.123,2,0.914,3,0.111,4,0.111,5,0.099,9,1.091,12,1.48,13,0.175,14,0.98,15,4.171,16,1.833,17,2.735,19,3.875,20,2.596,24,0.427,26,1.075,28,1.125,30,0.517,32,0.552,33,0.011,34,0.683,35,0.364,45,0.111,46,0.008,47,0.008,71,0.257,93,3.426,108,1.954,109,2.117,110,1.749,116,2.159,123,2.159,167,4.203,169,4.2,195,1.689,196,1.749,341,1.389,703,6.169,704,2.868,705,5.019,706,5.73,707,4.203,708,3.072,709,5.73,710,4.191,711,3.67,712,3.67,713,3.67,714,4.787,715,5.73,716,2.698,717,3.67,718,2.868,719,3.328,720,3.67,721,3.67]],["title/injectables/ClientRepository.html",[78,1.521,330,2.022]],["body/injectables/ClientRepository.html",[0,0.103,3,0.093,4,0.093,5,0.083,13,0.147,16,0.768,19,3.133,20,1.791,24,0.731,26,0.951,28,1.051,29,1.708,30,0.489,32,0.945,33,0.012,34,0.694,35,0.322,45,0.093,46,0.007,47,0.007,56,0.981,65,1.333,71,0.322,72,0.768,74,1.691,75,0.917,78,1.85,80,2.038,83,2.555,84,2.194,85,3.718,89,3.085,90,3.48,95,2.366,104,2.038,105,1.581,107,1.065,108,1.642,112,3.085,115,2.41,116,1.327,118,1.205,119,1.97,120,2.433,121,4.442,123,2.986,124,3.133,144,3.47,330,2.459,463,3.32,505,2.459,667,1.942,675,2.582,694,2.41,722,3.085,723,4.442,724,4.442,725,3.522,726,4.442,727,3.522,728,5.071,729,3.522,730,4.442,731,3.522,732,4.442,733,3.522,734,4.442,735,3.522,736,3.522,737,2.582,738,3.522,739,3.522,740,3.522,741,3.522,742,3.522,743,5.071]],["title/interfaces/ClientRepositoryInterface.html",[130,0.759,505,2.022]],["body/interfaces/ClientRepositoryInterface.html",[3,0.105,4,0.105,5,0.093,9,1.029,13,0.165,19,3.61,20,2.418,24,0.697,28,1.079,30,0.466,32,0.902,33,0.012,34,0.702,35,0.307,45,0.105,46,0.007,47,0.007,56,1.064,65,1.324,71,0.177,73,2.201,75,1.433,84,2.962,90,2.669,95,2.358,108,1.843,123,3.023,130,0.719,131,1.092,133,3.139,134,3.184,135,3.543,136,4.82,143,3.462,144,4.685,145,3.462,146,4.641,161,5.437,463,3.073,505,2.669,667,2.18,694,4.333,703,5.716,716,3.543,718,3.766,723,4.82,724,4.82,726,4.82,730,4.82,732,4.82,734,4.82,744,4.82,745,5.503,746,3.952,747,3.351,748,6.846,749,3.952]],["title/classes/CreateAccessTokenCommand.html",[0,0.122,665,2.54]],["body/classes/CreateAccessTokenCommand.html",[0,0.123,2,0.918,3,0.111,4,0.111,5,0.099,12,2.796,13,0.175,14,0.983,15,4.3,16,1.856,19,3.708,23,4.739,24,0.666,25,5.038,26,1.078,28,1.126,30,0.53,32,0.554,33,0.011,34,0.379,35,0.349,36,2.881,45,0.111,46,0.008,47,0.008,71,0.189,266,3.304,313,2.322,348,3.999,657,3.719,665,3.501,668,2.436,750,4.174,751,3.688,752,5.397,753,6.448,754,4.21,755,4.21,756,4.21,757,4.21,758,4.21,759,4.21,760,4.21,761,4.21]],["title/classes/CreateAccessTokenHandler.html",[0,0.122,478,2.854]],["body/classes/CreateAccessTokenHandler.html",[0,0.109,1,2.725,2,0.81,3,0.098,4,0.098,5,0.088,7,1.986,12,2.484,13,0.155,16,1.335,17,2.386,24,0.537,26,0.989,29,1.802,30,0.359,32,0.694,33,0.012,34,0.475,35,0.236,45,0.098,46,0.007,47,0.007,56,1.019,65,0.719,71,0.35,72,0.81,73,1.195,75,1.595,77,2.544,79,3.05,83,1.909,84,2.65,93,2.457,108,2.457,109,1.878,110,1.552,113,3.675,114,3.256,115,3.607,116,1.986,118,2.095,119,2.332,120,1.313,123,1.986,138,3.864,153,3.256,166,1.878,171,2.952,330,2.97,374,2.725,463,2.366,473,1.668,478,3.607,505,3.231,602,3.675,610,2.725,665,4.058,666,2.725,667,2.05,672,2.393,692,4.186,737,2.725,750,3.229,752,2.725,762,3.256,763,4.489,764,4.56,765,6.582,766,3.717,767,3.864,768,3.717,769,2.725,770,2.725,771,4.186,772,3.717,773,3.256,774,3.717,775,3.717,776,3.256,777,3.717,778,3.717,779,3.717,780,3.717,781,3.717,782,3.717,783,3.717,784,3.717,785,3.717,786,3.256,787,4.186,788,3.717,789,3.256,790,3.717,791,3.717,792,3.717,793,4.617,794,3.717]],["title/classes/CreateClientCommand.html",[0,0.122,795,3.058]],["body/classes/CreateClientCommand.html",[0,0.117,2,0.871,3,0.106,4,0.106,5,0.094,9,1.041,13,0.167,14,0.948,15,4.315,16,1.862,19,3.81,23,4.652,24,0.827,26,1.04,28,1.144,30,0.533,32,0.526,33,0.011,34,0.651,35,0.35,36,4.945,45,0.106,46,0.007,47,0.007,84,1.729,348,3.95,448,2.434,602,2.204,744,3.5,750,4.186,795,4.065,796,3.5,797,6.329,798,6.329,799,7.226,800,6.329,801,3.996,802,5.043,803,3.996,804,3.996,805,3.996,806,3.996,807,3.996,808,3.996,809,3.996,810,3.996]],["title/classes/CreateClientHandler.html",[0,0.122,479,2.854]],["body/classes/CreateClientHandler.html",[0,0.105,2,0.785,3,0.095,4,0.095,5,0.085,7,1.356,10,2.858,12,1.271,13,0.15,16,1.123,24,0.524,26,0.966,29,1.745,30,0.351,32,0.678,33,0.012,34,0.542,35,0.231,45,0.095,46,0.007,47,0.007,56,0.996,65,0.696,71,0.347,72,0.785,73,1.157,74,0.883,75,1.566,83,1.875,84,2.603,115,2.463,116,1.941,118,1.762,119,2.304,120,1.271,123,2.267,166,1.818,196,1.502,296,3.152,297,4.511,298,3.152,330,2.498,357,3.152,397,1.557,418,2.317,463,2.312,473,1.615,479,3.525,505,3.184,602,3.622,610,2.638,645,3.776,648,2.858,654,2.638,672,2.317,673,2.638,737,2.638,750,3.172,752,3.776,763,4.41,764,4.494,765,6.52,767,3.776,769,2.638,770,2.638,771,4.09,773,3.152,776,3.152,786,3.152,793,3.152,795,4.814,811,3.152,812,3.599,813,3.599,814,3.599,815,4.511,816,3.599,817,3.599,818,3.599,819,5.151,820,3.599,821,3.599,822,3.599,823,3.599,824,3.599,825,3.152,826,3.599,827,3.599,828,3.152,829,3.599,830,3.599,831,3.152,832,3.599,833,3.599,834,3.599,835,3.599,836,3.599,837,5.151,838,3.599,839,3.599,840,3.599,841,3.599,842,3.599,843,3.599,844,3.599,845,3.599,846,5.151,847,3.599,848,3.599,849,3.599,850,3.599,851,3.599,852,3.599,853,3.599]],["title/classes/CreateSystemPermissionCommand.html",[0,0.122,854,2.685]],["body/classes/CreateSystemPermissionCommand.html",[0,0.181,2,1.348,3,0.164,4,0.164,5,0.146,7,2.329,9,1.609,12,2.183,26,1.471,30,0.421,33,0.011,45,0.164,46,0.01,47,0.01,84,2.674,547,4.052,611,4.052,750,3.874,854,4.73,855,4.908,856,5.414]],["title/classes/CreateSystemPermissionHandler.html",[0,0.122,480,2.854]],["body/classes/CreateSystemPermissionHandler.html",[0,0.091,2,0.678,3,0.082,4,0.082,5,0.073,13,0.13,14,0.792,16,1.497,24,0.471,26,0.869,30,0.377,32,0.61,33,0.012,34,0.417,35,0.208,45,0.082,46,0.006,47,0.006,56,0.895,65,0.601,71,0.328,72,0.678,73,1,75,1.206,83,1.724,84,2.971,90,3.686,104,1.799,105,1.396,107,0.94,116,1.745,118,2.35,119,2.277,120,2.314,190,3.945,195,2.47,196,1.298,222,2.724,341,1.031,381,1.894,384,2.002,397,1.346,464,1.894,465,2.002,473,1.396,480,3.168,491,1.799,529,2.28,542,4.868,547,3.788,551,2.339,602,3.613,611,4.032,750,3.231,763,4.055,764,4.193,767,3.394,770,2.28,854,3.945,857,2.28,858,3.11,859,5.531,860,4.845,861,4.63,862,4.63,863,4.63,864,3.11,865,4.055,866,4.492,867,4.392,868,4.866,869,4.392,870,4.866,871,5.035,872,2.47,873,3.11,874,3.11,875,3.11,876,2.724,877,3.11,878,3.11,879,5.531,880,3.11,881,3.11,882,3.11,883,3.11,884,6.551,885,3.394,886,4.63,887,5.531,888,3.11,889,3.11,890,3.11,891,4.63,892,5.531,893,3.11,894,3.11,895,3.11,896,3.11,897,4.63,898,5.531,899,3.11,900,3.11,901,3.11,902,4.63,903,2.724,904,4.63,905,3.11,906,3.11,907,3.11,908,3.11,909,2.724,910,2.724]],["title/classes/CreateSystemPermissionsCli.html",[0,0.122,634,2.854]],["body/classes/CreateSystemPermissionsCli.html",[0,0.147,2,1.097,3,0.133,4,0.133,5,0.118,9,1.31,13,0.21,16,1.097,24,0.659,26,0.944,28,0.974,30,0.441,32,0.852,33,0.011,34,0.644,35,0.29,45,0.133,46,0.009,47,0.009,54,1.895,56,1.251,65,0.973,71,0.32,83,2.228,84,2.176,95,1.955,120,1.776,173,3.442,195,2.028,209,3.093,228,2.652,473,2.257,547,2.774,598,5.24,601,4.866,602,3.567,603,4.741,605,3.238,606,3.442,611,2.774,623,4.741,634,4.426,854,4.163,911,4.405,912,5.136,913,3.994,914,5.029,915,5.029,916,3.994,917,4.405,918,5.029,919,4.405]],["title/classes/CreateUserCli.html",[0,0.122,615,2.685]],["body/classes/CreateUserCli.html",[0,0.112,2,0.838,3,0.102,4,0.102,5,0.091,9,1.855,13,0.16,16,0.838,24,0.689,26,0.721,28,1.118,30,0.461,32,0.891,33,0.012,34,0.642,35,0.303,45,0.102,46,0.007,47,0.007,54,1.448,56,1.044,65,1.206,71,0.28,74,1.324,75,1.405,83,1.944,95,1.632,120,1.357,130,0.699,173,2.63,209,2.926,228,2.026,234,1.315,256,1.735,341,1.274,473,1.725,551,3.599,597,4.958,598,5.222,599,3.052,600,4.122,601,4.498,602,3.44,603,3.956,604,5.463,605,2.474,606,2.63,607,2.341,608,3.366,609,3.366,610,2.818,611,2.12,612,3.052,613,3.366,614,3.366,615,3.474,616,4.727,617,4.727,618,5.924,619,4.727,620,5.924,621,4.727,622,4.727,623,3.956,624,2.63,625,3.366,626,3.366,627,3.366,912,4.286,913,3.052,916,3.052,920,5.396,921,5.396,922,3.843,923,5.396,924,3.843,925,3.843,926,3.843]],["title/classes/CreateUserCommand.html",[0,0.122,607,2.54]],["body/classes/CreateUserCommand.html",[0,0.144,2,1.073,3,0.13,4,0.13,5,0.116,7,1.854,9,1.281,12,1.738,13,0.205,14,1.091,15,4.184,16,1.806,24,0.789,26,1.196,28,1.153,30,0.51,32,0.648,33,0.011,34,0.443,35,0.335,36,4.363,45,0.13,46,0.008,47,0.008,84,2.129,341,2.57,551,3.916,607,3.883,750,4.088,855,3.907,856,4.309,927,6.79,928,6.555,929,4.92,930,4.92,931,4.92,932,4.92]],["title/classes/CreateUserHandle.html",[0,0.122,482,2.854]],["body/classes/CreateUserHandle.html",[0,0.1,2,0.742,3,0.09,4,0.09,5,0.08,13,0.142,14,0.846,16,1.596,24,0.504,26,0.928,30,0.397,32,0.651,33,0.012,34,0.446,35,0.222,45,0.09,46,0.007,47,0.007,56,0.957,65,0.658,71,0.343,72,0.742,73,1.094,75,1.288,83,1.817,84,2.521,90,3.549,104,1.969,105,1.527,107,1.029,116,1.864,118,2.504,119,2.351,120,2.058,123,1.864,156,4.235,166,1.719,170,3.385,190,4.119,195,1.372,196,1.42,341,2.351,343,2.702,381,2.072,384,2.19,397,1.472,406,1.969,466,1.969,473,1.527,482,3.385,491,1.969,518,4.379,530,2.494,551,2.944,600,3.372,602,3.749,607,3.896,648,2.702,750,3.374,763,4.272,764,4.379,767,3.626,770,2.494,771,3.928,857,2.494,860,5.105,865,4.333,871,2.494,872,2.702,876,2.98,909,2.98,910,2.98,933,3.402,934,5.105,935,4.946,936,4.946,937,4.946,938,3.402,939,3.402,940,3.402,941,3.928,942,2.702,943,2.98,944,2.98,945,2.98,946,2.98,947,2.98,948,2.98,949,2.98,950,2.98,951,3.402,952,3.402,953,2.98,954,3.402,955,3.402,956,3.402,957,3.402,958,3.402,959,3.402,960,3.402,961,3.402,962,3.402,963,3.402,964,3.402,965,4.946,966,4.946,967,3.402,968,3.402,969,3.402,970,3.402,971,3.402,972,3.402,973,3.402]],["title/guards/CrudEntityDetectionGuard.html",[974,2.685,975,3.312]],["body/guards/CrudEntityDetectionGuard.html",[0,0.121,3,0.11,4,0.11,5,0.098,13,0.173,24,0.579,26,1.067,28,0.775,30,0.387,32,0.749,33,0.012,34,0.512,35,0.255,45,0.11,46,0.008,47,0.008,56,1.099,65,0.801,71,0.328,72,0.903,74,1.017,75,1.079,78,2.073,83,2.023,95,1.719,105,1.859,107,1.253,116,1.561,118,1.945,119,2.615,120,1.463,124,2.184,156,4.481,170,3.89,198,2.397,218,5.175,234,1.417,266,2.913,381,2.523,384,2.667,385,4.167,396,2.446,425,1.931,975,4.515,976,2.835,977,4.758,978,3.628,979,5.121,980,3.29,981,4.143,982,4.167,983,4.254,984,4.143,985,2.523,986,3.037,987,4.143,988,3.037,989,4.143,990,4.143,991,3.628,992,5.154,993,4.143,994,5.154,995,4.143,996,4.143,997,6.49,998,4.143,999,4.143,1000,4.143,1001,4.143,1002,4.143,1003,4.979,1004,4.143,1005,3.628,1006,4.143,1007,3.29,1008,3.037]],["title/classes/CrudFilterableRequest.html",[0,0.122,1009,2.854]],["body/classes/CrudFilterableRequest.html",[0,0.205,2,1.047,3,0.127,4,0.127,5,0.113,13,0.2,14,1.074,16,1.797,28,1.075,30,0.476,33,0.012,35,0.354,45,0.127,46,0.008,47,0.008,71,0.332,131,1.327,195,1.936,196,2.005,256,2.247,294,1.752,321,2.649,323,5.126,441,3.025,443,2.239,1009,4.295,1010,5.074,1011,4.206,1012,6.992,1013,4.501,1014,6.992,1015,6.494,1016,4.984,1017,4.802,1018,4.802,1019,4.802,1020,4.206,1021,4.802,1022,4.802,1023,4.802,1024,4.984,1025,5.497,1026,4.206,1027,3.521,1028,4.802]],["title/modules/CrudModule.html",[202,1.944,223,2.854]],["body/modules/CrudModule.html",[0,0.146,3,0.132,4,0.132,5,0.117,15,3.244,24,0.506,30,0.438,32,0.655,33,0.012,34,0.448,45,0.132,46,0.009,47,0.009,56,0.962,57,4.145,65,1.242,71,0.337,72,1.084,74,1.576,142,4.357,202,3.503,204,2.623,206,3.95,207,5.099,209,2.152,210,5.703,223,5.142,230,4.394,240,3.715,246,4.134,249,2.744,324,3.95,475,4.866,476,4.357,477,4.357,611,2.744,1029,4.974,1030,7.111,1031,4.974,1032,4.974,1033,4.974,1034,3.647,1035,4.357,1036,4.974,1037,4.974,1038,3.95]],["title/classes/CrudPaginationMeta.html",[0,0.122,1039,2.685]],["body/classes/CrudPaginationMeta.html",[0,0.118,2,0.877,3,0.107,4,0.107,5,0.095,13,0.168,14,0.953,16,1.846,24,0.41,26,1.045,30,0.523,32,0.53,33,0.012,34,0.362,35,0.344,45,0.148,46,0.007,47,0.007,71,0.25,130,0.732,209,2.41,256,2.409,294,1.467,327,2.328,348,4.016,441,3.574,802,5.057,1039,3.586,1040,5.741,1041,5.741,1042,3.195,1043,5.598,1044,5.598,1045,5.951,1046,5.075,1047,5.598,1048,5.075,1049,4.023,1050,5.057,1051,5.571,1052,4.023,1053,4.023,1054,4.023,1055,4.023,1056,4.023,1057,3.393,1058,3.524,1059,3.524,1060,5.075,1061,3.524,1062,4.424,1063,3.524,1064,3.524,1065,3.524,1066,3.524,1067,3.524,1068,3.524]],["title/classes/CrudPaginationRequest.html",[0,0.122,1057,2.54]],["body/classes/CrudPaginationRequest.html",[0,0.178,2,0.802,3,0.097,4,0.097,5,0.087,13,0.153,14,0.895,16,1.76,24,0.78,30,0.477,33,0.012,35,0.358,45,0.097,46,0.007,47,0.007,71,0.314,74,0.903,184,3.581,195,2.936,196,2.184,234,2.269,256,2.132,291,3.223,294,1.342,321,2.029,327,4.43,348,3.785,443,1.715,1009,4.984,1010,4.984,1024,5.565,1025,6.138,1046,4.836,1048,4.836,1057,3.187,1060,2.922,1062,2.922,1069,3.223,1070,4.464,1071,4.836,1072,5.232,1073,6.089,1074,5.232,1075,5.492,1076,5.232,1077,5.232,1078,3.679,1079,5.232,1080,3.679,1081,3.679,1082,5.127,1083,3.679,1084,5.334,1085,4.583,1086,5.232,1087,3.679,1088,3.679,1089,3.679,1090,3.679,1091,6.089,1092,3.679,1093,3.679,1094,6.089,1095,3.679,1096,3.679,1097,3.679,1098,5.232,1099,5.232,1100,3.679,1101,5.232]],["title/classes/CrudPaginationResource.html",[0,0.122,1102,2.685]],["body/classes/CrudPaginationResource.html",[0,0.139,2,1.039,3,0.126,4,0.126,5,0.112,13,0.199,14,1.068,24,0.636,30,0.504,32,0.822,33,0.012,34,0.562,35,0.344,45,0.126,46,0.008,47,0.008,56,1.208,65,1.208,71,0.312,107,1.441,184,3.261,187,5.251,256,1.531,294,1.738,425,2.221,441,2.701,451,3.067,462,4.02,1039,5.24,1040,5.626,1041,3.493,1102,4.02,1103,4.173,1104,4.94,1105,7.674,1106,6.244,1107,6.244,1108,4.764,1109,4.764,1110,6.244,1111,4.764,1112,6.244,1113,4.764,1114,4.764,1115,4.764,1116,4.764]],["title/guards/CrudSearchRequestFiltersGuard.html",[974,2.685,1117,3.312]],["body/guards/CrudSearchRequestFiltersGuard.html",[0,0.174,3,0.117,4,0.117,5,0.104,13,0.184,24,0.604,26,0.828,30,0.404,32,0.782,33,0.012,34,0.535,35,0.266,45,0.117,46,0.008,47,0.008,56,1.148,65,0.854,71,0.301,72,0.963,74,1.084,75,1.546,78,2.165,83,2.091,95,1.795,116,1.664,119,1.968,124,3.13,198,2.555,218,5.274,228,2.328,234,1.511,266,3.219,321,2.436,381,2.689,384,2.843,385,4.352,976,3.022,977,4.917,979,5.258,980,3.507,982,4.352,983,4.368,985,2.689,986,3.237,988,3.237,992,3.507,994,3.507,1007,3.507,1008,3.237,1013,4.318,1070,3.237,1075,3.237,1117,4.715,1118,4.917,1119,3.868,1120,4.416,1121,4.416,1122,3.507,1123,4.715,1124,4.416,1125,3.868,1126,3.868,1127,3.868,1128,3.868,1129,3.868,1130,3.868,1131,3.868,1132,3.237,1133,3.237]],["title/guards/CrudSearchRequestSortablesGuard.html",[974,2.685,1134,3.312]],["body/guards/CrudSearchRequestSortablesGuard.html",[0,0.174,3,0.117,4,0.117,5,0.104,13,0.184,24,0.604,26,0.828,30,0.404,32,0.782,33,0.012,34,0.535,35,0.266,45,0.117,46,0.008,47,0.008,56,1.148,65,0.854,71,0.301,72,0.963,74,1.084,75,1.546,78,2.165,83,2.091,95,1.795,116,1.664,119,1.968,124,3.13,198,2.555,218,5.274,228,2.328,234,1.511,266,3.219,321,2.436,381,2.689,384,2.843,385,4.352,976,3.022,977,4.917,979,5.258,980,3.507,982,4.352,983,4.368,985,2.689,986,3.237,988,3.237,992,3.507,994,3.507,1007,3.507,1008,3.237,1013,4.318,1071,3.507,1075,3.237,1118,4.917,1122,3.507,1123,4.715,1125,3.868,1126,3.868,1127,3.868,1128,3.868,1129,3.868,1130,3.868,1131,3.868,1132,3.237,1133,3.237,1134,4.715,1135,3.868,1136,4.416,1137,4.416,1138,4.416]],["title/classes/CrudSettingsStorage.html",[0,0.122,1034,3.058]],["body/classes/CrudSettingsStorage.html",[0,0.149,2,1.109,3,0.135,4,0.135,5,0.12,13,0.212,14,1.114,24,0.518,30,0.49,32,0.67,33,0.012,34,0.458,35,0.292,45,0.135,46,0.009,47,0.009,56,1.26,57,4.596,65,1.26,71,0.228,74,1.248,118,2.459,131,1.405,182,5.15,195,2.05,196,2.123,209,2.818,462,4.193,1034,4.775,1139,6.637,1140,4.455,1141,7.577,1142,6.514,1143,5.086,1144,5.086,1145,6.514,1146,5.086,1147,6.514]],["title/classes/CrudSortableRequest.html",[0,0.122,1082,2.854]],["body/classes/CrudSortableRequest.html",[0,0.211,2,1.115,3,0.135,4,0.135,5,0.12,13,0.213,14,1.118,16,1.75,28,0.982,30,0.445,33,0.012,35,0.34,45,0.135,46,0.009,47,0.009,71,0.34,131,1.413,195,2.062,196,2.135,256,2.101,294,1.865,321,2.821,323,4.792,441,2.828,443,2.385,1010,4.931,1013,4.639,1020,4.48,1024,5.192,1026,4.48,1027,3.75,1082,4.474,1148,4.48,1149,5.722,1150,5.115,1151,6.651,1152,6.537,1153,5.115,1154,5.115,1155,5.115,1156,5.115]],["title/classes/CrudTransformPaginationInterceptor.html",[0,0.122,1157,3.312]],["body/classes/CrudTransformPaginationInterceptor.html",[0,0.174,2,0.967,3,0.117,4,0.117,5,0.104,13,0.185,24,0.606,26,1.117,30,0.406,32,0.784,33,0.012,34,0.536,35,0.267,45,0.117,46,0.008,47,0.008,56,1.152,65,0.858,71,0.336,72,0.967,74,1.65,116,2.245,118,2.038,119,1.471,234,1.518,244,4.328,443,2.069,484,4.929,983,4.376,985,2.702,1102,3.834,1104,2.857,1157,4.73,1158,5.339,1159,3.887,1160,5.889,1161,5.217,1162,3.887,1163,5.889,1164,4.626,1165,4.437,1166,5.217,1167,5.217,1168,6.294,1169,4.437,1170,5.889,1171,3.887,1172,3.524,1173,3.887,1174,3.887,1175,4.437,1176,4.437,1177,3.887,1178,5.217,1179,3.887,1180,3.887,1181,5.956,1182,5.956,1183,3.887,1184,3.887,1185,3.887]],["title/classes/CrudTransformSingleInterceptor.html",[0,0.122,1186,3.312]],["body/classes/CrudTransformSingleInterceptor.html",[0,0.178,2,1.002,3,0.122,4,0.122,5,0.108,13,0.191,24,0.621,26,1.144,30,0.415,32,0.803,33,0.012,34,0.549,35,0.273,45,0.122,46,0.008,47,0.008,56,1.179,65,0.889,71,0.327,72,1.002,74,1.679,116,2.298,118,2.086,234,1.572,244,4.405,443,2.142,484,5.016,983,4.438,985,2.798,1104,2.958,1158,5.434,1160,5.993,1161,5.34,1162,4.025,1163,5.993,1164,4.691,1166,5.34,1167,5.34,1168,6.383,1170,5.993,1171,4.025,1172,3.649,1173,4.025,1174,4.025,1177,4.025,1178,5.34,1179,4.025,1180,4.025,1183,4.025,1184,4.025,1185,4.025,1186,4.842,1187,4.025,1188,4.595,1189,4.595]],["title/interfaces/ICrudPaginationMetaParameters.html",[130,0.759,1050,3.058]],["body/interfaces/ICrudPaginationMetaParameters.html",[0,0.144,3,0.131,4,0.131,5,0.116,13,0.206,14,1.092,16,1.733,26,0.926,33,0.012,35,0.286,45,0.169,46,0.008,47,0.008,71,0.286,130,0.898,131,1.363,209,3.357,294,1.799,327,2.854,348,4.087,441,3.5,802,4.682,1039,3.176,1040,3.617,1041,3.617,1042,3.918,1043,4.321,1044,4.321,1045,6.425,1046,3.918,1047,4.321,1048,3.918,1050,5.193,1057,4.562,1058,4.321,1059,4.321,1060,5.625,1061,4.321,1062,5.072,1063,4.321,1064,4.321,1065,4.321,1066,4.321,1067,4.321,1068,4.321]],["title/interfaces/ICrudSearchRequestOptions.html",[130,0.759,1190,3.058]],["body/interfaces/ICrudSearchRequestOptions.html",[3,0.139,4,0.139,5,0.124,13,0.219,14,1.137,24,0.823,33,0.011,35,0.354,45,0.139,46,0.009,47,0.009,54,1.978,71,0.327,72,1.144,107,1.587,130,0.955,131,1.45,316,3.592,396,2.889,425,2.447,1010,3.592,1190,4.872,1191,4.597,1192,6.088,1193,6.088,1194,6.088,1195,6.714,1196,8.205,1197,6.714,1198,5.277]],["title/interfaces/IQueryController.html",[130,0.759,1199,3.312]],["body/interfaces/IQueryController.html",[3,0.164,4,0.164,5,0.146,13,0.258,14,1.259,33,0.011,45,0.164,46,0.01,47,0.01,71,0.278,107,1.875,130,1.129,131,1.714,425,3.432,681,3.993,1199,5.847,1200,3.993,1201,5.432,1202,8.122]],["title/classes/InvalidUserException.html",[0,0.122,304,2.685]],["body/classes/InvalidUserException.html",[0,0.136,2,1.012,3,0.123,4,0.123,5,0.109,9,1.209,13,0.193,20,2.429,24,0.473,25,4.706,28,0.937,30,0.418,32,0.611,33,0.012,34,0.418,35,0.208,45,0.123,46,0.008,47,0.008,51,4.875,52,4.875,53,3.687,54,2.313,56,1.187,57,4.312,59,4.875,63,5.811,64,5.811,65,1.187,66,4.188,71,0.208,72,1.012,73,2.21,74,1.506,75,1.598,144,3.177,264,4.066,271,5.376,304,5.211,341,2.28,567,4.066,600,3.979,1203,6.023,1204,4.066,1205,7.317,1206,6.138,1207,4.642,1208,4.642,1209,3.979,1210,4.642]],["title/modules/JwtAuthModule.html",[202,1.944,475,2.854]],["body/modules/JwtAuthModule.html",[0,0.16,3,0.145,4,0.145,5,0.129,33,0.012,45,0.145,46,0.009,47,0.009,71,0.366,72,1.193,105,2.455,110,2.284,202,3.18,204,2.884,214,5.417,225,5.417,226,3.522,230,3.744,240,3.165,246,3.522,249,3.017,301,3.596,303,3.017,466,3.946,474,5.974,475,4.668,491,3.946,492,4.344,521,4.792,551,2.763,579,4.344,1211,5.47,1212,5.47,1213,6.51]],["title/guards/JwtTokenGuard.html",[307,3.058,974,2.685]],["body/guards/JwtTokenGuard.html",[0,0.114,3,0.103,4,0.103,5,0.092,7,1.47,13,0.163,16,1.371,17,1.52,24,0.555,26,1.023,30,0.372,32,0.718,33,0.012,34,0.491,35,0.244,45,0.103,46,0.007,47,0.007,56,1.055,65,0.755,66,2.376,71,0.359,72,0.851,75,1.016,78,1.989,83,1.96,90,3.694,95,1.649,104,2.257,105,1.751,107,1.18,110,1.629,116,1.47,118,2.329,119,2.461,120,1.926,124,2.057,198,2.257,218,5.213,226,2.512,241,2.67,266,1.751,289,6.501,301,2.057,303,2.152,307,3.998,310,2.057,322,3.417,324,3.098,335,2.86,336,4.993,341,1.294,364,3.098,381,2.376,392,2.376,393,2.86,466,2.257,551,1.971,579,3.098,707,2.512,934,5.507,953,3.417,976,2.67,979,4.991,982,3.998,983,4.146,985,2.376,988,2.86,1213,4.777,1214,5.507,1215,3.417,1216,3.901,1217,3.901,1218,3.901,1219,3.998,1220,3.901,1221,3.098,1222,3.901,1223,3.417,1224,5.453,1225,3.901,1226,3.901,1227,3.901,1228,5.453,1229,3.901,1230,3.901,1231,3.901,1232,3.901,1233,5.453,1234,3.901]],["title/classes/OAuth2Request.html",[0,0.122,657,2.107]],["body/classes/OAuth2Request.html",[0,0.147,2,0.578,3,0.07,4,0.07,5,0.062,7,2.127,9,2.092,13,0.11,14,0.701,19,2.644,21,2.644,24,0.767,28,1.142,30,0.486,33,0.011,34,0.643,35,0.362,45,0.07,46,0.005,47,0.005,71,0.225,77,2.806,134,2.372,139,4.732,186,3.006,196,1.712,234,1.931,256,2.295,294,0.966,321,1.462,327,3.735,348,3.513,418,3.634,441,3.155,442,4.441,443,1.235,448,2.497,450,2.261,451,4.596,452,4.156,455,2.806,547,2.261,600,3.895,657,2.071,663,2.162,678,4.848,747,3.438,752,4.475,753,5.347,789,3.591,831,3.591,1075,3.006,1085,3.591,1104,2.639,1122,3.983,1209,3.895,1235,6.388,1236,2.104,1237,3.591,1238,4.392,1239,5.015,1240,5.644,1241,4.1,1242,3.256,1243,2.65,1244,3.591,1245,2.65,1246,6.954,1247,6.455,1248,4.1,1249,2.65,1250,6.104,1251,5.644,1252,5.644,1253,4.944,1254,5.644,1255,5.644,1256,5.644,1257,5.015,1258,4.1,1259,5.644,1260,2.65,1261,2.65,1262,4.1,1263,2.321,1264,2.65,1265,2.65,1266,2.65,1267,2.65,1268,2.65,1269,3.256,1270,3.591,1271,3.591,1272,2.65,1273,2.65]],["title/classes/OAuth2Response.html",[0,0.122,669,2.301]],["body/classes/OAuth2Response.html",[0,0.128,2,0.631,3,0.077,4,0.077,5,0.068,7,2.696,9,2.026,11,4.334,12,1.55,13,0.121,14,0.751,17,2.706,21,3.772,23,4.807,24,0.54,26,0.823,28,1.137,30,0.473,32,0.381,33,0.012,34,0.602,35,0.355,36,1.982,45,0.077,46,0.006,47,0.006,71,0.197,73,2.042,77,3.003,134,3.421,139,3.217,160,4.695,195,1.168,196,1.209,234,2.287,256,2.149,294,1.056,348,4.038,402,3.217,418,2.825,441,3.005,442,4.072,443,1.35,447,3.003,448,3.6,449,3.485,450,3.261,451,4.304,452,4.952,455,4.348,547,2.421,669,2.421,678,3.485,708,2.123,1104,2.825,1132,3.217,1237,3.844,1253,3.844,1269,3.485,1270,3.844,1271,3.844,1274,6.266,1275,2.3,1276,7.154,1277,7.154,1278,5.299,1279,4.388,1280,2.896,1281,3.844,1282,4.388,1283,3.844,1284,4.388,1285,2.896,1286,2.896,1287,2.896,1288,2.536,1289,4.388,1290,4.388,1291,3.844,1292,3.844,1293,4.388,1294,2.896,1295,4.388,1296,2.536,1297,2.536,1298,2.896,1299,2.896,1300,2.896]],["title/entities/Oauth2AccessTokenEntity.html",[93,1.944,396,1.572]],["body/entities/Oauth2AccessTokenEntity.html",[0,0.091,3,0.082,4,0.082,5,0.073,13,0.13,14,0.793,17,2.157,18,3.789,20,2.315,21,2.919,22,3.789,23,3.564,25,3.789,28,1.036,29,3.332,30,0.518,33,0.012,34,0.704,35,0.35,45,0.082,46,0.006,47,0.006,54,1.174,71,0.275,93,2.161,107,0.942,109,3.899,123,2.087,195,1.869,234,2.602,256,2.445,294,1.136,313,1.718,396,1.174,397,1.348,399,2.474,400,4.059,401,3.682,402,3.399,403,4.06,404,6.426,405,4.466,406,3.976,407,5.371,409,6.019,410,3.682,412,4.06,413,2.729,414,2.474,418,2.984,419,3.399,421,3.682,424,2.729,425,2.161,426,4.185,427,2.284,441,2.395,463,2.943,539,3.682,540,2.474,657,2.797,667,1.718,668,1.802,716,2.006,787,3.682,1242,3.682,1301,6.129,1302,5.537,1303,3.115,1304,3.115,1305,3.115,1306,4.636,1307,3.115,1308,4.636,1309,3.115,1310,4.636,1311,4.636,1312,3.115,1313,3.115,1314,3.115,1315,3.115,1316,3.115,1317,4.636,1318,4.06,1319,4.636,1320,3.115,1321,3.115]],["title/entities/Oauth2ClientEntity.html",[396,1.572,463,1.872]],["body/entities/Oauth2ClientEntity.html",[0,0.079,3,0.071,4,0.071,5,0.063,12,1.466,13,0.112,14,0.71,19,2.671,20,1.789,23,4.359,28,1.091,29,3.151,30,0.528,33,0.011,34,0.721,35,0.373,45,0.071,46,0.005,47,0.005,54,1.015,71,0.121,107,0.814,123,2.146,195,2.819,234,1.948,256,2.491,348,2.876,396,1.015,397,1.165,400,3.714,401,4.884,404,6.593,405,4.732,406,1.558,414,3.297,419,1.974,425,1.936,426,4.719,427,1.974,463,1.864,549,3.044,649,4.438,787,3.297,797,4.438,798,5.387,800,4.438,825,3.636,828,3.636,1238,4.438,1242,3.297,1244,3.636,1269,3.297,1301,6.213,1318,3.636,1322,2.359,1323,5.066,1324,5.066,1325,5.066,1326,5.066,1327,4.152,1328,2.693,1329,6.771,1330,7.566,1331,2.693,1332,5.691,1333,4.152,1334,2.693,1335,2.693,1336,2.693,1337,4.152,1338,2.693,1339,4.152,1340,2.693,1341,4.152,1342,4.152,1343,2.693,1344,2.693,1345,2.693,1346,4.152,1347,2.693,1348,4.152,1349,2.693,1350,4.152,1351,2.693,1352,2.693,1353,2.693,1354,4.152,1355,4.152,1356,4.152,1357,4.152,1358,2.693,1359,2.693]],["title/controllers/Oauth2Controller.html",[247,2.301,485,3.058]],["body/controllers/Oauth2Controller.html",[0,0.129,3,0.117,4,0.117,5,0.104,7,2.241,12,1.563,13,0.184,16,1.296,24,0.451,26,1.116,30,0.302,32,0.583,33,0.012,34,0.399,35,0.267,45,0.117,46,0.008,47,0.008,56,1.15,65,0.856,71,0.346,72,0.965,73,1.911,74,1.086,75,1.153,83,2.093,95,1.798,115,3.029,118,2.034,119,1.468,120,2.371,123,2.531,124,2.334,166,2.236,213,3.515,247,3.28,249,2.442,256,1.423,266,2.669,283,3.515,285,3.515,287,3.515,288,4.069,292,5.208,293,3.245,294,1.614,313,2.442,319,2.561,325,3.245,327,2.561,329,3.515,330,2.883,331,4.722,338,3.877,469,3.828,485,4.359,505,2.883,657,3.627,668,2.561,669,3.704,670,2.85,672,2.85,716,2.85,737,3.245,747,2.696,1132,3.245,1360,3.877,1361,4.426,1362,4.426,1363,4.426,1364,5.946,1365,4.426,1366,4.426,1367,4.426,1368,4.426,1369,4.426,1370,4.426,1371,4.426,1372,4.426]],["title/interfaces/Oauth2GrantStrategyInterface.html",[130,0.759,652,2.301]],["body/interfaces/Oauth2GrantStrategyInterface.html",[3,0.111,4,0.111,5,0.099,9,1.094,13,0.175,24,0.584,30,0.391,32,0.756,33,0.012,34,0.517,35,0.315,45,0.111,46,0.008,47,0.008,56,1.11,65,1.11,71,0.293,73,2.258,74,1.408,95,2.124,108,1.958,123,2.982,130,1.189,131,1.161,135,3.694,151,4.558,152,4.057,161,4.558,241,3.927,266,3.708,313,2.317,319,2.43,405,3.32,463,3.489,484,4.207,652,3.165,653,4.474,656,2.874,657,3.926,659,2.874,663,3.878,667,2.317,668,2.43,669,2.317,670,2.704,716,3.694,747,3.495,985,3.495,1373,4.474,1374,3.679,1375,5.739,1376,5.739,1377,5.027,1378,5.739,1379,4.2,1380,5.027,1381,4.2,1382,5.739,1383,5.027]],["title/injectables/Oauth2GrantStrategyRegistry.html",[78,1.521,469,2.685]],["body/injectables/Oauth2GrantStrategyRegistry.html",[0,0.151,3,0.073,4,0.073,5,0.065,9,0.721,13,0.115,14,0.725,16,0.603,24,0.669,26,0.519,28,0.702,30,0.466,32,0.865,33,0.012,34,0.592,35,0.346,45,0.112,46,0.006,47,0.006,56,0.82,65,1.204,71,0.306,72,0.603,73,2.111,74,1.417,75,1.104,78,1.546,80,1.601,83,2.047,95,1.746,108,1.29,118,2.247,119,1.406,120,1.497,123,2.87,124,2.235,134,2.453,141,5.216,144,2.901,151,5.86,152,3.434,195,1.709,196,1.77,198,1.601,228,1.459,266,3.245,313,1.526,319,1.601,405,1.601,448,2.582,462,3.317,463,3.069,469,2.729,496,4.815,652,2.842,653,3.526,656,1.894,657,3.454,659,1.894,663,2.717,667,1.526,668,1.601,669,1.526,670,1.782,718,2.901,747,2.582,764,2.901,986,3.778,1008,3.108,1377,3.713,1380,3.713,1384,2.198,1385,5.153,1386,4.239,1387,4.513,1388,4.239,1389,2.767,1390,6.568,1391,4.239,1392,2.767,1393,4.239,1394,6.463,1395,2.767,1396,4.239,1397,2.767,1398,4.239,1399,2.767,1400,4.239,1401,2.767,1402,4.239,1403,2.424,1404,3.713,1405,4.239,1406,1.894,1407,2.767,1408,2.198,1409,2.198,1410,2.767,1411,4.092,1412,2.767,1413,2.767,1414,2.767,1415,2.767,1416,2.767,1417,2.767,1418,2.767,1419,5.775,1420,4.239,1421,2.767,1422,2.767,1423,2.767]],["title/interfaces/Oauth2OptionsFactoryInterface.html",[130,0.759,1424,3.312]],["body/interfaces/Oauth2OptionsFactoryInterface.html",[3,0.158,4,0.158,5,0.14,13,0.248,30,0.406,33,0.011,45,0.158,46,0.01,47,0.01,56,1.39,65,1.152,71,0.267,95,2.173,130,1.084,131,1.646,181,4.968,209,3.109,1373,4.918,1424,5.707,1425,5.218,1426,8.014,1427,5.957,1428,5.957,1429,5.957]],["title/interfaces/Oauth2PayloadInterface.html",[130,0.759,167,2.685]],["body/interfaces/Oauth2PayloadInterface.html",[3,0.128,4,0.128,5,0.114,7,1.824,9,1.26,12,2.228,13,0.202,14,1.079,16,1.53,17,2.898,20,2.724,28,0.957,33,0.012,35,0.366,45,0.167,46,0.008,47,0.008,71,0.217,93,3.467,108,2.257,109,2.445,110,2.021,123,2.803,130,0.881,131,1.338,139,3.549,167,4.062,316,3.313,341,2.67,448,3.842,704,3.313,707,4.062,714,5.452,718,3.313,719,3.844,720,5.526,721,4.24,974,4.062,1027,3.549,1373,3.313,1383,4.24,1430,6.309,1431,6.309,1432,6.309,1433,4.24,1434,4.841,1435,4.841]],["title/interfaces/Oauth2StrategyOptions.html",[130,0.759,1436,3.058]],["body/interfaces/Oauth2StrategyOptions.html",[0,0.121,3,0.11,4,0.11,5,0.098,13,0.173,14,0.974,16,0.905,28,0.776,33,0.012,35,0.367,45,0.172,46,0.008,47,0.008,71,0.328,72,0.905,74,1.857,78,2.077,119,2.509,130,0.756,131,1.147,202,2.654,204,3.686,228,2.189,450,2.29,470,2.673,496,5.547,652,2.29,663,2.189,1164,4.501,1406,3.896,1408,3.297,1409,3.297,1411,5.552,1436,4.764,1437,3.044,1438,5.691,1439,3.637,1440,5.691,1441,3.637,1442,5.691,1443,3.637,1444,3.637,1445,3.297,1446,3.637,1447,3.637,1448,3.637,1449,3.637,1450,3.637,1451,3.637,1452,3.297,1453,3.637,1454,3.637,1455,3.637,1456,3.637,1457,3.637,1458,3.637,1459,3.637,1460,3.637,1461,5.691,1462,3.637,1463,3.637,1464,5.691,1465,4.522,1466,3.637]],["title/classes/PasswordStrategy.html",[0,0.122,494,2.854]],["body/classes/PasswordStrategy.html",[0,0.097,2,0.724,3,0.088,4,0.088,5,0.078,12,1.173,13,0.138,16,1.379,17,1.294,24,0.585,26,1.187,28,0.453,30,0.392,32,0.757,33,0.012,34,0.518,35,0.258,45,0.088,46,0.006,47,0.006,56,0.94,65,0.94,71,0.351,72,0.724,73,1.847,74,1.411,75,1.265,83,2.192,93,2.266,95,1.913,105,1.491,107,1.004,108,2.266,109,1.678,110,1.386,116,1.832,118,2.164,119,1.906,120,1.716,123,2.65,131,0.918,152,3.17,156,4.203,166,1.678,170,3.326,234,1.136,266,3.021,311,4.072,313,1.832,319,1.922,330,2.787,332,2.909,333,5.54,341,1.101,342,2.909,343,2.638,364,2.638,374,3.563,405,1.922,463,3.261,473,1.491,483,2.435,494,3.326,505,3.067,601,4.536,624,2.273,652,3.17,653,3.933,654,2.435,656,2.273,657,3.67,659,2.273,661,2.273,662,2.638,663,1.751,664,2.638,665,2.96,666,2.435,667,1.832,668,1.922,669,2.681,670,2.138,672,2.138,673,3.563,674,2.638,675,2.435,676,2.638,677,2.638,680,2.909,681,2.138,682,5.034,685,2.909,686,2.909,687,2.909,688,2.909,689,2.909,690,2.909,691,2.909,692,3.86,693,2.909,1467,2.909,1468,3.321,1469,3.321,1470,3.321,1471,3.321,1472,3.321,1473,3.321]],["title/interfaces/QueryDictionary.html",[130,0.759,1474,3.312]],["body/interfaces/QueryDictionary.html",[3,0.166,4,0.166,5,0.148,28,1.012,30,0.428,33,0.011,45,0.166,46,0.01,47,0.01,130,1.144,131,1.737,186,5.441,187,5.08,1200,4.778,1474,5.895,1475,5.508,1476,5.508,1477,6.288]],["title/interfaces/QueryModuleOptions.html",[130,0.759,1478,3.058]],["body/interfaces/QueryModuleOptions.html",[3,0.154,4,0.154,5,0.137,13,0.242,14,1.21,28,1.083,33,0.011,35,0.317,45,0.187,46,0.009,47,0.009,71,0.26,107,1.755,130,1.287,131,1.604,182,3.535,397,3.437,425,3.298,529,5.823,681,3.736,1038,4.609,1200,3.736,1478,5.186,1479,4.609]],["title/interfaces/QueryOptions.html",[130,0.759,182,2.54]],["body/interfaces/QueryOptions.html",[3,0.156,4,0.156,5,0.139,13,0.246,14,1.222,24,0.727,28,1.088,33,0.011,35,0.264,45,0.189,46,0.009,47,0.009,71,0.264,107,1.784,130,1.3,131,1.63,182,4.351,397,2.552,425,3.331,529,4.324,681,3.797,1038,6.343,1200,3.797,1478,4.324,1479,4.684]],["title/classes/RefreshTokenStrategy.html",[0,0.122,495,2.854]],["body/classes/RefreshTokenStrategy.html",[0,0.109,2,0.809,3,0.098,4,0.098,5,0.087,12,1.31,13,0.155,16,1.334,24,0.623,26,1.249,30,0.417,32,0.806,33,0.012,34,0.551,35,0.274,45,0.098,46,0.007,47,0.007,56,1.018,65,1.018,66,2.259,71,0.35,72,0.809,73,1.966,74,1.292,79,3.852,83,2.276,93,1.729,95,2.013,108,2.454,109,1.874,110,1.549,113,3.672,116,1.984,118,2.093,119,1.23,120,1.31,123,2.752,131,1.025,149,2.946,152,3.374,166,1.874,171,2.946,234,1.269,266,2.988,313,2.046,319,2.146,330,2.966,405,2.146,463,3.371,473,1.665,483,2.719,495,3.602,505,3.228,601,4.673,652,3.374,653,4.186,654,2.719,656,2.539,657,3.794,659,2.539,661,2.539,662,2.946,663,1.956,664,2.946,665,2.259,666,2.719,667,2.046,668,2.146,669,2.046,670,2.388,672,2.388,673,3.858,674,2.946,675,2.719,676,2.946,677,2.946,1480,5.831,1481,3.709,1482,3.709,1483,3.709,1484,3.709,1485,3.709,1486,3.709,1487,3.709,1488,3.709]],["title/interfaces/ResourceDictonary.html",[130,0.759,185,3.058]],["body/interfaces/ResourceDictonary.html",[3,0.154,4,0.154,5,0.137,28,0.964,30,0.395,33,0.011,45,0.187,46,0.009,47,0.009,54,2.187,71,0.342,72,1.265,130,1.287,131,1.604,176,3.972,177,4.609,178,5.084,179,4.308,180,5.084,181,4.554,182,4.308,183,5.084,184,3.972,185,5.186,186,5.186,187,4.841,1476,5.084,1489,5.804]],["title/controllers/RolesController.html",[247,2.301,487,3.058]],["body/controllers/RolesController.html",[0,0.181,3,0.164,4,0.164,5,0.146,33,0.011,45,0.164,46,0.01,47,0.01,71,0.329,72,1.348,247,4.052,249,3.409,288,4.23,293,4.531,294,2.254,325,4.531,327,3.576,487,5.386,1490,5.414,1491,6.181,1492,6.181]],["title/classes/SetupCli.html",[0,0.122,635,2.854]],["body/classes/SetupCli.html",[0,0.141,2,1.053,3,0.128,4,0.128,5,0.114,9,1.257,13,0.201,16,1.053,24,0.641,26,0.906,28,0.955,30,0.429,32,0.829,33,0.012,34,0.631,35,0.282,45,0.128,46,0.008,47,0.008,54,1.82,56,1.218,65,0.934,71,0.333,75,1.257,83,2.185,84,2.089,95,1.904,120,2.224,173,3.304,195,1.947,209,3.033,228,2.546,473,2.167,601,4.813,602,3.474,603,4.617,605,3.108,606,3.304,607,3.836,611,2.663,623,4.617,624,3.304,635,4.31,854,4.055,866,4.617,903,4.229,912,5.002,913,3.834,916,3.834,917,4.229,919,4.229,1035,4.229,1493,6.14,1494,4.229,1495,4.828,1496,4.828,1497,4.828,1498,4.828,1499,4.828]],["title/classes/SignInDto.html",[0,0.122,255,3.058]],["body/classes/SignInDto.html",[0,0.196,2,1.161,3,0.141,4,0.141,5,0.125,9,2.007,13,0.222,14,1.147,28,1.135,30,0.457,33,0.011,35,0.345,45,0.141,46,0.009,47,0.009,71,0.301,255,4.917,256,2.156,294,1.942,321,2.937,323,5.382,441,3.176,600,4.596,928,5.875,1209,4.596,1236,4.229,1263,4.665,1500,6.431,1501,6.707,1502,5.325]],["title/injectables/StrategyExplorer.html",[78,1.521,470,2.685]],["body/injectables/StrategyExplorer.html",[0,0.102,3,0.093,4,0.093,5,0.082,13,0.146,16,0.762,24,0.66,26,0.656,28,0.975,30,0.468,32,0.905,33,0.012,34,0.583,35,0.369,45,0.157,46,0.007,47,0.007,56,0.975,65,1.253,71,0.308,72,0.762,74,1.757,78,1.839,80,2.022,119,2.373,130,0.636,187,2.391,202,3.02,204,3.622,228,1.842,450,3.264,462,2.25,470,3.246,496,4.338,652,1.927,663,1.842,1133,2.562,1164,4.422,1406,3.451,1408,2.775,1409,2.775,1411,5.684,1436,4.338,1437,2.562,1438,6.269,1439,3.061,1440,5.674,1441,3.061,1442,6.269,1443,3.061,1444,3.061,1445,2.775,1446,5.674,1447,3.061,1448,3.061,1449,3.061,1450,5.183,1451,5.183,1452,2.775,1453,3.061,1454,3.061,1455,3.061,1456,3.061,1457,3.061,1458,3.061,1459,3.061,1460,5.183,1461,6.463,1462,3.061,1463,4.417,1464,5.183,1465,4.005,1466,3.061,1503,5.043,1504,3.494,1505,3.494,1506,3.494,1507,3.494,1508,3.494,1509,3.494,1510,3.494,1511,3.494]],["title/interfaces/SystemAdminInterface.html",[130,0.759,518,2.854]],["body/interfaces/SystemAdminInterface.html",[3,0.13,4,0.13,5,0.115,9,1.274,13,0.204,24,0.498,28,1.081,30,0.333,32,0.644,33,0.012,34,0.441,35,0.219,45,0.13,46,0.008,47,0.008,56,1.229,65,0.946,71,0.285,73,2.268,74,1.201,84,3.053,95,1.921,107,1.48,130,0.89,131,1.352,135,4.09,146,3.587,152,3.505,156,4.672,304,3.15,310,3.72,341,2.107,447,4.348,518,4.348,600,3.676,747,3.869,927,6.541,1209,4.321,1512,5.565,1513,4.286,1514,5.565,1515,5.565,1516,5.565,1517,4.893,1518,4.893,1519,5.565,1520,3.886]],["title/controllers/TokenController.html",[247,2.301,489,3.058]],["body/controllers/TokenController.html",[0,0.076,3,0.069,4,0.069,5,0.061,13,0.108,15,3.787,17,1.569,20,2.133,24,0.568,26,0.486,29,1.255,30,0.38,32,0.734,33,0.012,34,0.502,35,0.25,45,0.131,46,0.005,47,0.005,56,0.779,65,1.078,66,2.452,71,0.309,72,0.564,74,0.988,75,1.287,83,2.337,85,1.898,90,2.396,95,1.218,104,1.498,105,1.162,107,0.783,110,1.081,119,2.002,120,1.745,124,2.123,138,1.898,184,1.772,209,2.138,234,1.691,247,2.221,249,1.428,256,1.792,283,3.198,285,2.056,288,1.772,293,1.898,294,0.944,301,3.952,302,1.772,303,2.221,314,2.268,315,2.268,325,1.898,327,1.498,335,1.898,392,1.577,396,1.862,429,4.427,450,2.221,489,2.952,769,1.898,885,2.952,1009,1.772,1013,3.589,1016,2.056,1057,3.395,1070,2.952,1082,1.772,1102,1.667,1123,3.198,1149,2.056,1164,2.592,1192,3.198,1193,3.198,1194,3.198,1219,1.898,1223,2.268,1387,2.268,1521,2.268,1522,4.027,1523,4.942,1524,4.027,1525,4.027,1526,2.589,1527,2.589,1528,2.589,1529,6.674,1530,2.589,1531,2.589,1532,2.589,1533,2.589,1534,2.589,1535,2.589,1536,2.589,1537,2.589,1538,2.589,1539,2.589,1540,2.056,1541,2.056,1542,3.198,1543,2.056,1544,2.056,1545,2.589,1546,2.589,1547,3.527,1548,3.527,1549,2.589,1550,4.027,1551,4.027,1552,4.027,1553,2.589,1554,2.589,1555,2.589,1556,2.589,1557,7.496,1558,2.268,1559,7.496,1560,4.027,1561,2.268,1562,2.589,1563,2.268,1564,2.589,1565,2.268,1566,2.589,1567,2.268,1568,2.268,1569,2.589,1570,2.268,1571,2.589,1572,2.268,1573,4.027,1574,2.268,1575,2.268,1576,2.268,1577,2.589,1578,2.268,1579,2.268,1580,2.589,1581,2.589,1582,2.589,1583,2.589,1584,2.589,1585,4.942,1586,2.589,1587,2.589,1588,2.589,1589,2.589,1590,2.589,1591,2.589,1592,2.589,1593,2.589,1594,2.589]],["title/classes/TokenResponse.html",[0,0.122,317,2.854]],["body/classes/TokenResponse.html",[0,0.135,2,0.677,3,0.082,4,0.082,5,0.073,7,2.974,9,1.902,11,4.488,12,2.162,13,0.129,14,0.791,17,2.674,18,4.865,21,3.748,22,4.865,24,0.316,26,0.868,28,1.086,29,3.685,30,0.484,32,0.409,33,0.012,34,0.64,35,0.335,45,0.082,46,0.006,47,0.006,71,0.207,73,1.486,77,4.697,134,2.675,234,2.348,256,2.206,294,1.132,295,5.362,317,3.164,341,1.029,348,3.839,402,3.39,410,3.672,418,2.977,421,3.672,441,3.076,442,4.329,443,1.447,447,3.164,448,2.816,449,3.672,450,2.55,451,2.977,452,5.027,453,5.362,455,4.697,708,2.276,1275,2.466,1281,5.362,1283,6.399,1288,4.05,1296,2.719,1297,2.719,1332,5.362,1595,6.399,1596,7.109,1597,7.109,1598,3.105,1599,4.624,1600,3.105,1601,3.105,1602,3.105,1603,3.105,1604,4.624,1605,3.105,1606,3.105,1607,3.105,1608,3.105]],["title/classes/UserClass.html",[0,0.122,310,2.199]],["body/classes/UserClass.html",[0,0.165,2,0.893,3,0.108,4,0.108,5,0.096,9,1.81,13,0.171,14,0.965,20,2.881,24,0.574,26,0.768,27,4.135,28,1.147,30,0.497,32,0.743,33,0.012,34,0.626,35,0.338,45,0.149,46,0.007,47,0.007,56,1.091,57,3.559,65,1.091,71,0.253,74,1.384,75,1.066,130,0.745,234,1.93,256,1.813,294,1.494,310,3.402,341,2.305,441,2.791,442,3.929,443,1.909,450,2.259,451,3.631,452,4.475,455,3.86,1209,4.793,1609,3.253,1610,5.64,1611,6.089,1612,5.64,1613,4.94,1614,4.096,1615,4.94,1616,5.524,1617,4.096,1618,4.096,1619,4.94,1620,4.94,1621,3.587,1622,3.587]],["title/interfaces/UserClassPayload.html",[130,0.759,1616,3.058]],["body/interfaces/UserClassPayload.html",[0,0.184,3,0.127,4,0.127,5,0.113,9,1.634,13,0.2,14,1.074,20,2.912,27,3.521,28,1.149,33,0.012,34,0.565,35,0.332,45,0.166,46,0.008,47,0.008,57,2.649,71,0.281,74,1.54,75,1.25,130,0.874,131,1.327,234,2.147,294,1.752,310,2.532,341,2.081,441,3.025,442,4.258,443,2.239,452,4.041,1209,4.813,1609,3.814,1611,4.206,1613,4.206,1615,4.206,1616,5.435,1619,5.497,1620,5.497,1621,4.206,1622,4.206]],["title/interfaces/UserLoaderInterface.html",[130,0.759,155,2.685]],["body/interfaces/UserLoaderInterface.html",[3,0.137,4,0.137,5,0.122,9,1.347,13,0.216,20,2.326,24,0.527,25,5.218,28,0.987,30,0.352,32,0.681,33,0.012,34,0.466,35,0.232,45,0.137,46,0.009,47,0.009,56,1.273,65,1,71,0.295,73,1.663,95,1.991,107,1.564,130,1.433,131,1.429,134,3.81,135,4.909,155,4.239,156,4.556,310,2.728,341,2.183,707,4.239,1149,5.229,1520,4.108,1623,4.827,1624,4.531,1625,6.585,1626,7.625,1627,6.585,1628,5.173]],["title/classes/UserPayload.html",[0,0.122,168,3.058]],["body/classes/UserPayload.html",[0,0.128,2,0.951,3,0.116,4,0.116,5,0.103,9,1.136,13,0.182,14,1.007,15,4.086,16,1.812,17,2.781,20,2.632,24,0.444,26,1.105,28,1.088,30,0.508,32,0.575,33,0.011,34,0.393,35,0.366,45,0.116,46,0.008,47,0.008,71,0.264,93,3.474,108,2.034,109,2.204,110,1.821,116,2.219,167,4.291,168,5.232,195,1.759,196,1.821,341,1.952,704,2.985,705,5.157,707,3.791,708,3.198,711,3.821,712,3.821,713,3.821,714,4.886,716,2.808,717,3.821,719,4.676,1209,4.312,1291,5.157,1292,5.157,1623,5.629,1629,5.888,1630,5.888,1631,5.888]],["title/interfaces/UserValidatorInterface.html",[130,0.759,311,2.685]],["body/interfaces/UserValidatorInterface.html",[3,0.131,4,0.131,5,0.116,9,1.285,13,0.206,24,0.502,28,1.083,30,0.336,32,0.65,33,0.012,34,0.444,35,0.221,45,0.131,46,0.008,47,0.008,56,1.235,65,0.954,71,0.286,73,2.053,74,1.211,95,1.931,107,1.492,130,0.898,131,1.363,135,4.112,146,3.617,152,4.28,156,4.599,304,3.176,310,3.735,311,4.112,341,2.118,447,4.371,600,4.599,747,3.89,1209,4.334,1514,5.595,1515,5.595,1516,5.595,1519,5.595,1520,3.918,1623,4.682,1632,4.321,1633,4.933,1634,4.933]],["title/coverage.html",[1635,5.002]],["body/coverage.html",[0,0.238,1,1.266,5,0.041,6,1.512,7,1.846,8,2.303,12,1.324,33,0.012,35,0.077,46,0.004,47,0.004,48,1.182,49,1.512,50,2.303,75,0.45,78,2.056,79,0.999,81,1.512,82,1.512,93,0.805,109,0.872,113,0.952,130,1.347,132,1.512,133,2.303,147,1.266,148,1.512,149,2.303,155,1.112,167,1.112,168,1.266,169,1.266,176,1.182,177,2.303,182,1.052,185,1.266,188,1.371,189,1.512,209,0.747,221,1.371,240,0.999,244,2.414,247,2.423,248,1.266,250,1.512,251,1.371,255,1.266,262,1.266,266,1.302,299,1.266,301,0.91,303,1.6,304,1.112,307,1.266,310,0.91,311,1.112,317,1.182,330,0.837,341,1.457,392,1.052,396,2.319,398,3.414,399,2.303,429,1.266,430,2.303,431,2.303,458,4.887,463,1.302,464,1.052,465,1.112,466,1.678,469,1.112,470,1.112,471,1.371,478,1.182,479,1.182,480,1.182,482,1.182,485,1.266,487,1.266,489,1.266,491,0.999,493,1.182,494,1.182,495,1.182,497,1.266,499,1.371,501,1.371,502,1.371,503,1.371,504,1.371,505,0.837,507,1.371,508,1.371,509,1.371,518,1.182,527,1.512,542,1.182,546,1.512,547,2.068,551,1.465,558,2.54,566,1.512,581,1.512,582,1.512,597,1.266,598,2.749,599,2.303,607,1.052,611,2.068,615,1.112,634,1.182,635,1.182,645,1.266,646,1.512,650,1.512,651,1.512,652,0.952,657,0.872,661,1.182,663,1.529,665,1.052,669,0.952,694,1.182,695,1.512,703,2.303,704,2.566,722,1.512,750,3.445,751,1.512,762,1.512,795,1.266,796,1.512,811,1.512,854,1.112,855,2.303,857,3.591,866,1.266,867,1.371,868,1.371,869,1.371,870,1.371,871,2.126,885,1.266,911,1.512,941,1.371,942,1.371,974,2.828,975,1.371,977,2.749,978,1.512,1009,1.182,1010,3.007,1011,1.512,1034,1.266,1039,1.112,1040,2.749,1041,2.126,1042,2.303,1050,1.266,1057,1.052,1069,1.512,1082,1.182,1084,2.54,1102,1.112,1103,1.512,1117,1.371,1118,2.749,1119,1.512,1134,1.371,1135,1.512,1139,1.512,1140,1.512,1148,1.512,1157,1.371,1158,2.303,1159,1.512,1186,1.371,1187,1.512,1190,1.266,1191,1.512,1199,1.371,1200,2.828,1201,1.512,1203,1.512,1204,1.512,1214,1.512,1215,1.512,1221,1.371,1235,1.512,1236,2.303,1274,1.512,1275,2.303,1301,2.978,1322,2.54,1360,1.512,1373,2.566,1374,1.512,1384,1.371,1406,1.182,1424,1.371,1425,1.512,1436,1.266,1437,2.749,1467,1.512,1474,1.371,1475,1.512,1478,1.266,1479,2.303,1480,1.512,1490,1.512,1493,1.512,1494,1.512,1500,1.512,1512,1.512,1513,1.512,1521,1.512,1540,1.371,1541,1.371,1542,1.371,1543,1.371,1544,1.371,1595,1.512,1609,2.303,1616,1.266,1623,2.749,1624,1.512,1632,1.512,1635,1.512,1636,1.727,1637,1.727,1638,8.583,1639,7.157,1640,8.167,1641,1.512,1642,7.933,1643,3.75,1644,4.394,1645,3.75,1646,1.727,1647,1.727,1648,1.727,1649,1.727,1650,5.917,1651,5.637,1652,1.727,1653,4.29,1654,5.304,1655,4.898,1656,3.285,1657,2.54,1658,1.512,1659,2.54,1660,2.54,1661,1.512,1662,1.512,1663,4.394,1664,1.727,1665,1.727,1666,2.9,1667,1.727,1668,1.727,1669,6.357,1670,3.75,1671,2.9,1672,1.727,1673,1.727,1674,1.727,1675,3.75,1676,1.727,1677,2.9,1678,2.9,1679,1.727,1680,1.727,1681,1.727,1682,1.727,1683,1.727,1684,1.512,1685,3.489,1686,2.54,1687,1.727,1688,1.512,1689,1.371,1690,1.512,1691,1.512,1692,1.727,1693,1.727]],["title/dependencies.html",[629,3.681,1694,3.043]],["body/dependencies.html",[0,0.197,33,0.012,46,0.009,47,0.009,72,1.171,105,3.027,160,5.356,162,5.907,164,6.772,165,5.907,198,3.109,226,4.342,321,2.964,443,2.505,468,4.267,473,2.412,605,3.459,606,3.677,629,4.944,815,4.706,1172,4.267,1465,4.267,1695,6.744,1696,6.744,1697,5.373,1698,6.744,1699,5.373,1700,6.744,1701,6.744,1702,5.373,1703,5.373,1704,5.373,1705,5.373,1706,7.372,1707,5.373,1708,5.373,1709,5.373]],["title/miscellaneous/enumerations.html",[1710,2.236,1711,4.398]],["body/miscellaneous/enumerations.html",[13,0.216,33,0.012,46,0.009,47,0.009,123,2.482,196,3.611,316,3.54,341,2.183,704,4.506,707,3.33,714,4.827,1015,5.768,1151,5.768,1200,3.33,1219,3.793,1373,3.54,1433,4.531,1710,3.33,1711,4.531,1712,5.173,1713,6.585,1714,4.108,1715,5.173,1716,6.585,1717,5.173,1718,5.173,1719,5.173,1720,5.173,1721,5.173,1722,5.173,1723,5.173,1724,5.173,1725,5.173,1726,5.173,1727,5.173,1728,5.173,1729,5.173,1730,5.173,1731,5.173,1732,5.173,1733,5.173,1734,5.173,1735,5.173,1736,5.173,1737,6.585,1738,6.585]],["title/index.html",[13,0.145,1739,3.474,1740,3.474]],["body/index.html",[33,0.01,46,0.01,47,0.01]],["title/modules.html",[204,3.011]],["body/modules.html",[33,0.01,46,0.01,47,0.01,203,4.994,204,3.316,220,4.61,223,4.303,475,4.303,628,4.61,1404,7.146,1741,8.158,1742,8.323,1743,6.288,1744,6.288,1745,6.288]],["title/overview.html",[1746,5.002]],["body/overview.html",[2,1.257,33,0.011,46,0.009,47,0.009,80,3.337,131,1.593,201,4.58,202,2.689,204,3.041,240,3.337,246,3.713,249,3.181,397,2.495,615,5.102,628,5.959,629,4.228,630,5.051,631,5.051,632,5.051,633,5.051,634,5.424,635,5.424,636,6.172,637,5.051,638,5.051,976,3.947,1746,5.051,1747,5.767,1748,7.046,1749,7.046,1750,5.767,1751,5.767]],["title/properties.html",[14,0.859,1694,3.043]],["body/properties.html",[9,1.582,14,1.039,33,0.011,46,0.01,47,0.01,90,2.947,288,4.159,605,4.682,1752,6.077,1753,6.077,1754,7.784,1755,6.077,1756,6.077,1757,6.077,1758,6.077,1759,6.077,1760,6.077,1761,7.273,1762,7.273,1763,6.077,1764,6.077,1765,6.077,1766,6.077]],["title/miscellaneous/typealiases.html",[1710,2.236,1767,5.021]],["body/miscellaneous/typealiases.html",[13,0.247,28,0.976,33,0.011,35,0.345,46,0.009,47,0.009,181,4.608,244,4.608,802,4.338,1198,5.685,1384,4.7,1394,6.27,1403,5.183,1685,4.7,1689,5.685,1710,3.81,1714,4.7,1768,5.918,1769,7.158,1770,5.918,1771,7.158,1772,5.183,1773,5.918,1774,7.158,1775,7.158,1776,5.918,1777,5.918,1778,5.918,1779,5.918]],["title/miscellaneous/variables.html",[1710,2.236,1780,4.398]],["body/miscellaneous/variables.html",[7,1.737,12,0.937,13,0.065,14,0.702,20,0.549,28,0.88,33,0.012,34,0.239,35,0.342,46,0.004,47,0.004,54,1,74,1.316,75,1.069,79,0.899,83,0.485,90,1.683,95,0.47,113,1.464,119,2.339,120,0.937,195,3.145,196,3.257,209,1.148,221,2.107,240,1.535,241,1.816,244,1.708,266,2.068,287,1.235,290,1.362,299,2.545,329,2.107,330,0.754,341,1.361,377,1.362,396,2.129,397,0.673,406,0.899,450,0.857,458,1.235,469,1.001,470,1.001,471,2.107,478,1.064,479,1.064,480,1.064,482,1.064,493,1.064,494,1.064,495,1.064,501,2.107,502,2.107,503,2.107,504,2.107,505,1.287,506,2.324,507,2.107,508,2.107,509,2.107,542,1.064,547,1.464,549,2.545,611,2.264,612,1.235,661,1.816,663,1.399,681,1.001,718,1.064,750,1.399,769,1.14,857,3.378,866,1.945,867,2.107,868,2.107,869,2.757,870,2.107,871,3.009,872,2.107,885,1.945,941,2.107,942,1.235,943,1.362,944,1.362,945,1.362,946,1.362,947,1.362,948,1.362,949,1.362,950,1.362,983,0.947,991,3.041,1003,2.324,1005,1.362,1013,1.708,1016,1.235,1027,3.009,1039,1.001,1045,2.107,1057,1.616,1070,1.945,1071,1.235,1102,1.001,1104,1.708,1118,1.945,1133,1.14,1164,2.642,1190,1.14,1192,1.235,1193,3.66,1194,1.235,1195,3.595,1197,3.041,1198,2.107,1219,1.14,1221,2.107,1406,1.816,1437,1.14,1445,1.235,1452,2.757,1540,2.107,1541,2.107,1542,2.107,1543,2.107,1544,2.107,1547,1.362,1548,1.362,1558,1.362,1561,1.362,1563,1.362,1565,1.362,1567,1.362,1568,1.362,1570,1.362,1572,1.362,1574,1.362,1575,1.362,1576,1.362,1578,1.362,1579,1.362,1641,1.362,1653,1.362,1656,3.041,1657,3.595,1658,3.041,1659,3.595,1660,2.324,1661,2.324,1662,2.324,1684,1.362,1685,3.26,1686,3.595,1688,2.324,1689,2.107,1690,1.362,1691,2.324,1710,1.001,1714,2.107,1772,4.036,1780,1.362,1781,3.472,1782,5.895,1783,1.555,1784,4.608,1785,3.472,1786,1.555,1787,1.555,1788,4.104,1789,1.555,1790,1.555,1791,1.555,1792,1.555,1793,1.555,1794,1.555,1795,1.555,1796,2.654,1797,1.555,1798,1.555,1799,1.555,1800,3.472,1801,3.472,1802,1.555,1803,1.555,1804,1.555,1805,1.555,1806,1.555,1807,4.104,1808,2.654,1809,1.555,1810,1.555,1811,1.555,1812,1.555,1813,1.555,1814,1.555,1815,2.654,1816,1.555,1817,2.654,1818,2.654,1819,2.654,1820,2.654,1821,2.654,1822,1.555,1823,2.654,1824,1.555,1825,1.555,1826,2.654,1827,1.555,1828,6.459,1829,6.459,1830,2.654,1831,1.555,1832,1.555,1833,1.555,1834,1.555,1835,1.555,1836,2.654,1837,1.555,1838,1.555,1839,1.555,1840,2.654,1841,1.555,1842,1.555,1843,4.608,1844,4.104,1845,3.472,1846,1.555,1847,3.472,1848,1.555,1849,1.555,1850,3.472,1851,1.555,1852,1.555,1853,1.555,1854,1.555,1855,1.555,1856,1.555,1857,1.555,1858,1.555,1859,1.555,1860,2.654,1861,3.472,1862,4.608,1863,5.019,1864,1.555,1865,2.654,1866,1.555,1867,1.555,1868,1.555,1869,1.555,1870,1.555,1871,1.555,1872,1.555,1873,1.555,1874,1.555,1875,1.555,1876,2.654,1877,1.555,1878,1.555]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":1703,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1678,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["00:00:00",{"_index":1254,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["0123456789abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz",{"_index":944,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"classes/OAuth2Request.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"controllers/TokenController.html":{}}}],["1.0.0",{"_index":1752,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1084,"title":{},"body":{"classes/CrudPaginationRequest.html":{},"coverage.html":{}}}],["10.0.0",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":692,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{}}}],["1000).gettime",{"_index":794,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(200)@isoptional",{"_index":1087,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["11",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":532,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["14",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":1751,"title":{},"body":{"overview.html":{}}}],["1970",{"_index":1257,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["1970.'})@expose({name",{"_index":1264,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":1080,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["2.4.1",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1679,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":942,"title":{},"body":{"classes/CreateUserHandle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":1086,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["201",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["25",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["3.12.5",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["30d",{"_index":239,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["33",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":825,"title":{},"body":{"classes/CreateClientHandler.html":{},"entities/Oauth2ClientEntity.html":{}}}],["365",{"_index":837,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["38",{"_index":1750,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1748,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1008,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["401",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["403",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["5",{"_index":1747,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1318,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["6",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1749,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["7200",{"_index":828,"title":{},"body":{"classes/CreateClientHandler.html":{},"entities/Oauth2ClientEntity.html":{}}}],["75",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":407,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["_",{"_index":1033,"title":{},"body":{"modules/CrudModule.html":{}}}],["_.defaults(options",{"_index":1037,"title":{},"body":{"modules/CrudModule.html":{}}}],["_.find(columns",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__oauth2grantstrategy__",{"_index":1445,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"miscellaneous/variables.html":{}}}],["a.concat(b",{"_index":1457,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["access",{"_index":12,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateUserCommand.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/TokenResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":402,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/TokenResponse.html":{}}}],["access_token_expires_at",{"_index":410,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/TokenResponse.html":{}}}],["access_token_expires_in_ms",{"_index":1599,"title":{},"body":{"classes/TokenResponse.html":{}}}],["access_token_lifetime",{"_index":1327,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["accessable",{"_index":1552,"title":{},"body":{"controllers/TokenController.html":{}}}],["accessorrole",{"_index":1769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":1072,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["accesstoken",{"_index":17,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserPayload.html":{}}}],["accesstoken.accesstoken",{"_index":689,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.accesstokenexpiresat",{"_index":175,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["accesstoken.accesstokenexpiresat.gettime",{"_index":691,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.client",{"_index":781,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstoken.createdat",{"_index":782,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstoken.createdfrom",{"_index":783,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstoken.refreshtoken",{"_index":690,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.refreshtokenexpiresat.gettime",{"_index":693,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.scope",{"_index":785,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstokencreatedevent",{"_index":1,"title":{"classes/AccessTokenCreatedEvent.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/CreateAccessTokenHandler.html":{},"coverage.html":{}}}],["accesstokenexp",{"_index":1276,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["accesstokenexpirems",{"_index":1596,"title":{},"body":{"classes/TokenResponse.html":{}}}],["accesstokenexpiresat",{"_index":18,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/TokenResponse.html":{}}}],["accesstokenlifetime",{"_index":797,"title":{},"body":{"classes/CreateClientCommand.html":{},"entities/Oauth2ClientEntity.html":{}}}],["accesstokennotfoundexception",{"_index":48,"title":{"classes/AccessTokenNotFoundException.html":{}},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"coverage.html":{}}}],["accesstokennotfoundexception.withaccesstoken(accesstoken",{"_index":125,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["accesstokennotfoundexception.withrefreshtoken(refreshtoken",{"_index":126,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["accesstokenrepository",{"_index":79,"title":{"injectables/AccessTokenRepository.html":{}},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstokenrepositoryinterface",{"_index":113,"title":{"interfaces/AccessTokenRepositoryInterface.html":{}},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstokenstrategy",{"_index":147,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["accoss",{"_index":109,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"entities/Oauth2AccessTokenEntity.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/UserPayload.html":{},"coverage.html":{}}}],["account",{"_index":959,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["acess",{"_index":1282,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["address",{"_index":1613,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["admin",{"_index":903,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/SetupCli.html":{}}}],["admin.config",{"_index":219,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.interface",{"_index":940,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["admin.interface.ts",{"_index":1513,"title":{},"body":{"interfaces/SystemAdminInterface.html":{},"coverage.html":{}}}],["admin.interface.ts:18",{"_index":1518,"title":{},"body":{"interfaces/SystemAdminInterface.html":{}}}],["admin@admin.com",{"_index":1499,"title":{},"body":{"classes/SetupCli.html":{}}}],["adminconfig",{"_index":176,"title":{"interfaces/AdminConfig.html":{}},"body":{"interfaces/AdminConfig.html":{},"modules/AdminModule.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{}}}],["administration",{"_index":1753,"title":{},"body":{"properties.html":{}}}],["administrator",{"_index":612,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{},"miscellaneous/variables.html":{}}}],["adminloader",{"_index":188,"title":{"injectables/AdminLoader.html":{}},"body":{"injectables/AdminLoader.html":{},"coverage.html":{}}}],["adminmodule",{"_index":203,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{}}}],["adminoptions",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminrole",{"_index":896,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["adminrole.displaytitle",{"_index":898,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["adminrole.permissions",{"_index":900,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["adminrole.save",{"_index":901,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["adminrole.slug",{"_index":899,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["adminrolename",{"_index":1038,"title":{},"body":{"modules/CrudModule.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{}}}],["adminuser",{"_index":955,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["adminuser.email",{"_index":962,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["adminuser.id",{"_index":965,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["aliases",{"_index":1768,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allof",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":1132,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/OAuth2Response.html":{},"controllers/Oauth2Controller.html":{}}}],["always",{"_index":1292,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/UserPayload.html":{}}}],["any).user.id",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["any).usertoken",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["api",{"_index":1240,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["apibearerauth",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["apibody",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudPaginationRequest.html":{}}}],["apiextramodels(crudfilterablerequest",{"_index":1097,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["apiextramodels(crudpaginationrequest",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(crudpaginationresource",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(responsetype",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(userclass",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiokresponse",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":441,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"entities/AuthRoleEntity.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationResource.html":{},"classes/CrudSortableRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/SignInDto.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["apiproperty()@column('varchar",{"_index":568,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["apiproperty()@column({name",{"_index":1303,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["apiproperty()@primarycolumn('varchar",{"_index":573,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["apiproperty()@primarygeneratedcolumn('uuid",{"_index":1313,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["apiproperty({description",{"_index":453,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/TokenResponse.html":{}}}],["apiproperty({enum",{"_index":1017,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["apiproperty({type",{"_index":451,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/CrudPaginationResource.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{}}}],["apipropertyoptional",{"_index":1024,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudSortableRequest.html":{}}}],["apipropertyoptional({enum",{"_index":1153,"title":{},"body":{"classes/CrudSortableRequest.html":{}}}],["apipropertyoptional({minimum",{"_index":1079,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["apipropertyoptional({type",{"_index":1074,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["apiresponse",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{}}}],["apitags",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"controllers/TokenController.html":{}}}],["apitags('auth",{"_index":1580,"title":{},"body":{"controllers/TokenController.html":{}}}],["apitags('authentication",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('oauth2",{"_index":1366,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["apitags('roles",{"_index":1492,"title":{},"body":{"controllers/RolesController.html":{}}}],["app_interceptor",{"_index":216,"title":{},"body":{"modules/AdminModule.html":{}}}],["app_pipe",{"_index":217,"title":{},"body":{"modules/AdminModule.html":{}}}],["application",{"_index":139,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["application/json",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":1357,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["applydecorators",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyfilter",{"_index":1555,"title":{},"body":{"controllers/TokenController.html":{}}}],["applysort",{"_index":1546,"title":{},"body":{"controllers/TokenController.html":{}}}],["appropriate",{"_index":1625,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["args",{"_index":916,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{}}}],["arguments",{"_index":613,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["array",{"_index":549,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{},"entities/Oauth2ClientEntity.html":{},"miscellaneous/variables.html":{}}}],["array.from(crypto.getrandomvalues(new",{"_index":945,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["asc",{"_index":1737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["assertion",{"_index":1251,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["assign",{"_index":904,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["assignment.entity",{"_index":579,"title":{},"body":{"entities/AuthRoleEntity.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{}}}],["assignment.entity.ts",{"_index":558,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{},"coverage.html":{}}}],["assignment.entity.ts:17",{"_index":559,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{}}}],["assignment.entity.ts:21",{"_index":562,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{}}}],["assignment.entity.ts:25",{"_index":560,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{}}}],["associated",{"_index":1402,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["async",{"_index":83,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["attrs",{"_index":833,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["auth",{"_index":179,"title":{},"body":{"interfaces/AdminConfig.html":{},"modules/AdminModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"interfaces/ResourceDictonary.html":{}}}],["auth.constants",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.module",{"_index":477,"title":{},"body":{"modules/AuthModule.html":{},"modules/CrudModule.html":{}}}],["auth.module.ts",{"_index":1212,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["auth/commands",{"_index":917,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{},"classes/SetupCli.html":{}}}],["auth/commands/create",{"_index":608,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["auth/constants",{"_index":1497,"title":{},"body":{"classes/SetupCli.html":{}}}],["auth/create",{"_index":640,"title":{},"body":{"modules/CliModule.html":{}}}],["auth/decorators/auth",{"_index":1222,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["auth/entities/auth",{"_index":1213,"title":{},"body":{"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{}}}],["auth/interfaces",{"_index":1220,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["auth/setup",{"_index":643,"title":{},"body":{"modules/CliModule.html":{}}}],["authaccesstokenrequired",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":248,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentification",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authjwttokenentity",{"_index":301,"title":{"entities/AuthJwtTokenEntity.html":{}},"body":{"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["authjwttokenresponse",{"_index":429,"title":{"classes/AuthJwtTokenResponse.html":{}},"body":{"classes/AuthJwtTokenResponse.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["authlogintokenresponse",{"_index":262,"title":{"classes/AuthLoginTokenResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"coverage.html":{}}}],["authmodule",{"_index":220,"title":{"modules/AuthModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules.html":{}}}],["authmodule.forroot(options.auth",{"_index":231,"title":{},"body":{"modules/AdminModule.html":{}}}],["author",{"_index":1765,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1224,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["authorization.replace(/bearer/gim",{"_index":1229,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["authorization.trim",{"_index":1226,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["authpermission",{"_index":885,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authpermission.displaytitle",{"_index":887,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["authpermission.group",{"_index":889,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["authpermission.save",{"_index":890,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["authpermission.slug",{"_index":888,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["authpermissionentity",{"_index":464,"title":{"entities/AuthPermissionEntity.html":{}},"body":{"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{},"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{}}}],["authpermissiongroupentity",{"_index":465,"title":{"entities/AuthPermissionGroupEntity.html":{}},"body":{"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{}}}],["authroleassignmententity",{"_index":466,"title":{"entities/AuthRoleAssignmentEntity.html":{}},"body":{"modules/AuthModule.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"classes/CreateUserHandle.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"coverage.html":{}}}],["authroleentity",{"_index":491,"title":{"entities/AuthRoleEntity.html":{}},"body":{"modules/AuthModule.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"modules/JwtAuthModule.html":{},"coverage.html":{}}}],["authtasksservice",{"_index":497,"title":{"injectables/AuthTasksService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"coverage.html":{}}}],["authtoken",{"_index":1228,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["authwithpermission",{"_index":1221,"title":{},"body":{"guards/JwtTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authwithpermission(permission",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":1404,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"modules.html":{}}}],["await",{"_index":120,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1456,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["backend",{"_index":1757,"title":{},"body":{"properties.html":{}}}],["baseentity",{"_index":425,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudPaginationResource.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{}}}],["basiccommandoptions",{"_index":597,"title":{"interfaces/BasicCommandOptions.html":{}},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{},"coverage.html":{}}}],["bearer",{"_index":160,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/OAuth2Response.html":{},"dependencies.html":{}}}],["body",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"controllers/TokenController.html":{}}}],["boolean",{"_index":802,"title":{},"body":{"classes/CreateClientCommand.html":{},"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":201,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/CliModule.html":{},"overview.html":{}}}],["browse",{"_index":1742,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1743,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1760,"title":{},"body":{"properties.html":{}}}],["build",{"_index":449,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["builderorrepo",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builderorrepo.connection.getmetadata(entitytype).columns",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builderorrepo.createquerybuilder",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builderorrepo.metadata.columns",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback",{"_index":1451,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["callhandler",{"_index":1168,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["canactivate",{"_index":979,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{}}}],["canactivate(context",{"_index":982,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{}}}],["case",{"_index":1291,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/UserPayload.html":{}}}],["catch",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["cert",{"_index":1323,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["cert_expires_at",{"_index":1333,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["certexpiresat",{"_index":649,"title":{},"body":{"classes/ClientCreatedEvent.html":{},"entities/Oauth2ClientEntity.html":{}}}],["chalk",{"_index":865,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["chalk.green",{"_index":884,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["changed",{"_index":1631,"title":{},"body":{"classes/UserPayload.html":{}}}],["characters",{"_index":943,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["characters.length",{"_index":949,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["characters[x",{"_index":948,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"classes/UserPayload.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"classes/UserPayload.html":{},"coverage.html":{},"dependencies.html":{}}}],["classdecorator",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"classes/UserPayload.html":{},"overview.html":{}}}],["classlike",{"_index":1198,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["classproperties",{"_index":1196,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{}}}],["classserializerinterceptor",{"_index":213,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{}}}],["classserializerinterceptor(reflector",{"_index":245,"title":{},"body":{"modules/AdminModule.html":{}}}],["cli",{"_index":644,"title":{},"body":{"modules/CliModule.html":{}}}],["cli.ts",{"_index":1494,"title":{},"body":{"classes/SetupCli.html":{},"coverage.html":{}}}],["cli.ts:13",{"_index":1495,"title":{},"body":{"classes/SetupCli.html":{}}}],["cli.ts:18",{"_index":1496,"title":{},"body":{"classes/SetupCli.html":{}}}],["client",{"_index":123,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateUserHandle.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"miscellaneous/enumerations.html":{}}}],["client's",{"_index":706,"title":{},"body":{"classes/ClientPayload.html":{}}}],["client.accesstokenlifetime",{"_index":793,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["client.cert",{"_index":842,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.certexpiresat",{"_index":845,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.clientid",{"_index":820,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.clientsecret",{"_index":673,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["client.command",{"_index":814,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.command.ts",{"_index":796,"title":{},"body":{"classes/CreateClientCommand.html":{},"coverage.html":{}}}],["client.command.ts:10",{"_index":808,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:11",{"_index":804,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:12",{"_index":809,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:4",{"_index":803,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:6",{"_index":807,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:7",{"_index":810,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:8",{"_index":805,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:9",{"_index":806,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.deletedat",{"_index":675,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["client.entity",{"_index":667,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"entities/Oauth2AccessTokenEntity.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["client.entity.ts",{"_index":1322,"title":{},"body":{"entities/Oauth2ClientEntity.html":{},"coverage.html":{}}}],["client.entity.ts:13",{"_index":1344,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:16",{"_index":1345,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:19",{"_index":1335,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:22",{"_index":1336,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:30",{"_index":1343,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:37",{"_index":1353,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:40",{"_index":1328,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:43",{"_index":1351,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:46",{"_index":1347,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:49",{"_index":1349,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:52",{"_index":1331,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:55",{"_index":1334,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:63",{"_index":1338,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.entity.ts:66",{"_index":1340,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client.grants",{"_index":829,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.grants.includes(request.granttype",{"_index":677,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["client.handler.ts",{"_index":811,"title":{},"body":{"classes/CreateClientHandler.html":{},"coverage.html":{}}}],["client.handler.ts:13",{"_index":812,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.handler.ts:25",{"_index":813,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.id",{"_index":685,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["client.name",{"_index":818,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.privatekey",{"_index":838,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.publickey",{"_index":840,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.refreshtokenlifetime",{"_index":826,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.scope",{"_index":823,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client_credentials",{"_index":831,"title":{},"body":{"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{}}}],["client_credentials,refresh_token",{"_index":1342,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["client_id",{"_index":1242,"title":{},"body":{"classes/OAuth2Request.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["client_secret",{"_index":1244,"title":{},"body":{"classes/OAuth2Request.html":{},"entities/Oauth2ClientEntity.html":{}}}],["clientcreatedevent",{"_index":645,"title":{"classes/ClientCreatedEvent.html":{}},"body":{"classes/ClientCreatedEvent.html":{},"classes/CreateClientHandler.html":{},"coverage.html":{}}}],["clientcredentialsstrategy",{"_index":493,"title":{"classes/ClientCredentialsStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientid",{"_index":19,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/OAuth2Request.html":{},"entities/Oauth2ClientEntity.html":{}}}],["clientnotfoundexception",{"_index":694,"title":{"classes/ClientNotFoundException.html":{}},"body":{"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"coverage.html":{}}}],["clientnotfoundexception.withclientid(clientid",{"_index":741,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientnotfoundexception.withid(id",{"_index":740,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientnotfoundexception.withname(name",{"_index":742,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientpayload",{"_index":169,"title":{"classes/ClientPayload.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/ClientPayload.html":{},"coverage.html":{}}}],["clientrepository",{"_index":330,"title":{"injectables/ClientRepository.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"controllers/Oauth2Controller.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientrepositoryinterface",{"_index":505,"title":{"interfaces/ClientRepositoryInterface.html":{}},"body":{"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"controllers/Oauth2Controller.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clients",{"_index":744,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{},"classes/CreateClientCommand.html":{}}}],["clientsecret",{"_index":1238,"title":{},"body":{"classes/OAuth2Request.html":{},"entities/Oauth2ClientEntity.html":{}}}],["climodule",{"_index":628,"title":{"modules/CliModule.html":{}},"body":{"modules/CliModule.html":{},"modules.html":{},"overview.html":{}}}],["cluster_climodule",{"_index":632,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["cluster_climodule_exports",{"_index":633,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["column",{"_index":426,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["column('datetime",{"_index":409,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["column('varchar",{"_index":531,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["column()@index",{"_index":416,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{}}}],["column({length",{"_index":1352,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["column({name",{"_index":401,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["column({nullable",{"_index":1317,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["column({type",{"_index":1329,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["columns",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":602,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"classes/SetupCli.html":{}}}],["command.accesstokenlifetime",{"_index":824,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.clientid",{"_index":776,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["command.exp",{"_index":791,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["command.grants",{"_index":830,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.name",{"_index":819,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.nosecret",{"_index":821,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.plainpassword",{"_index":954,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["command.refreshtokenlifetime",{"_index":827,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.request",{"_index":784,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["command.role",{"_index":966,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["command.scope",{"_index":786,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["command.ts",{"_index":855,"title":{},"body":{"classes/CreateSystemPermissionCommand.html":{},"classes/CreateUserCommand.html":{},"coverage.html":{}}}],["command.ts:5",{"_index":856,"title":{},"body":{"classes/CreateSystemPermissionCommand.html":{},"classes/CreateUserCommand.html":{}}}],["command.ts:7",{"_index":932,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["command.ts:8",{"_index":930,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["command.ts:9",{"_index":931,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["command.username",{"_index":957,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["commandbus",{"_index":601,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{}}}],["commander",{"_index":606,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{},"dependencies.html":{}}}],["commandhandler",{"_index":770,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["commandhandler(createaccesstokencommand",{"_index":774,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["commandhandler(createclientcommand",{"_index":817,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["commandhandler(createsystempermissioncommand",{"_index":873,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["commandhandler(createusercommand",{"_index":951,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["commandhandlers",{"_index":501,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commandrunner",{"_index":603,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{}}}],["commands",{"_index":481,"title":{},"body":{"modules/AuthModule.html":{}}}],["commands/create",{"_index":483,"title":{},"body":{"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["common",{"_index":1435,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["commonname",{"_index":834,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["condition",{"_index":1012,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["conditions",{"_index":1000,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["conditions[primarykey",{"_index":1001,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["config_inject_key",{"_index":221,"title":{},"body":{"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connected",{"_index":720,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["connector",{"_index":1755,"title":{},"body":{"properties.html":{}}}],["console.log",{"_index":872,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":119,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":222,"title":{},"body":{"modules/AdminModule.html":{},"classes/CreateSystemPermissionHandler.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"controllers/AuthController.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudPaginationMeta.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Response.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"classes/UserPayload.html":{}}}],["constructor(accesstoken",{"_index":708,"title":{},"body":{"classes/ClientPayload.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{},"classes/UserPayload.html":{}}}],["constructor(accesstokenrepository",{"_index":153,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/CreateAccessTokenHandler.html":{}}}],["constructor(clientid",{"_index":754,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["constructor(clientrepository",{"_index":654,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["constructor(commandbus",{"_index":913,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{}}}],["constructor(httpadapter",{"_index":191,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["constructor(id",{"_index":27,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["constructor(jwtrepo",{"_index":584,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["constructor(jwtservice",{"_index":1216,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["constructor(moduleref",{"_index":1389,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["constructor(modulescontainer",{"_index":1504,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["constructor(name",{"_index":801,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["constructor(originaldto",{"_index":1162,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["constructor(partial",{"_index":432,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["constructor(permissiongrouprepo",{"_index":858,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["constructor(private",{"_index":228,"title":{},"body":{"modules/AdminModule.html":{},"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{}}}],["constructor(reflector",{"_index":980,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["constructor(repository",{"_index":89,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{}}}],["constructor(systemadmin",{"_index":933,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["constructor(token",{"_index":445,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{}}}],["constructor(undefined",{"_index":1049,"title":{},"body":{"classes/CrudPaginationMeta.html":{}}}],["constructor(username",{"_index":929,"title":{},"body":{"classes/CreateUserCommand.html":{}}}],["contain",{"_index":1354,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["container",{"_index":1444,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["context",{"_index":985,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"guards/JwtTokenGuard.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["context.gethandler",{"_index":994,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":988,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{}}}],["controller",{"_index":247,"title":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"controllers/TokenController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["controller.interface.ts",{"_index":1201,"title":{},"body":{"interfaces/IQueryController.html":{},"coverage.html":{}}}],["controllers",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"controllers/TokenController.html":{},"overview.html":{}}}],["controllers/oauth2.controller",{"_index":486,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/roles.controller",{"_index":488,"title":{},"body":{"modules/AuthModule.html":{}}}],["controllers/token.controller",{"_index":490,"title":{},"body":{"modules/AuthModule.html":{}}}],["couldn't",{"_index":1210,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["coverage",{"_index":1635,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrsmodule",{"_index":472,"title":{},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{}}}],["create",{"_index":84,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"modules/AuthModule.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"classes/SetupCli.html":{},"interfaces/SystemAdminInterface.html":{}}}],["create(accesstoken",{"_index":92,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["create(client",{"_index":726,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["create(datasource",{"_index":1517,"title":{},"body":{"interfaces/SystemAdminInterface.html":{}}}],["createaccesstokencommand",{"_index":665,"title":{"classes/CreateAccessTokenCommand.html":{}},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["createaccesstokenhandler",{"_index":478,"title":{"classes/CreateAccessTokenHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/CreateAccessTokenHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createclientcommand",{"_index":795,"title":{"classes/CreateClientCommand.html":{}},"body":{"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"coverage.html":{}}}],["createclienthandler",{"_index":479,"title":{"classes/CreateClientHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/CreateClientHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":648,"title":{},"body":{"classes/ClientCreatedEvent.html":{},"classes/CreateClientHandler.html":{},"classes/CreateUserHandle.html":{}}}],["created.event",{"_index":773,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["created.event.ts",{"_index":8,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{},"coverage.html":{}}}],["created.event.ts:10",{"_index":41,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:11",{"_index":42,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:12",{"_index":43,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:13",{"_index":44,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:4",{"_index":31,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:6",{"_index":40,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:7",{"_index":39,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:8",{"_index":37,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:9",{"_index":38,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created_at",{"_index":1337,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["created_from",{"_index":1310,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["created_on",{"_index":412,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["createdat",{"_index":400,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["createdclient",{"_index":846,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.certexpiresat",{"_index":853,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.clientid",{"_index":852,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.id",{"_index":850,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.name",{"_index":851,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdfrom",{"_index":1302,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["createoauth2options",{"_index":1426,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["createparamdecorator",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder",{"_index":595,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["createsystempermissioncommand",{"_index":854,"title":{"classes/CreateSystemPermissionCommand.html":{}},"body":{"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/SetupCli.html":{},"coverage.html":{}}}],["createsystempermissionhandler",{"_index":480,"title":{"classes/CreateSystemPermissionHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createsystempermissionscli",{"_index":634,"title":{"classes/CreateSystemPermissionsCli.html":{}},"body":{"modules/CliModule.html":{},"classes/CreateSystemPermissionsCli.html":{},"coverage.html":{},"overview.html":{}}}],["createusercli",{"_index":615,"title":{"classes/CreateUserCli.html":{}},"body":{"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/CreateUserCli.html":{},"coverage.html":{},"overview.html":{}}}],["createusercommand",{"_index":607,"title":{"classes/CreateUserCommand.html":{}},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"classes/SetupCli.html":{},"coverage.html":{}}}],["createusercommand(args[0",{"_index":625,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["createuserhandle",{"_index":482,"title":{"classes/CreateUserHandle.html":{}},"body":{"modules/AuthModule.html":{},"classes/CreateUserHandle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":878,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["credentials",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"classes/InvalidUserException.html":{}}}],["credentials.'})@apiresponse({status",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentials.email",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentials.password",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentials.strategy.ts",{"_index":651,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"coverage.html":{}}}],["credentials.strategy.ts:15",{"_index":655,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["credentials.strategy.ts:28",{"_index":660,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["credentials.strategy.ts:47",{"_index":658,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["cron",{"_index":589,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["cron(cronexpression.every_day_at_midnight",{"_index":586,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["cronexpression",{"_index":590,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["crud",{"_index":184,"title":{},"body":{"interfaces/AdminConfig.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"interfaces/ResourceDictonary.html":{},"controllers/TokenController.html":{}}}],["crud/crud.module",{"_index":224,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["crudentity",{"_index":1540,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudentitydetectionguard",{"_index":975,"title":{"guards/CrudEntityDetectionGuard.html":{}},"body":{"guards/CrudEntityDetectionGuard.html":{},"coverage.html":{}}}],["crudentityrequest",{"_index":1541,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudentityrequest(authjwttokenentity",{"_index":1585,"title":{},"body":{"controllers/TokenController.html":{}}}],["crudfilterablerequest",{"_index":1009,"title":{"classes/CrudFilterableRequest.html":{}},"body":{"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["crudmodule",{"_index":223,"title":{"modules/CrudModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CrudModule.html":{},"modules.html":{}}}],["crudmodule.forfeature",{"_index":522,"title":{},"body":{"modules/AuthModule.html":{}}}],["crudmodule.forroot(options.query",{"_index":232,"title":{},"body":{"modules/AdminModule.html":{}}}],["crudpagination",{"_index":1544,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudpagination(authjwttokenentity",{"_index":1582,"title":{},"body":{"controllers/TokenController.html":{}}}],["crudpaginationmeta",{"_index":1039,"title":{"classes/CrudPaginationMeta.html":{}},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationResource.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudpaginationrequest",{"_index":1057,"title":{"classes/CrudPaginationRequest.html":{}},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudpaginationresource",{"_index":1102,"title":{"classes/CrudPaginationResource.html":{}},"body":{"classes/CrudPaginationResource.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudsearchrequest",{"_index":1542,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudsearchrequestfiltersguard",{"_index":1117,"title":{"guards/CrudSearchRequestFiltersGuard.html":{}},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"coverage.html":{}}}],["crudsearchrequestsortablesguard",{"_index":1134,"title":{"guards/CrudSearchRequestSortablesGuard.html":{}},"body":{"guards/CrudSearchRequestSortablesGuard.html":{},"coverage.html":{}}}],["crudsettingsstorage",{"_index":1034,"title":{"classes/CrudSettingsStorage.html":{}},"body":{"modules/CrudModule.html":{},"classes/CrudSettingsStorage.html":{},"coverage.html":{}}}],["crudsettingsstorage.setoptions",{"_index":1036,"title":{},"body":{"modules/CrudModule.html":{}}}],["crudsortablerequest",{"_index":1082,"title":{"classes/CrudSortableRequest.html":{}},"body":{"classes/CrudPaginationRequest.html":{},"classes/CrudSortableRequest.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["crudtransformpaginationinterceptor",{"_index":1157,"title":{"classes/CrudTransformPaginationInterceptor.html":{}},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"coverage.html":{}}}],["crudtransformpaginationinterceptor(options.entity",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crudtransformresponse",{"_index":1543,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crudtransformresponse(authjwttokenentity",{"_index":1593,"title":{},"body":{"controllers/TokenController.html":{}}}],["crudtransformsingleinterceptor",{"_index":1186,"title":{"classes/CrudTransformSingleInterceptor.html":{}},"body":{"classes/CrudTransformSingleInterceptor.html":{},"coverage.html":{}}}],["crudtransformsingleinterceptor(entity",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crypto",{"_index":771,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateUserHandle.html":{}}}],["crypto.randombytes(32).tostring('hex",{"_index":822,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["ctx",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":719,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{}}}],["currently",{"_index":1434,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["custom",{"_index":618,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["dashboard",{"_index":1754,"title":{},"body":{"properties.html":{}}}],["data",{"_index":1104,"title":{},"body":{"classes/CrudPaginationResource.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"miscellaneous/variables.html":{}}}],["data.data",{"_index":1182,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{}}}],["database",{"_index":745,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["datas",{"_index":454,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{}}}],["datasource",{"_index":156,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/PasswordStrategy.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["date",{"_index":29,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/ClientCreatedEvent.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{}}}],["date(date.now",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(now",{"_index":792,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["date.now",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{}}}],["datetime",{"_index":1332,"title":{},"body":{"entities/Oauth2ClientEntity.html":{},"classes/TokenResponse.html":{}}}],["days",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateClientHandler.html":{}}}],["deal",{"_index":137,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{}}}],["declarations",{"_index":631,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["decorator",{"_index":1377,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["decorators",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"classes/CreateUserCli.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"classes/CrudSortableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"classes/SignInDto.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{}}}],["decorators/auth",{"_index":1545,"title":{},"body":{"controllers/TokenController.html":{}}}],["decorators/oauth2",{"_index":662,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["default",{"_index":195,"title":{},"body":{"injectables/AdminLoader.html":{},"injectables/AuthTasksService.html":{},"classes/ClientPayload.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserHandle.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/SetupCli.html":{},"classes/UserPayload.html":{},"miscellaneous/variables.html":{}}}],["default_admin_role_name",{"_index":866,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/SetupCli.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_system_auth_permission_name",{"_index":867,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_system_permission_group",{"_index":868,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_system_permission_name",{"_index":869,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_user_role_name",{"_index":870,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1433,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{},"miscellaneous/enumerations.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["delete",{"_index":85,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"controllers/TokenController.html":{}}}],["delete('item/:id",{"_index":1589,"title":{},"body":{"controllers/TokenController.html":{}}}],["delete('item/:id')@crudentityrequest(authjwttokenentity",{"_index":1527,"title":{},"body":{"controllers/TokenController.html":{}}}],["delete(accesstoken",{"_index":96,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["delete(client",{"_index":728,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["deletebyid",{"_index":86,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["deletebyid(id",{"_index":98,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["deleted_at",{"_index":1339,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["deletedat",{"_index":1324,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["deleterequest",{"_index":1522,"title":{},"body":{"controllers/TokenController.html":{}}}],["deleterequest(@crudentity",{"_index":1590,"title":{},"body":{"controllers/TokenController.html":{}}}],["deleterequest(record",{"_index":1526,"title":{},"body":{"controllers/TokenController.html":{}}}],["deleteresult",{"_index":106,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["dependencies",{"_index":629,"title":{"dependencies.html":{}},"body":{"modules/CliModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateClientCommand.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"interfaces/SystemAdminInterface.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"properties.html":{}}}],["detection.guard.ts",{"_index":978,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"coverage.html":{}}}],["detection.guard.ts:13",{"_index":981,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["detection.guard.ts:19",{"_index":984,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["detects",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devices",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["dictonary.interface.ts",{"_index":1475,"title":{},"body":{"interfaces/QueryDictionary.html":{},"coverage.html":{}}}],["dictonary.interface.ts:1",{"_index":1477,"title":{},"body":{"interfaces/QueryDictionary.html":{}}}],["displaytitle",{"_index":528,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["documentation",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["dynamicmodule",{"_index":210,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{}}}],["e",{"_index":909,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["each",{"_index":1101,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["element",{"_index":1459,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["email",{"_index":1209,"title":{},"body":{"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/SignInDto.html":{},"interfaces/SystemAdminInterface.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["emit",{"_index":848,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["ends",{"_index":1733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ends_with",{"_index":1732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ensure",{"_index":788,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["entities",{"_index":397,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/auth",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthJwtTokenResponse.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"controllers/TokenController.html":{}}}],["entities/oauth2",{"_index":108,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/UserPayload.html":{}}}],["entity",{"_index":396,"title":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"guards/CrudEntityDetectionGuard.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entity('system_oauth2_access_tokens",{"_index":1321,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["entity('system_oauth2_clients",{"_index":1358,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["entity('system_permission_groups",{"_index":557,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{}}}],["entity('system_permissions",{"_index":544,"title":{},"body":{"entities/AuthPermissionEntity.html":{}}}],["entity('system_roles",{"_index":580,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["entity('system_user_roles",{"_index":564,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{}}}],["entity('system_user_tokens",{"_index":428,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["entity.decorator.ts",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitydto",{"_index":1195,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"miscellaneous/variables.html":{}}}],["entitytype",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":1027,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"classes/CrudSortableRequest.html":{},"interfaces/Oauth2PayloadInterface.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1711,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eq",{"_index":1719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equals",{"_index":1718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["error",{"_index":1131,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["event",{"_index":10,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{},"classes/CreateClientHandler.html":{}}}],["eventbus",{"_index":765,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["eventhandlers",{"_index":502,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["events/access",{"_index":772,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["events/client",{"_index":816,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["exception",{"_index":51,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["exceptions/access",{"_index":111,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["exceptions/client",{"_index":736,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["exceptions/invalid",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["exclude",{"_index":1295,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["excludeextraneousvalues",{"_index":1184,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["execute",{"_index":764,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["execute(command",{"_index":767,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["executioncontext",{"_index":983,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"guards/JwtTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["existence",{"_index":1519,"title":{},"body":{"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["exists",{"_index":1516,"title":{},"body":{"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["exp",{"_index":752,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{}}}],["exp.setdate(exp.getdate",{"_index":844,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["expiration",{"_index":789,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/OAuth2Request.html":{}}}],["expiredtoken",{"_index":1485,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["expiredtoken.refreshtokenexpiresat",{"_index":1488,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["expires",{"_index":1283,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["expires_in",{"_index":1284,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["expiresin",{"_index":238,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["explore",{"_index":1446,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["explorerservice",{"_index":511,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["exports",{"_index":246,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{},"overview.html":{}}}],["expose",{"_index":442,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["expose()@apiproperty",{"_index":435,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["express",{"_index":987,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["extends",{"_index":54,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientNotFoundException.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"classes/InvalidUserException.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"interfaces/ResourceDictonary.html":{},"classes/SetupCli.html":{},"miscellaneous/variables.html":{}}}],["extractmetadata",{"_index":1503,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["extractmetadata(instance",{"_index":1463,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["factory.interface.ts",{"_index":1425,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":1427,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["false",{"_index":405,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["false})@joincolumn({name",{"_index":1307,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["field",{"_index":1013,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSortableRequest.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["field.condition",{"_index":1557,"title":{},"body":{"controllers/TokenController.html":{}}}],["field.field",{"_index":1551,"title":{},"body":{"controllers/TokenController.html":{}}}],["field.order",{"_index":1554,"title":{},"body":{"controllers/TokenController.html":{}}}],["field.term",{"_index":1562,"title":{},"body":{"controllers/TokenController.html":{}}}],["fieldname",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1123,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"controllers/TokenController.html":{}}}],["fields.includes(field",{"_index":1130,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["filter",{"_index":1070,"title":{},"body":{"classes/CrudPaginationRequest.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filter[field.field",{"_index":1559,"title":{},"body":{"controllers/TokenController.html":{}}}],["filter[fieldname",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterable",{"_index":1192,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filterable.request",{"_index":1095,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["filterable.request.ts",{"_index":1011,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"coverage.html":{}}}],["filterable.request.ts:10",{"_index":1021,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["filterable.request.ts:16",{"_index":1023,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["filterable.request.ts:20",{"_index":1019,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["filterablefields",{"_index":1124,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{}}}],["filterkeys",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtermatch",{"_index":1015,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"miscellaneous/enumerations.html":{}}}],["filtermatch.ends_with",{"_index":1558,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.equals",{"_index":1561,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.greather",{"_index":1563,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.greather_or_equal",{"_index":1565,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.is_null",{"_index":1567,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.like",{"_index":1016,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.lower",{"_index":1568,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.lower_or_equal",{"_index":1570,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.not",{"_index":1572,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.not_null",{"_index":1574,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.starts_with",{"_index":1576,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch.unequal",{"_index":1578,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["filtermatch})@isenum(filtermatch",{"_index":1018,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["filterprovider",{"_index":1460,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["filterprovider(wrapper",{"_index":1508,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["filters.guard.ts",{"_index":1119,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"coverage.html":{}}}],["filters.guard.ts:11",{"_index":1120,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{}}}],["filters.guard.ts:14",{"_index":1121,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{}}}],["find",{"_index":144,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/InvalidUserException.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["find(id",{"_index":730,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyaccesstoken",{"_index":87,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findbyaccesstoken(accesstoken",{"_index":100,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findbyclientid",{"_index":723,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyclientid(clientid",{"_index":732,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyname",{"_index":724,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyname(name",{"_index":734,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyrefreshtoken",{"_index":88,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findbyrefreshtoken(refreshtoken",{"_index":102,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findfield",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findfield.databasename",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findfield.propertyname",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finds",{"_index":748,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["finish",{"_index":1432,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["fixme",{"_index":777,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["flags",{"_index":616,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["flatmap",{"_index":1450,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["flatmap(modules",{"_index":1510,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["forbiddenexception",{"_index":1364,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["forfeature",{"_index":1030,"title":{},"body":{"modules/CrudModule.html":{}}}],["forroot",{"_index":206,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CrudModule.html":{}}}],["forroot(options",{"_index":207,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CrudModule.html":{}}}],["found",{"_index":53,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["found.exception",{"_index":112,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{}}}],["found.exception.ts",{"_index":50,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:12",{"_index":68,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["found.exception.ts:16",{"_index":700,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["found.exception.ts:23",{"_index":62,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["found.exception.ts:27",{"_index":699,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["found.exception.ts:34",{"_index":70,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["found.exception.ts:38",{"_index":702,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["fromjson",{"_index":1610,"title":{},"body":{"classes/UserClass.html":{}}}],["fromjson(object",{"_index":1615,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["function",{"_index":1133,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"injectables/StrategyExplorer.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":610,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateUserCli.html":{}}}],["generated",{"_index":11,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["generatepassword",{"_index":941,"title":{},"body":{"classes/CreateUserHandle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('item/:id",{"_index":1592,"title":{},"body":{"controllers/TokenController.html":{}}}],["get('item/:id')@crudentityrequest(authjwttokenentity",{"_index":1534,"title":{},"body":{"controllers/TokenController.html":{}}}],["get('logout",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('logoutall",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('revoke/:id",{"_index":1584,"title":{},"body":{"controllers/TokenController.html":{}}}],["get('revoke/:id')@crudentityrequest(authjwttokenentity",{"_index":1538,"title":{},"body":{"controllers/TokenController.html":{}}}],["getallsortablefields(entity",{"_index":1549,"title":{},"body":{"controllers/TokenController.html":{}}}],["getcollectionpost",{"_index":1523,"title":{},"body":{"controllers/TokenController.html":{}}}],["getcollectionpost(options",{"_index":1530,"title":{},"body":{"controllers/TokenController.html":{}}}],["getfilterablefields(entity",{"_index":1556,"title":{},"body":{"controllers/TokenController.html":{}}}],["getoauth2response",{"_index":653,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["getoauth2response(request",{"_index":656,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["getoptions",{"_index":1141,"title":{},"body":{"classes/CrudSettingsStorage.html":{}}}],["getrequest",{"_index":1524,"title":{},"body":{"controllers/TokenController.html":{}}}],["getrequest(@crudentity",{"_index":1594,"title":{},"body":{"controllers/TokenController.html":{}}}],["getrequest(record",{"_index":1533,"title":{},"body":{"controllers/TokenController.html":{}}}],["getschemapath(crudfilterablerequest",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(crudpaginationrequest",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(crudpaginationresource",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(crudsortablerequest",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(responsetype",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getskip",{"_index":1089,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["getting",{"_index":1739,"title":{"index.html":{}},"body":{}}],["given",{"_index":747,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{},"classes/OAuth2Request.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["global",{"_index":214,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{}}}],["grant",{"_index":663,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/OAuth2Request.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grant_type",{"_index":1246,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["granted",{"_index":1405,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["grants",{"_index":798,"title":{},"body":{"classes/CreateClientCommand.html":{},"entities/Oauth2ClientEntity.html":{}}}],["granttype",{"_index":1239,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["graph",{"_index":1741,"title":{},"body":{"modules.html":{}}}],["greather",{"_index":1722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["greather_or_equal",{"_index":1724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["group",{"_index":529,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"classes/CreateSystemPermissionHandler.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{}}}],["group.entity",{"_index":543,"title":{},"body":{"entities/AuthPermissionEntity.html":{}}}],["group.entity.ts",{"_index":546,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{},"coverage.html":{}}}],["group.entity.ts:14",{"_index":548,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{}}}],["group.entity.ts:17",{"_index":553,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{}}}],["group.entity.ts:9",{"_index":554,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{}}}],["group.slug",{"_index":545,"title":{},"body":{"entities/AuthPermissionEntity.html":{}}}],["group.slug)@joincolumn({name",{"_index":535,"title":{},"body":{"entities/AuthPermissionEntity.html":{}}}],["gt",{"_index":1723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gte",{"_index":1725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guard",{"_index":974,"title":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{}},"body":{"interfaces/Oauth2PayloadInterface.html":{},"coverage.html":{}}}],["guards",{"_index":976,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{},"overview.html":{}}}],["handlecron",{"_index":583,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["handler",{"_index":484,"title":{},"body":{"modules/AuthModule.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["handler.handle",{"_index":1185,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["handler.handle().pipe",{"_index":1179,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["handler.ts",{"_index":857,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.ts:22",{"_index":935,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["handler.ts:25",{"_index":861,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["handler.ts:40",{"_index":938,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["handler.ts:41",{"_index":864,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["handlers",{"_index":1375,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["hasnextpage",{"_index":1043,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["haspreviouspage",{"_index":1044,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["header",{"_index":163,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["header('content",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["himalaya/admin",{"_index":1756,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":1258,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["http",{"_index":162,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"dependencies.html":{}}}],["httpadapter",{"_index":194,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["httpadapterhost",{"_index":192,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{}}}],["httpexception",{"_index":986,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["httpexception(err.message",{"_index":1007,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["https://github.com/red",{"_index":1761,"title":{},"body":{"properties.html":{}}}],["iat",{"_index":753,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"classes/OAuth2Request.html":{}}}],["icommandhandler",{"_index":763,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["icrudpaginationmetaparameters",{"_index":1050,"title":{"interfaces/ICrudPaginationMetaParameters.html":{}},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"coverage.html":{}}}],["icrudsearchrequestoptions",{"_index":1190,"title":{"interfaces/ICrudSearchRequestOptions.html":{}},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":20,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"entities/AuthRoleAssignmentEntity.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/InvalidUserException.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"interfaces/Oauth2PayloadInterface.html":{},"controllers/TokenController.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"miscellaneous/variables.html":{}}}],["id')@crudtransformresponse(authjwttokenentity",{"_index":1535,"title":{},"body":{"controllers/TokenController.html":{}}}],["identifier",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"entities/AuthRoleAssignmentEntity.html":{},"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["ilike(`${field.term",{"_index":1577,"title":{},"body":{"controllers/TokenController.html":{}}}],["ilike(`${item.term",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ilike(`%${field.term",{"_index":1560,"title":{},"body":{"controllers/TokenController.html":{}}}],["ilike(`%${item.term",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":135,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["implements",{"_index":116,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"guards/JwtTokenGuard.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/UserPayload.html":{}}}],["import",{"_index":71,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["imports",{"_index":230,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1476,"title":{},"body":{"interfaces/QueryDictionary.html":{},"interfaces/ResourceDictonary.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["initialized",{"_index":229,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["inject",{"_index":166,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateUserHandle.html":{},"controllers/Oauth2Controller.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["inject('accesstokenrepositoryinterface",{"_index":171,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/RefreshTokenStrategy.html":{}}}],["inject('clientrepositoryinterface",{"_index":672,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"controllers/Oauth2Controller.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["inject('systemadmininterface",{"_index":952,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["inject('userloaderinterface",{"_index":172,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{}}}],["inject('uservalidatorinterface",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"classes/PasswordStrategy.html":{}}}],["inject(oauth2_server_options",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"injectables/StrategyExplorer.html":{}},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{}}}],["injectables",{"_index":80,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"injectables/StrategyExplorer.html":{},"overview.html":{}}}],["injectdatasource",{"_index":170,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/PasswordStrategy.html":{}}}],["injectrepository",{"_index":104,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"controllers/AuthController.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{}}}],["injectrepository(authjwttokenentity",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthTasksService.html":{},"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{}}}],["injectrepository(authpermissionentity",{"_index":875,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["injectrepository(authpermissiongroupentity",{"_index":874,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["injectrepository(authroleassignmententity",{"_index":953,"title":{},"body":{"classes/CreateUserHandle.html":{},"guards/JwtTokenGuard.html":{}}}],["injectrepository(authroleentity",{"_index":876,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["injectrepository(oauth2accesstokenentity",{"_index":117,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["injectrepository(oauth2cliententity",{"_index":738,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["instance",{"_index":1411,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["instance.constructor",{"_index":1464,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["instanceof",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instancewrapper",{"_index":1438,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["intercept",{"_index":1161,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["intercept(context",{"_index":1167,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["interface",{"_index":130,"title":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/AdminConfig.html":{},"interfaces/BasicCommandOptions.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"interfaces/ResourceDictonary.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/AdminConfig.html":{},"interfaces/BasicCommandOptions.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateUserCli.html":{},"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"interfaces/ResourceDictonary.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":131,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{},"overview.html":{}}}],["interfaces/access",{"_index":114,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"classes/CreateAccessTokenHandler.html":{}}}],["interfaces/client",{"_index":737,"title":{},"body":{"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"controllers/Oauth2Controller.html":{}}}],["interfaces/oauth2",{"_index":1408,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["interfaces/system",{"_index":939,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["internalservererrorexception",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientNotFoundException.html":{}}}],["internalservererrorexception(err",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["invalid",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"classes/InvalidUserException.html":{}}}],["invaliduserexception",{"_index":304,"title":{"classes/InvalidUserException.html":{}},"body":{"controllers/AuthController.html":{},"classes/InvalidUserException.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["invaliduserexception.wrongcredentials",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["iquerycontroller",{"_index":1199,"title":{"interfaces/IQueryController.html":{}},"body":{"interfaces/IQueryController.html":{},"coverage.html":{}}}],["is_null",{"_index":1734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isarray",{"_index":1075,"title":{},"body":{"classes/CrudPaginationRequest.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/OAuth2Request.html":{}}}],["isarray(request.body.filter",{"_index":1128,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["isarray(request.filter",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isarray(request.sort",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdefault",{"_index":614,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["isempty",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"guards/JwtTokenGuard.html":{}}}],["isempty(this.options.jwtexpires",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["isempty(this.options.jwtrefreshexpires",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["isenum",{"_index":1026,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"classes/CrudSortableRequest.html":{}}}],["isenum(filtermatch",{"_index":1028,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["isenum(queryorder",{"_index":1156,"title":{},"body":{"classes/CrudSortableRequest.html":{}}}],["isint",{"_index":1091,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["isnotempty",{"_index":1122,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/OAuth2Request.html":{}}}],["isnotempty(request.body.filter",{"_index":1127,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["isnull",{"_index":1219,"title":{},"body":{"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["isnumber",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["isoptional",{"_index":1025,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{}}}],["isstring",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudSortableRequest.html":{},"classes/SignInDto.html":{}}}],["isstring()@apiproperty({type",{"_index":1501,"title":{},"body":{"classes/SignInDto.html":{}}}],["isstring()@apiproperty({})@type(undefined",{"_index":1020,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"classes/CrudSortableRequest.html":{}}}],["isstring()@apipropertyoptional({})@isoptional()@type(undefined",{"_index":1022,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["isstring(this.options.jwtexpires",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["isstring(this.options.jwtrefreshexpires",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["issued",{"_index":1259,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["item",{"_index":1003,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"miscellaneous/variables.html":{}}}],["item.condition",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.field",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.order",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.term",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["itemcount",{"_index":1045,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"miscellaneous/variables.html":{}}}],["items",{"_index":1452,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"miscellaneous/variables.html":{}}}],["items.filter(element",{"_index":1458,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["january",{"_index":1256,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["join",{"_index":950,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["joincolumn",{"_index":539,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["jointable",{"_index":577,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["json",{"_index":1311,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["json.parse(client.scope",{"_index":679,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["json.stringify(requestscopes",{"_index":686,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["jwt",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["jwt/guards/jwt",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt/jwt",{"_index":476,"title":{},"body":{"modules/AuthModule.html":{},"modules/CrudModule.html":{}}}],["jwtauthmodule",{"_index":475,"title":{"modules/JwtAuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{},"modules.html":{}}}],["jwtid",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwtmodule",{"_index":225,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{}}}],["jwtmodule.register",{"_index":233,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["jwtrepo",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthTasksService.html":{},"guards/JwtTokenGuard.html":{}}}],["jwtservice",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"guards/JwtTokenGuard.html":{}}}],["jwttokenguard",{"_index":307,"title":{"guards/JwtTokenGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/JwtTokenGuard.html":{},"coverage.html":{}}}],["key",{"_index":186,"title":{},"body":{"interfaces/AdminConfig.html":{},"classes/OAuth2Request.html":{},"interfaces/QueryDictionary.html":{},"interfaces/ResourceDictonary.html":{}}}],["keys",{"_index":832,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["keywords",{"_index":1758,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":63,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["legend",{"_index":630,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["length",{"_index":406,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{},"classes/CreateUserHandle.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"miscellaneous/variables.html":{}}}],["lessthan(field.term",{"_index":1569,"title":{},"body":{"controllers/TokenController.html":{}}}],["lessthan(item.term",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessthanorequal(field.term",{"_index":1571,"title":{},"body":{"controllers/TokenController.html":{}}}],["lessthanorequal(item.term",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":1763,"title":{},"body":{"properties.html":{}}}],["list",{"_index":1269,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2ClientEntity.html":{}}}],["literal",{"_index":1403,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1626,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["load(datasource",{"_index":1627,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["loader",{"_index":200,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["loader.interface.ts",{"_index":1624,"title":{},"body":{"interfaces/UserLoaderInterface.html":{},"coverage.html":{}}}],["loader.interface.ts:13",{"_index":1628,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["lodash",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"modules/CrudModule.html":{},"guards/JwtTokenGuard.html":{}}}],["log",{"_index":871,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log(chalk.blue(`e",{"_index":960,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["log(chalk.blue(`id",{"_index":964,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["log(chalk.blue(`password",{"_index":963,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["log(chalk.blue(`role",{"_index":973,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["log(chalk.green(`create",{"_index":902,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["log(chalk.red(`${e",{"_index":910,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["log(chalk.yellow('new",{"_index":958,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["log(chalk.yellow(`start",{"_index":877,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["logger",{"_index":190,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["logger('admincoremodule",{"_index":197,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["logger('adminmodule",{"_index":227,"title":{},"body":{"modules/AdminModule.html":{}}}],["logger('authmodule",{"_index":510,"title":{},"body":{"modules/AuthModule.html":{}}}],["logger('createsystempermission",{"_index":863,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["logger('createuserhandle",{"_index":937,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["logger(authtasksservice.name",{"_index":588,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["login",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"coverage.html":{}}}],["login(@body",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["logoutall",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["logoutall(@req",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["logoutall(req",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["lower",{"_index":1728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lower_or_equal",{"_index":1726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lt",{"_index":1729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lte",{"_index":1727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mail",{"_index":961,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["main",{"_index":134,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"classes/AuthLoginTokenResponse.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/TokenResponse.html":{},"interfaces/UserLoaderInterface.html":{}}}],["manytomany",{"_index":578,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":570,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["manytoone",{"_index":540,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["manytoone(type",{"_index":1306,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["manytoone(undefined",{"_index":534,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{}}}],["map",{"_index":1173,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["map((data",{"_index":1180,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["map(module",{"_index":1453,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["map(x",{"_index":947,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["match.ts",{"_index":1713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matching",{"_index":47,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":1066,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["max",{"_index":1092,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["max(200",{"_index":1100,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["maximum",{"_index":1085,"title":{},"body":{"classes/CrudPaginationRequest.html":{},"classes/OAuth2Request.html":{}}}],["message",{"_index":64,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["meta",{"_index":1105,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["meta.resource",{"_index":1114,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["meta.resource.ts",{"_index":1042,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"coverage.html":{}}}],["meta.resource.ts:11",{"_index":1054,"title":{},"body":{"classes/CrudPaginationMeta.html":{}}}],["meta.resource.ts:14",{"_index":1056,"title":{},"body":{"classes/CrudPaginationMeta.html":{}}}],["meta.resource.ts:17",{"_index":1053,"title":{},"body":{"classes/CrudPaginationMeta.html":{}}}],["meta.resource.ts:20",{"_index":1055,"title":{},"body":{"classes/CrudPaginationMeta.html":{}}}],["meta.resource.ts:23",{"_index":1052,"title":{},"body":{"classes/CrudPaginationMeta.html":{}}}],["meta.resource.ts:26",{"_index":1051,"title":{},"body":{"classes/CrudPaginationMeta.html":{}}}],["metadata",{"_index":1465,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"dependencies.html":{}}}],["metadatakey",{"_index":1461,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["method",{"_index":447,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/OAuth2Response.html":{},"interfaces/SystemAdminInterface.html":{},"classes/TokenResponse.html":{},"interfaces/UserValidatorInterface.html":{}}}],["methods",{"_index":56,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/UserClass.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["min",{"_index":1093,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["min(1",{"_index":1099,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["minimum",{"_index":1098,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["miscellaneous",{"_index":1710,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1764,"title":{},"body":{"properties.html":{}}}],["model",{"_index":1202,"title":{},"body":{"interfaces/IQueryController.html":{}}}],["module",{"_index":202,"title":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"overview.html":{}}}],["module.providers.values()].map(callback",{"_index":1454,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["modulemetadata",{"_index":183,"title":{},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{}}}],["moduleref",{"_index":1390,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["modules",{"_index":204,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"modules.html":{},"overview.html":{}}}],["modulescontainer",{"_index":1442,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["morethan(field.term",{"_index":1564,"title":{},"body":{"controllers/TokenController.html":{}}}],["morethan(item.term",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["morethanorequal(field.term",{"_index":1566,"title":{},"body":{"controllers/TokenController.html":{}}}],["morethanorequal(item.term",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"classes/TokenResponse.html":{}}}],["ms('1d",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["ms('7",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["ms(this.options.jwtexpires",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["ms(this.options.jwtrefreshexpires",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["name",{"_index":34,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/variables.html":{}}}],["ne",{"_index":1721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nest",{"_index":605,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{},"dependencies.html":{},"properties.html":{}}}],["nestinterceptor",{"_index":1160,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["nestjs",{"_index":1759,"title":{},"body":{"properties.html":{}}}],["nestjs/common",{"_index":72,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"modules/CliModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/CrudModule.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"injectables/StrategyExplorer.html":{},"controllers/TokenController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":198,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"dependencies.html":{}}}],["nestjs/core/injector/instance",{"_index":1439,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["nestjs/core/injector/module",{"_index":1441,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["nestjs/core/injector/modules",{"_index":1443,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["nestjs/cqrs",{"_index":473,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":226,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":165,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":468,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"entities/AuthRoleEntity.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"classes/CrudSortableRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"classes/SignInDto.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["nestjs/typeorm",{"_index":105,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/PasswordStrategy.html":{},"controllers/TokenController.html":{},"dependencies.html":{}}}],["new",{"_index":75,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/SetupCli.html":{},"controllers/TokenController.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newadminuserrole",{"_index":968,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["newadminuserrole.identifier",{"_index":970,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["newadminuserrole.role",{"_index":971,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["newadminuserrole.save",{"_index":972,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["newdata",{"_index":1181,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{}}}],["newjettoken",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["newjettoken.accesstoken",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["newjettoken.accesstokenexpiresat",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["newjettoken.createdat",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["newjettoken.identifier",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["newjettoken.refreshtoken",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["newjettoken.refreshtokenexpiresat",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["newjettoken.save",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["ninjas/himalaya",{"_index":1762,"title":{},"body":{"properties.html":{}}}],["none",{"_index":592,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["nosecret",{"_index":799,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["not(field.term",{"_index":1573,"title":{},"body":{"controllers/TokenController.html":{}}}],["not(isnull",{"_index":1575,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["not(item.term",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_null",{"_index":1735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":55,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{}}}],["notnull",{"_index":1736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["now",{"_index":787,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["null",{"_index":676,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["nullable",{"_index":404,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["number",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthRoleAssignmentEntity.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2ClientEntity.html":{},"classes/TokenResponse.html":{}}}],["oauth2",{"_index":716,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/Oauth2AccessTokenEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"classes/UserPayload.html":{}}}],["oauth2_server_options",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2_strategy_metadata",{"_index":1406,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2accesstokenentity",{"_index":93,"title":{"entities/Oauth2AccessTokenEntity.html":{}},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"entities/Oauth2AccessTokenEntity.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/UserPayload.html":{},"coverage.html":{}}}],["oauth2cliententity",{"_index":463,"title":{"entities/Oauth2ClientEntity.html":{}},"body":{"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["oauth2controller",{"_index":485,"title":{"controllers/Oauth2Controller.html":{}},"body":{"modules/AuthModule.html":{},"controllers/Oauth2Controller.html":{},"coverage.html":{}}}],["oauth2grantstrategy",{"_index":661,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2grantstrategy('client_credentials",{"_index":671,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["oauth2grantstrategy('password",{"_index":1471,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["oauth2grantstrategy('refresh_token",{"_index":1484,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["oauth2grantstrategyinterface",{"_index":652,"title":{"interfaces/Oauth2GrantStrategyInterface.html":{}},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{}}}],["oauth2grantstrategyregistry",{"_index":469,"title":{"injectables/Oauth2GrantStrategyRegistry.html":{}},"body":{"modules/AuthModule.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2grantstrategytype",{"_index":1394,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"miscellaneous/typealiases.html":{}}}],["oauth2options",{"_index":181,"title":{},"body":{"interfaces/AdminConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/ResourceDictonary.html":{},"miscellaneous/typealiases.html":{}}}],["oauth2optionsfactoryinterface",{"_index":1424,"title":{"interfaces/Oauth2OptionsFactoryInterface.html":{}},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{},"coverage.html":{}}}],["oauth2optionsprovider",{"_index":512,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth2payloadinterface",{"_index":167,"title":{"interfaces/Oauth2PayloadInterface.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{},"coverage.html":{}}}],["oauth2payloadtype",{"_index":714,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{},"miscellaneous/enumerations.html":{}}}],["oauth2payloadtype.client",{"_index":715,"title":{},"body":{"classes/ClientPayload.html":{}}}],["oauth2payloadtype.user",{"_index":1630,"title":{},"body":{"classes/UserPayload.html":{}}}],["oauth2request",{"_index":657,"title":{"classes/OAuth2Request.html":{}},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/OAuth2Request.html":{},"entities/Oauth2AccessTokenEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["oauth2response",{"_index":669,"title":{"classes/OAuth2Response.html":{}},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/OAuth2Response.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["oauth2strategies",{"_index":509,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2strategy('grant_type",{"_index":1378,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["oauth2strategyoptions",{"_index":1436,"title":{"interfaces/Oauth2StrategyOptions.html":{}},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{}}}],["oauth2tokenrequired",{"_index":1662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":450,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":444,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["object.email",{"_index":1622,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["object.keys(fields).includes(field.field",{"_index":1550,"title":{},"body":{"controllers/TokenController.html":{}}}],["object.keys(options.filterable",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(options.sortable",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":1170,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["old",{"_index":780,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["onetomany",{"_index":555,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["onetomany(undefined",{"_index":550,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["onmoduleinit",{"_index":211,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["option",{"_index":604,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["option({flags",{"_index":923,"title":{},"body":{"classes/CreateUserCli.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionGroupEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["options",{"_index":209,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudSettingsStorage.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/SetupCli.html":{},"controllers/TokenController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.auth.jwtsecret",{"_index":236,"title":{},"body":{"modules/AdminModule.html":{}}}],["options.entity",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":1479,"title":{},"body":{"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"coverage.html":{}}}],["options.jwtsecret",{"_index":520,"title":{},"body":{"modules/AuthModule.html":{}}}],["options.output",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options.page",{"_index":1061,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["options.password",{"_index":626,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["options.role",{"_index":627,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["options.systemadmincreator",{"_index":519,"title":{},"body":{"modules/AuthModule.html":{}}}],["options.take",{"_index":1063,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["options.type",{"_index":1429,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["options.type.ts",{"_index":1774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["options.userloader",{"_index":514,"title":{},"body":{"modules/AuthModule.html":{}}}],["options.uservalidator",{"_index":516,"title":{},"body":{"modules/AuthModule.html":{}}}],["options['filterable",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["options['sortable",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optionsorentity",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1149,"title":{},"body":{"classes/CrudSortableRequest.html":{},"controllers/TokenController.html":{},"interfaces/UserLoaderInterface.html":{}}}],["order.enum.ts",{"_index":1716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["originaldto",{"_index":1166,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["out",{"_index":638,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["output",{"_index":1193,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":1746,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":617,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["package",{"_index":1694,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1046,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["pagecount",{"_index":1047,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["pagemetadto",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginat",{"_index":1041,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationResource.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"coverage.html":{}}}],["pagination.interceptor.ts",{"_index":1159,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"coverage.html":{}}}],["pagination.interceptor.ts:12",{"_index":1169,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{}}}],["pagination.interceptor.ts:7",{"_index":1165,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{}}}],["pagination.request",{"_index":1059,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["pagination.request.ts",{"_index":1069,"title":{},"body":{"classes/CrudPaginationRequest.html":{},"coverage.html":{}}}],["pagination.request.ts:24",{"_index":1081,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["pagination.request.ts:36",{"_index":1088,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["pagination.request.ts:38",{"_index":1090,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["pagination.request.ts:47",{"_index":1083,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["pagination.request.ts:54",{"_index":1078,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["pagination.resource",{"_index":1176,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{}}}],["pagination.resource.ts",{"_index":1103,"title":{},"body":{"classes/CrudPaginationResource.html":{},"coverage.html":{}}}],["pagination.resource.ts:11",{"_index":1111,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["pagination.resource.ts:14",{"_index":1113,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["pagination.resource.ts:6",{"_index":1108,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["pagination.resource.ts:9",{"_index":1109,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["pagination.ts",{"_index":1691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":73,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Response.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/SystemAdminInterface.html":{},"classes/TokenResponse.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["parameter",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Response.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["params",{"_index":989,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["params[routekey",{"_index":1002,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["parsepassword",{"_index":920,"title":{},"body":{"classes/CreateUserCli.html":{}}}],["parsepassword(val",{"_index":619,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["parserole",{"_index":921,"title":{},"body":{"classes/CreateUserCli.html":{}}}],["parserole(val",{"_index":622,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["partial",{"_index":433,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["party",{"_index":1356,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["passport",{"_index":164,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":150,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["password",{"_index":600,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/SignInDto.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["password_grant",{"_index":1273,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["password_grant\"'})@expose({name",{"_index":1266,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["passwordstrategy",{"_index":494,"title":{"classes/PasswordStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"controllers/TokenController.html":{}}}],["payload",{"_index":707,"title":{},"body":{"classes/ClientPayload.html":{},"guards/JwtTokenGuard.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"miscellaneous/enumerations.html":{}}}],["payload.interface",{"_index":717,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payload.interface.ts",{"_index":704,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["payload.interface.ts:13",{"_index":709,"title":{},"body":{"classes/ClientPayload.html":{}}}],["payload.interface.ts:14",{"_index":1629,"title":{},"body":{"classes/UserPayload.html":{}}}],["payload.interface.ts:16",{"_index":710,"title":{},"body":{"classes/ClientPayload.html":{}}}],["payload.interface.ts:17",{"_index":712,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payload.interface.ts:18",{"_index":711,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payload.interface.ts:19",{"_index":713,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payloads",{"_index":1430,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["peer",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["pem",{"_index":835,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["pem.cert",{"_index":843,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["pem.private",{"_index":839,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["pem.public",{"_index":841,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["permission",{"_index":542,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"classes/CreateSystemPermissionHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.decorator",{"_index":1223,"title":{},"body":{"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{}}}],["permission.decorator.ts",{"_index":1659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.entity",{"_index":556,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["permission.entity.ts",{"_index":527,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"coverage.html":{}}}],["permission.entity.ts:16",{"_index":538,"title":{},"body":{"entities/AuthPermissionEntity.html":{}}}],["permission.entity.ts:21",{"_index":533,"title":{},"body":{"entities/AuthPermissionEntity.html":{}}}],["permission.entity.ts:25",{"_index":536,"title":{},"body":{"entities/AuthPermissionEntity.html":{}}}],["permissiongrouprepo",{"_index":862,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["permissionrepo",{"_index":859,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["permissions",{"_index":547,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissions.cli",{"_index":642,"title":{},"body":{"modules/CliModule.html":{}}}],["permissions.cli.ts",{"_index":911,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{},"coverage.html":{}}}],["permissions.cli.ts:14",{"_index":915,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{}}}],["permissions.cli.ts:9",{"_index":914,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{}}}],["permissionsgroup",{"_index":879,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["permissionsgroup.displaytitle",{"_index":881,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["permissionsgroup.save",{"_index":883,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["permissionsgroup.slug",{"_index":882,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["pick",{"_index":178,"title":{},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{}}}],["plainpassword",{"_index":927,"title":{},"body":{"classes/CreateUserCommand.html":{},"interfaces/SystemAdminInterface.html":{}}}],["plaintoinstance",{"_index":1171,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["plaintoinstance(this.transformdto",{"_index":1183,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["post",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"controllers/TokenController.html":{}}}],["post('collection",{"_index":1581,"title":{},"body":{"controllers/TokenController.html":{}}}],["post('collection')@crudsearchrequest({entity",{"_index":1531,"title":{},"body":{"controllers/TokenController.html":{}}}],["post('login",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@version('1')@apiresponse({status",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('token",{"_index":1367,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["primary",{"_index":403,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["primarycolumn",{"_index":541,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":537,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{}}}],["primarygeneratedcolumn",{"_index":427,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":414,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["primarykey",{"_index":991,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":118,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["private_key",{"_index":1346,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["privatekey",{"_index":1325,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["promise",{"_index":95,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/SignInDto.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"classes/UserPayload.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["propertyname",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":1387,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"controllers/TokenController.html":{}}}],["provide",{"_index":241,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"guards/JwtTokenGuard.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":240,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CrudModule.html":{},"modules/JwtAuthModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/CreateUserCommand.html":{},"modules/CrudModule.html":{},"controllers/TokenController.html":{},"classes/UserPayload.html":{}}}],["public_key",{"_index":1348,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["publicconstructor",{"_index":1775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["publickey",{"_index":1326,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["published",{"_index":647,"title":{},"body":{"classes/ClientCreatedEvent.html":{}}}],["query",{"_index":180,"title":{},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{}}}],["querybuilder",{"_index":1547,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["querybuilder.getcount",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querybuilder.getrawandentities",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querybuilder.orderby(field.field",{"_index":1553,"title":{},"body":{"controllers/TokenController.html":{}}}],["querybuilder.orderby(fieldname",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querybuilder.skip(request.skip).take(request.take",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querybuilder.where(filter",{"_index":1579,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["querydictionary",{"_index":1474,"title":{"interfaces/QueryDictionary.html":{}},"body":{"interfaces/QueryDictionary.html":{},"coverage.html":{}}}],["queryhandlers",{"_index":503,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querymoduleoptions",{"_index":1478,"title":{"interfaces/QueryModuleOptions.html":{}},"body":{"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"coverage.html":{}}}],["queryoptions",{"_index":182,"title":{"interfaces/QueryOptions.html":{}},"body":{"interfaces/AdminConfig.html":{},"classes/CrudSettingsStorage.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{}}}],["queryorder",{"_index":1151,"title":{},"body":{"classes/CrudSortableRequest.html":{},"miscellaneous/enumerations.html":{}}}],["queryorder.asc",{"_index":1152,"title":{},"body":{"classes/CrudSortableRequest.html":{}}}],["queryorder})@isenum(queryorder",{"_index":1154,"title":{},"body":{"classes/CrudSortableRequest.html":{}}}],["queryprimarykey",{"_index":993,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["queryroutekey",{"_index":996,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["querytype",{"_index":997,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["r",{"_index":621,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudSortableRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{},"classes/UserPayload.html":{}}}],["record",{"_index":1529,"title":{},"body":{"controllers/TokenController.html":{}}}],["record.remove",{"_index":1591,"title":{},"body":{"controllers/TokenController.html":{}}}],["record.revokedat",{"_index":1587,"title":{},"body":{"controllers/TokenController.html":{}}}],["record.save",{"_index":1588,"title":{},"body":{"controllers/TokenController.html":{}}}],["redninjas",{"_index":1766,"title":{},"body":{"properties.html":{}}}],["reduce((a",{"_index":1455,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["ref",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["referencedcolumnname",{"_index":1308,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["reflect",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["reflect.definemetadata(oauth2_strategy_metadata",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata(metadatakey",{"_index":1466,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["reflect.getmetadata(oauth2_strategy_metadata",{"_index":1423,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["reflector",{"_index":218,"title":{},"body":{"modules/AdminModule.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{}}}],["reflector.createdecorator",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflectstrategyname",{"_index":1386,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["reflectstrategyname(strategy",{"_index":1393,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["refresh",{"_index":77,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["refresh_token",{"_index":418,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/TokenResponse.html":{}}}],["refresh_token\"'})@expose({name",{"_index":1248,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["refresh_token_expires_at",{"_index":421,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/TokenResponse.html":{}}}],["refresh_token_expires_in_ms",{"_index":1604,"title":{},"body":{"classes/TokenResponse.html":{}}}],["refresh_token_lifetime",{"_index":1350,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["refreshable",{"_index":593,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["refreshtoken",{"_index":21,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/TokenResponse.html":{}}}],["refreshtokenexp",{"_index":1277,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["refreshtokenexpiresat",{"_index":22,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"entities/Oauth2AccessTokenEntity.html":{},"classes/TokenResponse.html":{}}}],["refreshtokenexpiresms",{"_index":1597,"title":{},"body":{"classes/TokenResponse.html":{}}}],["refreshtokenlifetime",{"_index":800,"title":{},"body":{"classes/CreateClientCommand.html":{},"entities/Oauth2ClientEntity.html":{}}}],["refreshtokenstrategy",{"_index":495,"title":{"classes/RefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":141,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"modules/AuthModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["register(strategies",{"_index":1396,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["registered",{"_index":1376,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["registerstrategy",{"_index":1388,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["registerstrategy(strategy",{"_index":1398,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["registry",{"_index":1385,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["relations",{"_index":122,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["remove",{"_index":779,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["repo",{"_index":998,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["repo.findonebyorfail(conditions",{"_index":1004,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["reponse",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponse.setdata(entities",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponse.setmetadata(pagemetadto",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":90,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/JwtTokenGuard.html":{},"controllers/TokenController.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["repository.interface",{"_index":115,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"controllers/Oauth2Controller.html":{}}}],["repository.interface.ts",{"_index":133,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{},"coverage.html":{}}}],["repository.interface.ts:15",{"_index":143,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["repository.interface.ts:24",{"_index":145,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["repository.interface.ts:31",{"_index":140,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{}}}],["repository.interface.ts:33",{"_index":749,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["repository.interface.ts:40",{"_index":746,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["represents",{"_index":705,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["req",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.body",{"_index":1126,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["request.body.filter",{"_index":1129,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["request.clientsecret",{"_index":674,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["request.decorator.ts",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.dto",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"entities/Oauth2AccessTokenEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["request.dto.ts",{"_index":1236,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["request.dto.ts:10",{"_index":1502,"title":{},"body":{"classes/SignInDto.html":{}}}],["request.dto.ts:17",{"_index":1263,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/SignInDto.html":{}}}],["request.dto.ts:26",{"_index":1243,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:34",{"_index":1245,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:42",{"_index":1261,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:50",{"_index":1265,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:59",{"_index":1272,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:67",{"_index":1268,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:74",{"_index":1249,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:81",{"_index":1267,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.email",{"_index":1472,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["request.exp",{"_index":687,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["request.filter",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.filterablefields",{"_index":1125,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["request.granttype",{"_index":1419,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["request.headers",{"_index":1225,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["request.iat",{"_index":688,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["request.params",{"_index":990,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["request.password",{"_index":1473,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["request.queryitem",{"_index":1005,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"miscellaneous/variables.html":{}}}],["request.querytype",{"_index":1006,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["request.refreshtoken",{"_index":1487,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["request.scopes",{"_index":682,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["request.sort",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1290,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["requestedexp",{"_index":790,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["requesting",{"_index":1262,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["requests",{"_index":1271,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["requests/crud",{"_index":1058,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["requests/oauth2",{"_index":668,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"entities/Oauth2AccessTokenEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["requests/sign",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["requestscopes",{"_index":680,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["requestscopes.every(scope",{"_index":683,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["required",{"_index":452,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["required.decorator.ts",{"_index":1657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":637,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["resolvers",{"_index":508,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource",{"_index":1371,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["resourcedictonary",{"_index":185,"title":{"interfaces/ResourceDictonary.html":{}},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{}}}],["resources",{"_index":721,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["resources/crud",{"_index":1175,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{}}}],["response",{"_index":1380,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["response.decorator.ts",{"_index":1689,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/ClientCredentialsStrategy.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["response.dto.ts",{"_index":1275,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{},"coverage.html":{}}}],["response.dto.ts:11",{"_index":1598,"title":{},"body":{"classes/TokenResponse.html":{}}}],["response.dto.ts:14",{"_index":1280,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:18",{"_index":1601,"title":{},"body":{"classes/TokenResponse.html":{}}}],["response.dto.ts:22",{"_index":1294,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:25",{"_index":1600,"title":{},"body":{"classes/TokenResponse.html":{}}}],["response.dto.ts:30",{"_index":1286,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:33",{"_index":1602,"title":{},"body":{"classes/TokenResponse.html":{}}}],["response.dto.ts:38",{"_index":1285,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:40",{"_index":1603,"title":{},"body":{"classes/TokenResponse.html":{}}}],["response.dto.ts:47",{"_index":1288,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["response.dto.ts:55",{"_index":1279,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["responsedto",{"_index":1197,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"miscellaneous/variables.html":{}}}],["responses/auth",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TokenController.html":{}}}],["responses/oauth2",{"_index":670,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["responses/token",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsetype",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":46,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":74,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"classes/CreateClientHandler.html":{},"classes/CreateUserCli.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationRequest.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":65,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/UserClass.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["revoked_at",{"_index":423,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["revokedat",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"guards/JwtTokenGuard.html":{}}}],["revoketoken",{"_index":1525,"title":{},"body":{"controllers/TokenController.html":{}}}],["revoketoken(@crudentity",{"_index":1586,"title":{},"body":{"controllers/TokenController.html":{}}}],["revoketoken(record",{"_index":1537,"title":{},"body":{"controllers/TokenController.html":{}}}],["role",{"_index":551,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"coverage.html":{}}}],["role.entity",{"_index":492,"title":{},"body":{"modules/AuthModule.html":{},"entities/AuthRoleAssignmentEntity.html":{},"modules/JwtAuthModule.html":{}}}],["role.entity.ts",{"_index":566,"title":{},"body":{"entities/AuthRoleEntity.html":{},"coverage.html":{}}}],["role.entity.ts:20",{"_index":574,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["role.entity.ts:26",{"_index":569,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["role.entity.ts:30",{"_index":572,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["role.entity.ts:33",{"_index":576,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["role.group",{"_index":552,"title":{},"body":{"entities/AuthPermissionGroupEntity.html":{}}}],["role.slug",{"_index":565,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{}}}],["role.slug)@joincolumn({name",{"_index":561,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{}}}],["role.ts",{"_index":1771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["rolerepo",{"_index":860,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{}}}],["roles",{"_index":1491,"title":{},"body":{"controllers/RolesController.html":{}}}],["rolescontroller",{"_index":487,"title":{"controllers/RolesController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/RolesController.html":{},"coverage.html":{}}}],["root",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["routekey",{"_index":995,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["run",{"_index":912,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{}}}],["run(args",{"_index":623,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{}}}],["rxjs",{"_index":1172,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1174,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["s",{"_index":1410,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["sagas",{"_index":504,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schedulemodule",{"_index":467,"title":{},"body":{"modules/AuthModule.html":{}}}],["schedulemodule.forroot",{"_index":523,"title":{},"body":{"modules/AuthModule.html":{}}}],["schema",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":23,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["scopes",{"_index":678,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["scopes.includes(scope",{"_index":684,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["search",{"_index":1118,"title":{},"body":{"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.request.ts",{"_index":1191,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"coverage.html":{}}}],["seconds",{"_index":1253,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["secret",{"_index":235,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["selectquerybuilder",{"_index":1548,"title":{},"body":{"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["selfsigned",{"_index":815,"title":{},"body":{"classes/CreateClientHandler.html":{},"dependencies.html":{}}}],["selfsigned.generate(attrs",{"_index":836,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["service",{"_index":500,"title":{},"body":{"modules/AuthModule.html":{}}}],["service.ts",{"_index":582,"title":{},"body":{"injectables/AuthTasksService.html":{},"coverage.html":{}}}],["service.ts:17",{"_index":587,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["service.ts:9",{"_index":585,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["servicenames",{"_index":507,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":471,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/strategy.registry",{"_index":1365,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["set",{"_index":1247,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["setdata",{"_index":1106,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["setdata(data",{"_index":1110,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["setmetadata",{"_index":1107,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["setmetadata('filterablefields",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('queryoutputtype",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('queryprimarykey",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('queryroutekey",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('querytype",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('sortablefields",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(meta",{"_index":1112,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["setoptions",{"_index":1142,"title":{},"body":{"classes/CrudSettingsStorage.html":{}}}],["setoptions(options",{"_index":1145,"title":{},"body":{"classes/CrudSettingsStorage.html":{}}}],["settings",{"_index":1035,"title":{},"body":{"modules/CrudModule.html":{},"classes/SetupCli.html":{}}}],["setupcli",{"_index":635,"title":{"classes/SetupCli.html":{}},"body":{"modules/CliModule.html":{},"classes/SetupCli.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":778,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["signindto",{"_index":255,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":237,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["simple",{"_index":1341,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["single",{"_index":1400,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["single.interceptor.ts",{"_index":1187,"title":{},"body":{"classes/CrudTransformSingleInterceptor.html":{},"coverage.html":{}}}],["single.interceptor.ts:11",{"_index":1189,"title":{},"body":{"classes/CrudTransformSingleInterceptor.html":{}}}],["single.interceptor.ts:6",{"_index":1188,"title":{},"body":{"classes/CrudTransformSingleInterceptor.html":{}}}],["skip",{"_index":1073,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["slug",{"_index":530,"title":{},"body":{"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleEntity.html":{},"classes/CreateUserHandle.html":{}}}],["sort",{"_index":1071,"title":{},"body":{"classes/CrudPaginationRequest.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"miscellaneous/variables.html":{}}}],["sortable",{"_index":1194,"title":{},"body":{"interfaces/ICrudSearchRequestOptions.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["sortable.request",{"_index":1096,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["sortable.request.ts",{"_index":1148,"title":{},"body":{"classes/CrudSortableRequest.html":{},"coverage.html":{}}}],["sortable.request.ts:10",{"_index":1150,"title":{},"body":{"classes/CrudSortableRequest.html":{}}}],["sortable.request.ts:14",{"_index":1155,"title":{},"body":{"classes/CrudSortableRequest.html":{}}}],["sortablefields",{"_index":1138,"title":{},"body":{"guards/CrudSearchRequestSortablesGuard.html":{}}}],["sortablekeys",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortables.guard.ts",{"_index":1135,"title":{},"body":{"guards/CrudSearchRequestSortablesGuard.html":{},"coverage.html":{}}}],["sortables.guard.ts:11",{"_index":1136,"title":{},"body":{"guards/CrudSearchRequestSortablesGuard.html":{}}}],["sortables.guard.ts:14",{"_index":1137,"title":{},"body":{"guards/CrudSearchRequestSortablesGuard.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"modules/CliModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"modules/CrudModule.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"classes/InvalidUserException.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"controllers/RolesController.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["specified",{"_index":1252,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["src/.../access",{"_index":1770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auth",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constants.ts",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constructor.ts",{"_index":1776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../create",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../crud",{"_index":1772,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../filter",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../oauth2",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../query",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../strategy.explorer.ts",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strategy.registry.ts",{"_index":1773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/admin.config.ts",{"_index":177,"title":{},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{}}}],["src/admin.config.ts:5",{"_index":1489,"title":{},"body":{"interfaces/ResourceDictonary.html":{}}}],["src/admin.module.ts",{"_index":205,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin.module.ts:29",{"_index":212,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin.module.ts:33",{"_index":208,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/auth/auth.constants.ts",{"_index":1641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts:101",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.module.ts:186",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/commands/create",{"_index":750,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/constants/index.ts",{"_index":1653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controllers/auth.controller.ts",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controllers/auth.controller.ts:139",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:156",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:172",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/auth.controller.ts:72",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/controllers/oauth2.controller.ts",{"_index":1360,"title":{},"body":{"controllers/Oauth2Controller.html":{},"coverage.html":{}}}],["src/auth/controllers/oauth2.controller.ts:39",{"_index":1363,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["src/auth/controllers/roles.controller.ts",{"_index":1490,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/auth/controllers/token.controller.ts",{"_index":1521,"title":{},"body":{"controllers/TokenController.html":{},"coverage.html":{}}}],["src/auth/controllers/token.controller.ts:106",{"_index":1539,"title":{},"body":{"controllers/TokenController.html":{}}}],["src/auth/controllers/token.controller.ts:113",{"_index":1528,"title":{},"body":{"controllers/TokenController.html":{}}}],["src/auth/controllers/token.controller.ts:120",{"_index":1536,"title":{},"body":{"controllers/TokenController.html":{}}}],["src/auth/controllers/token.controller.ts:98",{"_index":1532,"title":{},"body":{"controllers/TokenController.html":{}}}],["src/auth/decorators/auth",{"_index":1656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/oauth2",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/entities/auth",{"_index":398,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"coverage.html":{}}}],["src/auth/entities/oauth2",{"_index":1301,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"coverage.html":{}}}],["src/auth/events/access",{"_index":6,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"coverage.html":{}}}],["src/auth/events/client",{"_index":646,"title":{},"body":{"classes/ClientCreatedEvent.html":{},"coverage.html":{}}}],["src/auth/exceptions/access",{"_index":49,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"coverage.html":{}}}],["src/auth/exceptions/client",{"_index":695,"title":{},"body":{"classes/ClientNotFoundException.html":{},"coverage.html":{}}}],["src/auth/exceptions/invalid",{"_index":1203,"title":{},"body":{"classes/InvalidUserException.html":{},"coverage.html":{}}}],["src/auth/interfaces/access",{"_index":132,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/client",{"_index":703,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/oauth2",{"_index":1373,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/interfaces/system",{"_index":1512,"title":{},"body":{"interfaces/SystemAdminInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/user",{"_index":1623,"title":{},"body":{"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/user.interface.ts",{"_index":1609,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"coverage.html":{}}}],["src/auth/interfaces/user.interface.ts:15",{"_index":1614,"title":{},"body":{"classes/UserClass.html":{}}}],["src/auth/interfaces/user.interface.ts:23",{"_index":1612,"title":{},"body":{"classes/UserClass.html":{}}}],["src/auth/interfaces/user.interface.ts:30",{"_index":1618,"title":{},"body":{"classes/UserClass.html":{}}}],["src/auth/interfaces/user.interface.ts:34",{"_index":1617,"title":{},"body":{"classes/UserClass.html":{}}}],["src/auth/loader.ts",{"_index":189,"title":{},"body":{"injectables/AdminLoader.html":{},"coverage.html":{}}}],["src/auth/loader.ts:6",{"_index":193,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["src/auth/repository/access",{"_index":81,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"coverage.html":{}}}],["src/auth/repository/client.repository.ts",{"_index":722,"title":{},"body":{"injectables/ClientRepository.html":{},"coverage.html":{}}}],["src/auth/repository/client.repository.ts:15",{"_index":731,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:25",{"_index":733,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:39",{"_index":735,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:53",{"_index":727,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:57",{"_index":729,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:9",{"_index":725,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/requests/oauth2",{"_index":1235,"title":{},"body":{"classes/OAuth2Request.html":{},"coverage.html":{}}}],["src/auth/requests/sign",{"_index":1500,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/responses/auth",{"_index":430,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"coverage.html":{}}}],["src/auth/responses/oauth2",{"_index":1274,"title":{},"body":{"classes/OAuth2Response.html":{},"coverage.html":{}}}],["src/auth/responses/token",{"_index":1595,"title":{},"body":{"classes/TokenResponse.html":{},"coverage.html":{}}}],["src/auth/services/strategy.explorer.ts",{"_index":1437,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/services/strategy.explorer.ts:14",{"_index":1505,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:17",{"_index":1506,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:27",{"_index":1511,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:37",{"_index":1509,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:48",{"_index":1507,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.registry.ts",{"_index":1384,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/services/strategy.registry.ts:19",{"_index":1391,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:28",{"_index":1399,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:43",{"_index":1397,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:53",{"_index":1401,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:73",{"_index":1392,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:90",{"_index":1395,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/strategies/access",{"_index":148,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/client",{"_index":650,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/password.strategy.ts",{"_index":1467,"title":{},"body":{"classes/PasswordStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/password.strategy.ts:18",{"_index":1468,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["src/auth/strategies/password.strategy.ts:36",{"_index":1470,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["src/auth/strategies/password.strategy.ts:51",{"_index":1469,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["src/auth/strategies/refresh",{"_index":1480,"title":{},"body":{"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/tasks/auth",{"_index":581,"title":{},"body":{"injectables/AuthTasksService.html":{},"coverage.html":{}}}],["src/auth/types/oauth2",{"_index":1778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/cli/auth/create",{"_index":598,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"coverage.html":{}}}],["src/cli/auth/setup",{"_index":1493,"title":{},"body":{"classes/SetupCli.html":{},"coverage.html":{}}}],["src/cli/cli.module.ts",{"_index":639,"title":{},"body":{"modules/CliModule.html":{}}}],["src/constants.ts",{"_index":1684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/crud/crud.module.ts",{"_index":1029,"title":{},"body":{"modules/CrudModule.html":{}}}],["src/crud/crud.module.ts:17",{"_index":1032,"title":{},"body":{"modules/CrudModule.html":{}}}],["src/crud/crud.module.ts:8",{"_index":1031,"title":{},"body":{"modules/CrudModule.html":{}}}],["src/crud/decorators/crud",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/crud/guards/crud",{"_index":977,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"coverage.html":{}}}],["src/crud/helpers/crud",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/crud/interceptor/crud",{"_index":1158,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"coverage.html":{}}}],["src/crud/interfaces/filter",{"_index":1717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/crud/interfaces/query",{"_index":1200,"title":{},"body":{"interfaces/IQueryController.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/crud/requests/crud",{"_index":1010,"title":{},"body":{"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudSortableRequest.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"coverage.html":{}}}],["src/crud/resources/crud",{"_index":1040,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationResource.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"coverage.html":{}}}],["src/crud/settings",{"_index":1139,"title":{},"body":{"classes/CrudSettingsStorage.html":{},"coverage.html":{}}}],["src/crud/types/access",{"_index":1777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/crud/types/constructor.ts",{"_index":1779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/jwt/guards/jwt",{"_index":1214,"title":{},"body":{"guards/JwtTokenGuard.html":{},"coverage.html":{}}}],["src/jwt/jwt",{"_index":1211,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["started",{"_index":1740,"title":{"index.html":{}},"body":{}}],["starts",{"_index":1731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["starts_with",{"_index":1730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":57,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/ClientNotFoundException.html":{},"modules/CrudModule.html":{},"classes/CrudSettingsStorage.html":{},"classes/InvalidUserException.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["status",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["still",{"_index":1431,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["storage",{"_index":142,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"modules/CrudModule.html":{}}}],["storage.ts",{"_index":1140,"title":{},"body":{"classes/CrudSettingsStorage.html":{},"coverage.html":{}}}],["storage.ts:10",{"_index":1144,"title":{},"body":{"classes/CrudSettingsStorage.html":{}}}],["storage.ts:4",{"_index":1143,"title":{},"body":{"classes/CrudSettingsStorage.html":{}}}],["storage.ts:6",{"_index":1146,"title":{},"body":{"classes/CrudSettingsStorage.html":{}}}],["store",{"_index":718,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"miscellaneous/variables.html":{}}}],["strategies",{"_index":496,"title":{},"body":{"modules/AuthModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["strategies.foreach(strategy",{"_index":1417,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategy",{"_index":151,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategy.decorator",{"_index":664,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["strategy.decorator.ts",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy.explorer",{"_index":1407,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategy.interface",{"_index":1409,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["strategy.interface.ts",{"_index":1374,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"coverage.html":{}}}],["strategy.interface.ts:16",{"_index":1381,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["strategy.interface.ts:27",{"_index":1379,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["strategyexplorer",{"_index":470,"title":{"injectables/StrategyExplorer.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategyname",{"_index":1414,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategyregistry",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/Oauth2Controller.html":{}}}],["strict",{"_index":1413,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudSortableRequest.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryDictionary.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"interfaces/ResourceDictonary.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully.'})@apiresponse({status",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":173,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/SetupCli.html":{}}}],["support",{"_index":1744,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1745,"title":{},"body":{"modules.html":{}}}],["system",{"_index":611,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"modules/CrudModule.html":{},"classes/SetupCli.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["system:admin",{"_index":609,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["system:permissions",{"_index":918,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{}}}],["system:setup",{"_index":1498,"title":{},"body":{"classes/SetupCli.html":{}}}],["system_roles_permissions",{"_index":571,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["systemadmin",{"_index":936,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["systemadmininterface",{"_index":518,"title":{"interfaces/SystemAdminInterface.html":{}},"body":{"modules/AuthModule.html":{},"classes/CreateUserHandle.html":{},"interfaces/SystemAdminInterface.html":{},"coverage.html":{}}}],["systemadminprovider",{"_index":517,"title":{},"body":{"modules/AuthModule.html":{}}}],["systempermission",{"_index":891,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["systempermission.displaytitle",{"_index":892,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["systempermission.group",{"_index":894,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["systempermission.save",{"_index":895,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["systempermission.slug",{"_index":893,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["t",{"_index":187,"title":{},"body":{"interfaces/AdminConfig.html":{},"classes/CrudPaginationResource.html":{},"interfaces/QueryDictionary.html":{},"interfaces/ResourceDictonary.html":{},"injectables/StrategyExplorer.html":{}}}],["table",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1048,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["target",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tasks",{"_index":499,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"coverage.html":{}}}],["tasks/auth",{"_index":498,"title":{},"body":{"modules/AuthModule.html":{}}}],["tentitytype",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["term",{"_index":1014,"title":{},"body":{"classes/CrudFilterableRequest.html":{}}}],["text",{"_index":1330,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["third",{"_index":1355,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["this.accesstoken",{"_index":1296,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["this.accesstokenexp",{"_index":1298,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.accesstokenexpirems",{"_index":1608,"title":{},"body":{"classes/TokenResponse.html":{}}}],["this.accesstokenexpiresat",{"_index":1605,"title":{},"body":{"classes/TokenResponse.html":{}}}],["this.accesstokenrepository.findbyaccesstoken",{"_index":174,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["this.accesstokenrepository.findbyrefreshtoken",{"_index":1486,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["this.clientrepository.create(client",{"_index":847,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["this.clientrepository.find",{"_index":775,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["this.clientrepository.findbyclientid(request.clientid",{"_index":1369,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["this.commandbus.execute",{"_index":624,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateUserCli.html":{},"classes/PasswordStrategy.html":{},"classes/SetupCli.html":{}}}],["this.commandbus.execute(new",{"_index":919,"title":{},"body":{"classes/CreateSystemPermissionsCli.html":{},"classes/SetupCli.html":{}}}],["this.data",{"_index":1115,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["this.datasource",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserHandle.html":{},"classes/PasswordStrategy.html":{}}}],["this.datasource.getrepository(querytype",{"_index":999,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{}}}],["this.email",{"_index":1620,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["this.eventbus.publish",{"_index":849,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["this.explorerservice.explore",{"_index":525,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.extractmetadata(instance",{"_index":1462,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.filterprovider(instance",{"_index":1449,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.flatmap",{"_index":1448,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.hasnextpage",{"_index":1068,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["this.haspreviouspage",{"_index":1067,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["this.id",{"_index":1619,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["this.itemcount",{"_index":1064,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["this.jwtrepo",{"_index":594,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["this.jwtrepo.count",{"_index":1234,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["this.jwtrepo.create",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtrepo.update",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.signasync(user.tojson",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.jwtservice.verifyasync(authtoken",{"_index":1231,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["this.logger.debug('clear",{"_index":591,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["this.logger.log('admin",{"_index":199,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{}}}],["this.logger.log('authmodule",{"_index":524,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.meta",{"_index":1116,"title":{},"body":{"classes/CrudPaginationResource.html":{}}}],["this.moduleref.get(strategy",{"_index":1412,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.modulescontainer.values",{"_index":1447,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.options.jwtexpires",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.options.jwtrefreshexpires",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.options.jwtsecret",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.originaldto",{"_index":1177,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["this.page",{"_index":1060,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["this.pagecount",{"_index":1065,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["this.permissiongrouprepo.create",{"_index":880,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["this.permissionrepo.create",{"_index":886,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["this.queryoptions",{"_index":1147,"title":{},"body":{"classes/CrudSettingsStorage.html":{}}}],["this.reflector.get",{"_index":992,"title":{},"body":{"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{}}}],["this.reflectstrategyname(strategy",{"_index":1415,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.refreshtoken",{"_index":1297,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["this.refreshtokenexp",{"_index":1299,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.refreshtokenexpiresat",{"_index":1606,"title":{},"body":{"classes/TokenResponse.html":{}}}],["this.refreshtokenexpiresms",{"_index":1607,"title":{},"body":{"classes/TokenResponse.html":{}}}],["this.registerstrategy(strategy",{"_index":1418,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry",{"_index":1420,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry[request.granttype].getoauth2response",{"_index":1422,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry[request.granttype].validate(request",{"_index":1421,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry[strategyname",{"_index":1416,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.repository",{"_index":1583,"title":{},"body":{"controllers/TokenController.html":{}}}],["this.repository.delete(accesstoken.id",{"_index":128,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["this.repository.delete(id",{"_index":129,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["this.repository.findone",{"_index":121,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{}}}],["this.repository.findoneby",{"_index":739,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["this.repository.save(accesstoken",{"_index":127,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["this.repository.save(client",{"_index":743,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["this.rolerepo.create",{"_index":897,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["this.rolerepo.findonebyorfail",{"_index":967,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["this.scope",{"_index":1300,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.strategyregistry.getoauth2response(request",{"_index":1372,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["this.strategyregistry.register(strategies",{"_index":526,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.strategyregistry.validate(request",{"_index":1370,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["this.systemadmin.create",{"_index":956,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["this.take",{"_index":1062,"title":{},"body":{"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"interfaces/ICrudPaginationMetaParameters.html":{}}}],["this.token",{"_index":456,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{}}}],["this.transformdto",{"_index":1178,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["this.user",{"_index":457,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{}}}],["this.userloader.load(this.datasource",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userrolerepo.create",{"_index":969,"title":{},"body":{"classes/CreateUserHandle.html":{}}}],["this.uservalidator.validate",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"classes/PasswordStrategy.html":{}}}],["throw",{"_index":124,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"controllers/AuthController.html":{},"injectables/ClientRepository.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{},"controllers/Oauth2Controller.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"controllers/TokenController.html":{}}}],["thrown",{"_index":52,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["throws",{"_index":146,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["time",{"_index":1250,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["time.'})@expose({name",{"_index":1260,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["toekn",{"_index":76,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["tojson",{"_index":1611,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["token",{"_index":7,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionCommand.html":{},"classes/CreateUserCommand.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/TokenResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token(@body",{"_index":1368,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["token(request",{"_index":1361,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["token.'})@get('logout')@version('1",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.'})@get('logoutall')@version('1",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.command",{"_index":666,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["token.command.ts",{"_index":751,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"coverage.html":{}}}],["token.command.ts:10",{"_index":760,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:11",{"_index":757,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:12",{"_index":758,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:13",{"_index":759,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:14",{"_index":761,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:7",{"_index":755,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:9",{"_index":756,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.entity",{"_index":110,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"controllers/AuthController.html":{},"classes/AuthJwtTokenResponse.html":{},"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"modules/JwtAuthModule.html":{},"guards/JwtTokenGuard.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"controllers/TokenController.html":{},"classes/UserPayload.html":{}}}],["token.entity.ts",{"_index":399,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"coverage.html":{}}}],["token.entity.ts:12",{"_index":415,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["token.entity.ts:16",{"_index":417,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["token.entity.ts:17",{"_index":1314,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:24",{"_index":408,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["token.entity.ts:26",{"_index":1304,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:32",{"_index":420,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["token.entity.ts:34",{"_index":1315,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:35",{"_index":411,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["token.entity.ts:37",{"_index":1305,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:38",{"_index":422,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{}}}],["token.entity.ts:40",{"_index":1316,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:44",{"_index":413,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:47",{"_index":1320,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:50",{"_index":424,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:57",{"_index":1309,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.entity.ts:60",{"_index":1312,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["token.guard",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.guard.ts",{"_index":1215,"title":{},"body":{"guards/JwtTokenGuard.html":{},"coverage.html":{}}}],["token.guard.ts:18",{"_index":1217,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["token.guard.ts:28",{"_index":1218,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["token.handler.ts",{"_index":762,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"coverage.html":{}}}],["token.handler.ts:14",{"_index":766,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["token.handler.ts:28",{"_index":768,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["token.repository.ts",{"_index":82,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"coverage.html":{}}}],["token.repository.ts:10",{"_index":91,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:16",{"_index":101,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:33",{"_index":103,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:50",{"_index":94,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:56",{"_index":97,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:60",{"_index":99,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.response",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TokenController.html":{}}}],["token.response.ts",{"_index":431,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"coverage.html":{}}}],["token.response.ts:12",{"_index":439,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{}}}],["token.response.ts:15",{"_index":437,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["token.response.ts:18",{"_index":440,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["token.response.ts:19",{"_index":446,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{}}}],["token.response.ts:21",{"_index":436,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["token.response.ts:24",{"_index":434,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["token.response.ts:8",{"_index":438,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{}}}],["token.strategy.ts",{"_index":149,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:16",{"_index":1481,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:18",{"_index":157,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["token.strategy.ts:32",{"_index":1483,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:35",{"_index":159,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["token.strategy.ts:47",{"_index":1482,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["token_type",{"_index":1293,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["tokencontroller",{"_index":489,"title":{"controllers/TokenController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/TokenController.html":{},"coverage.html":{}}}],["tokenexpires",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenfound",{"_index":1233,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["tokenrefreshexpires",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokenresponse",{"_index":317,"title":{"classes/TokenResponse.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/TokenResponse.html":{},"coverage.html":{}}}],["tokens",{"_index":138,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AuthTasksService.html":{},"classes/CreateAccessTokenHandler.html":{},"controllers/TokenController.html":{}}}],["tokentype",{"_index":1278,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["tpapps",{"_index":1270,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["transform",{"_index":244,"title":{},"body":{"modules/AdminModule.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["transformdto",{"_index":1163,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{}}}],["transformer",{"_index":443,"title":{},"body":{"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"dependencies.html":{}}}],["transport",{"_index":1237,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["trim",{"_index":1230,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["true",{"_index":234,"title":{},"body":{"modules/AdminModule.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudPaginationRequest.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["true})@exclude",{"_index":1287,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["true})@expose({name",{"_index":455,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{}}}],["true})@isarray()@type(undefined",{"_index":1077,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["true})@isnotempty()@expose({name",{"_index":1241,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["true})@isoptional()@validatenested({each",{"_index":1076,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["try",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"guards/JwtTokenGuard.html":{}}}],["type",{"_index":35,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"classes/AuthJwtTokenResponse.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateSystemPermissionsCli.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationMeta.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudPaginationResource.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/ICrudPaginationMetaParameters.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"controllers/Oauth2Controller.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SetupCli.html":{},"classes/SignInDto.html":{},"injectables/StrategyExplorer.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1767,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":681,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/IQueryController.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":107,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"entities/AuthJwtTokenEntity.html":{},"entities/AuthPermissionEntity.html":{},"entities/AuthPermissionGroupEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/AuthRoleEntity.html":{},"injectables/AuthTasksService.html":{},"injectables/ClientRepository.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"guards/CrudEntityDetectionGuard.html":{},"classes/CrudPaginationResource.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/IQueryController.html":{},"guards/JwtTokenGuard.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{},"classes/PasswordStrategy.html":{},"interfaces/QueryModuleOptions.html":{},"interfaces/QueryOptions.html":{},"interfaces/SystemAdminInterface.html":{},"controllers/TokenController.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["typeormentity",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":474,"title":{},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{}}}],["typeormmodule.forfeature",{"_index":521,"title":{},"body":{"modules/AuthModule.html":{},"modules/JwtAuthModule.html":{}}}],["types",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ICrudSearchRequestOptions.html":{},"interfaces/Oauth2PayloadInterface.html":{},"miscellaneous/enumerations.html":{}}}],["types/oauth2",{"_index":1428,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["uint32array(length",{"_index":946,"title":{},"body":{"classes/CreateUserHandle.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":66,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"classes/RefreshTokenStrategy.html":{},"controllers/TokenController.html":{}}}],["unauthorizedexception('please",{"_index":1227,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["undefined",{"_index":1164,"title":{},"body":{"classes/CrudTransformPaginationInterceptor.html":{},"classes/CrudTransformSingleInterceptor.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["unequal",{"_index":1720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unique",{"_index":419,"title":{},"body":{"entities/AuthJwtTokenEntity.html":{},"entities/AuthRoleAssignmentEntity.html":{},"entities/Oauth2AccessTokenEntity.html":{},"entities/Oauth2ClientEntity.html":{}}}],["unique(['clientid",{"_index":1359,"title":{},"body":{"entities/Oauth2ClientEntity.html":{}}}],["unique(['role",{"_index":563,"title":{},"body":{"entities/AuthRoleAssignmentEntity.html":{}}}],["unknown",{"_index":769,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"controllers/TokenController.html":{},"miscellaneous/variables.html":{}}}],["until",{"_index":1281,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/TokenResponse.html":{}}}],["urlkey",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":1289,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["useclass",{"_index":506,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":448,"title":{},"body":{"classes/AuthLoginTokenResponse.html":{},"classes/CreateClientCommand.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/TokenResponse.html":{}}}],["usefactory",{"_index":243,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('access",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards(crudentitydetectionguard",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards(crudsearchrequestfiltersguard",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards(crudsearchrequestsortablesguard",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards(jwttokenguard",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["useguards(jwttokenguard)@apibearerauth()@apiextramodels(userclass)@apiresponse({type",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwttokenguard)@apibearerauth()@apiresponse({status",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"miscellaneous/variables.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"miscellaneous/variables.html":{}}}],["useinterceptors(new",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"modules/AuthModule.html":{},"interfaces/BasicCommandOptions.html":{},"classes/ClientPayload.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserCli.html":{},"classes/CreateUserCommand.html":{},"classes/CreateUserHandle.html":{},"classes/InvalidUserException.html":{},"guards/JwtTokenGuard.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"interfaces/SystemAdminInterface.html":{},"classes/TokenResponse.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.cli",{"_index":641,"title":{},"body":{"modules/CliModule.html":{}}}],["user.cli.ts",{"_index":599,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{},"coverage.html":{}}}],["user.cli.ts:16",{"_index":922,"title":{},"body":{"classes/CreateUserCli.html":{}}}],["user.cli.ts:25",{"_index":924,"title":{},"body":{"classes/CreateUserCli.html":{}}}],["user.cli.ts:33",{"_index":925,"title":{},"body":{"classes/CreateUserCli.html":{}}}],["user.cli.ts:37",{"_index":926,"title":{},"body":{"classes/CreateUserCli.html":{}}}],["user.exception",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.exception.ts",{"_index":1204,"title":{},"body":{"classes/InvalidUserException.html":{},"coverage.html":{}}}],["user.exception.ts:13",{"_index":1208,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["user.exception.ts:24",{"_index":1207,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["user.id",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{},"guards/JwtTokenGuard.html":{},"classes/PasswordStrategy.html":{}}}],["user.interface",{"_index":1520,"title":{},"body":{"interfaces/SystemAdminInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["user_id",{"_index":1319,"title":{},"body":{"entities/Oauth2AccessTokenEntity.html":{}}}],["userclass",{"_index":310,"title":{"classes/UserClass.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLoginTokenResponse.html":{},"guards/JwtTokenGuard.html":{},"interfaces/SystemAdminInterface.html":{},"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["userclass(object.id",{"_index":1621,"title":{},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{}}}],["userclass.fromjson(payload",{"_index":1232,"title":{},"body":{"guards/JwtTokenGuard.html":{}}}],["userclasspayload",{"_index":1616,"title":{"interfaces/UserClassPayload.html":{}},"body":{"classes/UserClass.html":{},"interfaces/UserClassPayload.html":{},"coverage.html":{}}}],["userclass})@get('me')@version('1",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":25,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/InvalidUserException.html":{},"entities/Oauth2AccessTokenEntity.html":{},"interfaces/UserLoaderInterface.html":{}}}],["userloader",{"_index":154,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{}}}],["userloaderinterface",{"_index":155,"title":{"interfaces/UserLoaderInterface.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/UserLoaderInterface.html":{},"coverage.html":{}}}],["userloaderprovider",{"_index":513,"title":{},"body":{"modules/AuthModule.html":{}}}],["username",{"_index":928,"title":{},"body":{"classes/CreateUserCommand.html":{},"classes/SignInDto.html":{}}}],["usernanme",{"_index":1515,"title":{},"body":{"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["userpayload",{"_index":168,"title":{"classes/UserPayload.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/UserPayload.html":{},"coverage.html":{}}}],["userrole",{"_index":905,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["userrole.displaytitle",{"_index":906,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["userrole.save",{"_index":908,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["userrole.slug",{"_index":907,"title":{},"body":{"classes/CreateSystemPermissionHandler.html":{}}}],["userrolerepo",{"_index":934,"title":{},"body":{"classes/CreateUserHandle.html":{},"guards/JwtTokenGuard.html":{}}}],["users",{"_index":567,"title":{},"body":{"entities/AuthRoleEntity.html":{},"classes/InvalidUserException.html":{}}}],["users.id",{"_index":575,"title":{},"body":{"entities/AuthRoleEntity.html":{}}}],["uservalidator",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"classes/PasswordStrategy.html":{}}}],["uservalidatorinterface",{"_index":311,"title":{"interfaces/UserValidatorInterface.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/PasswordStrategy.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["uservalidatorprovider",{"_index":515,"title":{},"body":{"modules/AuthModule.html":{}}}],["usevalue",{"_index":242,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["using",{"_index":161,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["utc",{"_index":1255,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["uuid",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateClientHandler.html":{}}}],["uuidv4",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateClientHandler.html":{}}}],["v4",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateClientHandler.html":{}}}],["val",{"_index":620,"title":{},"body":{"interfaces/BasicCommandOptions.html":{},"classes/CreateUserCli.html":{}}}],["valid",{"_index":1382,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["validate",{"_index":152,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["validate(@req",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate(bearer",{"_index":158,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["validate(datasource",{"_index":1633,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["validate(req",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate(request",{"_index":659,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["validatenested",{"_index":1094,"title":{},"body":{"classes/CrudPaginationRequest.html":{}}}],["validates",{"_index":1514,"title":{},"body":{"interfaces/SystemAdminInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["validationpipe",{"_index":215,"title":{},"body":{"modules/AdminModule.html":{}}}],["validator",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{},"guards/CrudSearchRequestFiltersGuard.html":{},"guards/CrudSearchRequestSortablesGuard.html":{},"classes/CrudSortableRequest.html":{},"classes/OAuth2Request.html":{},"classes/SignInDto.html":{},"dependencies.html":{}}}],["validator.interface.ts",{"_index":1632,"title":{},"body":{"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["validator.interface.ts:17",{"_index":1634,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["value",{"_index":196,"title":{},"body":{"injectables/AdminLoader.html":{},"injectables/AuthTasksService.html":{},"classes/ClientPayload.html":{},"classes/CreateClientHandler.html":{},"classes/CreateSystemPermissionHandler.html":{},"classes/CreateUserHandle.html":{},"classes/CrudFilterableRequest.html":{},"classes/CrudPaginationRequest.html":{},"classes/CrudSettingsStorage.html":{},"classes/CrudSortableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/UserPayload.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1780,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{},"controllers/RolesController.html":{},"controllers/TokenController.html":{},"properties.html":{}}}],["version('1",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"controllers/Oauth2Controller.html":{}}}],["version('1')@post('token')@apiresponse({type",{"_index":1362,"title":{},"body":{"controllers/Oauth2Controller.html":{}}}],["void",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthTasksService.html":{},"classes/CrudPaginationResource.html":{},"classes/CrudSettingsStorage.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"injectables/StrategyExplorer.html":{}}}],["want",{"_index":136,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["where('refreshtokenexpiresat",{"_index":596,"title":{},"body":{"injectables/AuthTasksService.html":{}}}],["withaccesstoken",{"_index":58,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["withaccesstoken(accesstoken",{"_index":61,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["withclientid",{"_index":696,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withclientid(clientid",{"_index":698,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withid",{"_index":59,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["withid(id",{"_index":67,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{}}}],["withid(userid",{"_index":1206,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["within",{"_index":1383,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["withname",{"_index":697,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withname(name",{"_index":701,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withrefreshtoken",{"_index":60,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["withrefreshtoken(refreshtoken",{"_index":69,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["wrapper",{"_index":1440,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["wrong",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["wrongcredentials",{"_index":1205,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["yes",{"_index":36,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/CreateUserCommand.html":{},"classes/OAuth2Response.html":{}}}],["zoom",{"_index":636,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessTokenCreatedEvent.html":{"url":"classes/AccessTokenCreatedEvent.html","title":"class - AccessTokenCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/events/access-token-created.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event generated when an access token is generated\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                accessTokenExpiresAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                refreshTokenExpiresAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                scope\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, clientId: string, accessToken: string, accessTokenExpiresAt: Date, refreshToken: string, refreshTokenExpiresAt: Date, scope: string, userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/events/access-token-created.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AccessTokenCreatedEvent {\n  constructor(\n    public readonly id: string,\n    public readonly clientId: string,\n    public readonly accessToken: string,\n    public readonly accessTokenExpiresAt: Date,\n    public readonly refreshToken: string,\n    public readonly refreshTokenExpiresAt: Date,\n    public readonly scope: string,\n    public readonly userId?: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccessTokenNotFoundException.html":{"url":"classes/AccessTokenNotFoundException.html","title":"class - AccessTokenNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/access-token-not-found.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when an access token was not found\n\n            \n\n            \n                Extends\n            \n            \n                        NotFoundException\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                withAccessToken\n                            \n                            \n                                    Static\n                                withId\n                            \n                            \n                                    Static\n                                withRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    withAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/access-token-not-found.exception.ts:23\n                        \n                    \n\n\n            \n                \n                        Kind message with accessToken\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UnauthorizedException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/access-token-not-found.exception.ts:12\n                        \n                    \n\n\n            \n                \n                        Kind message with id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AccessTokenNotFoundException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    withRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/access-token-not-found.exception.ts:34\n                        \n                    \n\n\n            \n                \n                        Kind message with refreshToken\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UnauthorizedException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, UnauthorizedException } from '@nestjs/common';\n\n/**\n * Exception thrown when an access token was not found\n */\nexport class AccessTokenNotFoundException extends NotFoundException {\n  /**\n   * Kind message with id\n   *\n   * @param id\n   */\n  static withId(id: string): AccessTokenNotFoundException {\n    return new AccessTokenNotFoundException(\n      `The access toekn with id \"${id}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with accessToken\n   *\n   * @param accessToken\n   */\n  static withAccessToken(accessToken: string): UnauthorizedException {\n    return new UnauthorizedException(\n      `The access token with accessToken \"${accessToken}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with refreshToken\n   *\n   * @param refreshToken\n   */\n  static withRefreshToken(refreshToken: string): UnauthorizedException {\n    return new UnauthorizedException(\n      `The refresh token with refreshToken \"${refreshToken}\" was not found`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenRepository.html":{"url":"injectables/AccessTokenRepository.html","title":"injectable - AccessTokenRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/repository/access-token.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findByAccessToken\n                            \n                            \n                                    Async\n                                findByRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/repository/access-token.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(accessToken: Oauth2AccessTokenEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            Oauth2AccessTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(accessToken: Oauth2AccessTokenEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            Oauth2AccessTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { DeleteResult, Repository } from 'typeorm';\nimport { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\nimport { AccessTokenNotFoundException } from '../exceptions/access-token-not-found.exception';\nimport { AccessTokenRepositoryInterface } from '../interfaces/access-token-repository.interface';\n\n@Injectable()\nexport class AccessTokenRepository implements AccessTokenRepositoryInterface {\n  constructor(\n    @InjectRepository(Oauth2AccessTokenEntity)\n    private readonly repository: Repository,\n  ) {}\n\n  async findByAccessToken(\n    accessToken: string,\n  ): Promise {\n    const token = await this.repository.findOne({\n      where: {\n        accessToken: accessToken,\n      },\n      relations: ['client'],\n    });\n\n    if (!token) {\n      throw AccessTokenNotFoundException.withAccessToken(accessToken);\n    }\n\n    return token;\n  }\n\n  async findByRefreshToken(\n    refreshToken: string,\n  ): Promise {\n    const token = await this.repository.findOne({\n      where: {\n        refreshToken: refreshToken,\n      },\n      relations: ['client'],\n    });\n\n    if (!token) {\n      throw AccessTokenNotFoundException.withRefreshToken(refreshToken);\n    }\n\n    return token;\n  }\n\n  async create(\n    accessToken: Oauth2AccessTokenEntity,\n  ): Promise {\n    return await this.repository.save(accessToken);\n  }\n\n  async delete(accessToken: Oauth2AccessTokenEntity): Promise {\n    return await this.repository.delete(accessToken.id);\n  }\n\n  async deleteById(id: string): Promise {\n    return await this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccessTokenRepositoryInterface.html":{"url":"interfaces/AccessTokenRepositoryInterface.html","title":"interface - AccessTokenRepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenRepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/access-token-repository.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Main interface you have to implement if you want to deal with access tokens in your\nApplication\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findByAccessToken\n                                    \n                                \n                                \n                                    \n                                        findByRefreshToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(accessToken: Oauth2AccessTokenEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/access-token-repository.interface.ts:31\n                        \n                    \n\n\n            \n                \n                        Register a new access token into the storage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            Oauth2AccessTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByAccessToken\n                        \n                    \n                \n            \n            \n                \nfindByAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/access-token-repository.interface.ts:15\n                        \n                    \n\n\n            \n                \n                        Find by access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByRefreshToken\n                        \n                    \n                \n            \n            \n                \nfindByRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/access-token-repository.interface.ts:24\n                        \n                    \n\n\n            \n                \n                        Find by access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\n\n/**\n * Main interface you have to implement if you want to deal with access tokens in your\n * Application\n */\nexport interface AccessTokenRepositoryInterface {\n  /**\n   * Find by access token\n   *\n   * @param accessToken\n   *\n   * @throws AccessTokenNotFoundException\n   */\n  findByAccessToken(accessToken: string): Promise;\n\n  /**\n   * Find by access token\n   *\n   * @param refreshToken\n   *\n   * @throws AccessTokenNotFoundException\n   */\n  findByRefreshToken(refreshToken: string): Promise;\n\n  /**\n   * Register a new access token into the storage\n   *\n   * @param accessToken\n   */\n  create(\n    accessToken: Oauth2AccessTokenEntity,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/access-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(\n  Strategy,\n  'access-token',\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessTokenRepository: AccessTokenRepositoryInterface, userLoader: UserLoaderInterface, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/access-token.strategy.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessTokenRepository\n                                                  \n                                                        \n                                                                        AccessTokenRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLoader\n                                                  \n                                                        \n                                                                        UserLoaderInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(bearer: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/access-token.strategy.ts:35\n                        \n                    \n\n\n            \n                \n                        Validate the bearer (accessToken) using the HTTP Bearer Header strategy\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bearer\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-http-bearer';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport {\n  AccessTokenRepositoryInterface,\n  UserLoaderInterface,\n  Oauth2PayloadInterface,\n  UserPayload,\n  ClientPayload,\n} from '../interfaces';\nimport { InjectDataSource } from '@nestjs/typeorm';\nimport { DataSource } from 'typeorm';\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(\n  Strategy,\n  'access-token',\n) {\n  constructor(\n    @Inject('AccessTokenRepositoryInterface')\n    private readonly accessTokenRepository: AccessTokenRepositoryInterface,\n    @Inject('UserLoaderInterface')\n    private readonly userLoader: UserLoaderInterface,\n    @InjectDataSource()\n    private readonly dataSource: DataSource,\n  ) {\n    super();\n  }\n\n  /**\n   * Validate the bearer (accessToken) using the HTTP Bearer Header strategy\n   *\n   * @param bearer\n   */\n  async validate(bearer: string): Promise {\n    const accessToken = await this.accessTokenRepository.findByAccessToken(\n      bearer,\n    );\n    if (\n      !accessToken ||\n      accessToken.accessTokenExpiresAt \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminConfig.html":{"url":"interfaces/AdminConfig.html","title":"interface - AdminConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin.config.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:         OAuth2Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OAuth2Options\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         QueryOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueryOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\nimport { OAuth2Options } from './auth';\nimport { QueryOptions } from './crud';\n\nexport interface ResourceDictonary {\n  [Key: string]: T;\n}\nexport interface AdminConfig extends Pick {\n  query?: QueryOptions;\n  auth: OAuth2Options;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminLoader.html":{"url":"injectables/AdminLoader.html","title":"injectable - AdminLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/loader.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapter: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/auth/loader.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapter\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('AdminCoreModule')\n                    \n                \n                    \n                        \n                                Defined in src/auth/loader.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Injectable()\nexport class AdminLoader {\n  private readonly logger = new Logger('AdminCoreModule');\n\n  constructor(httpAdapter: HttpAdapterHost) {\n    this.logger.log('Admin Loader Bootstrap!');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AdminConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin.module.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AdminConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  ClassSerializerInterceptor,\n  DynamicModule,\n  Global,\n  Logger,\n  Module,\n  OnModuleInit,\n  ValidationPipe,\n} from '@nestjs/common';\nimport {\n  APP_INTERCEPTOR,\n  APP_PIPE,\n  HttpAdapterHost,\n  Reflector,\n} from '@nestjs/core';\nimport { AdminConfig } from './admin.config';\nimport { AuthModule } from './auth';\nimport { CONFIG_INJECT_KEY } from './constants';\nimport { CrudModule } from './crud/crud.module';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({})\n@Global()\nexport class AdminModule implements OnModuleInit {\n  private readonly logger = new Logger('AdminModule');\n\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  public async onModuleInit() {\n    this.logger.log('Admin Module Initialized');\n  }\n\n  static forRoot(options: AdminConfig): DynamicModule {\n    return {\n      module: AdminModule,\n      imports: [\n        AuthModule.forRoot(options.auth),\n        CrudModule.forRoot(options.query),\n        JwtModule.register({\n          global: true,\n          secret: options.auth.jwtSecret,\n          signOptions: { expiresIn: '30d' },\n        }),\n      ],\n      providers: [\n        {\n          provide: CONFIG_INJECT_KEY,\n          useValue: options,\n        },\n        {\n          useFactory: () => {\n            return new ValidationPipe({ transform: true });\n          },\n          provide: APP_PIPE,\n          inject: [],\n        },\n        {\n          provide: APP_INTERCEPTOR,\n          useFactory: (reflector: Reflector) => {\n            return new ClassSerializerInterceptor(reflector);\n          },\n          inject: [Reflector],\n        },\n      ],\n      exports: [JwtModule],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logoutAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: SignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@Version('1')@ApiResponse({status: 401, description: 'Wrong credentials.'})@ApiResponse({status: 201, type: AuthLoginTokenResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtTokenGuard)@ApiBearerAuth()@ApiResponse({status: 201, description: 'The logout was successfully.'})@ApiResponse({status: 403, description: 'Unauthorized or invalid token.'})@Get('logout')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        logoutAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    logoutAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtTokenGuard)@ApiBearerAuth()@ApiResponse({status: 201, description: 'The logout from all devices was successfully.'})@ApiResponse({status: 403, description: 'Unauthorized or invalid token.'})@Get('logoutAll')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtTokenGuard)@ApiBearerAuth()@ApiExtraModels(UserClass)@ApiResponse({type: UserClass})@Get('me')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  Inject,\n  InternalServerErrorException,\n  Post,\n  Req,\n  UseGuards,\n  UseInterceptors,\n  Version,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  ApiBearerAuth,\n  ApiExtraModels,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm';\nimport ms from 'ms';\nimport { DataSource, Repository } from 'typeorm';\nimport { v4 as uuidv4 } from 'uuid';\nimport { OAUTH2_SERVER_OPTIONS } from '../auth.constants';\nimport { AuthJwtTokenEntity } from '../entities/auth-jwt-token.entity';\nimport { InvalidUserException } from '../exceptions/invalid-user.exception';\nimport { JwtTokenGuard } from '../../jwt/guards/jwt-token.guard';\nimport {\n  UserClass,\n  UserLoaderInterface,\n  UserValidatorInterface,\n} from '../interfaces';\nimport { SignInDto } from '../requests/sign-request.dto';\nimport { AuthLoginTokenResponse } from '../responses/auth-login-token.response';\nimport { OAuth2Options } from '../types';\nimport { TokenResponse } from '../responses/token-response.dto';\nimport { IsNumber } from 'class-validator';\nimport { isEmpty, isString } from 'lodash';\n\n@Controller({\n  path: 'authentication',\n  version: ['1'],\n})\n@ApiTags('Authentication')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AuthController {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param strategyRegistry\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    @Inject('UserValidatorInterface')\n    private readonly userValidator: UserValidatorInterface,\n    @Inject('UserLoaderInterface')\n    private readonly userLoader: UserLoaderInterface,\n    @Inject(OAUTH2_SERVER_OPTIONS)\n    private readonly options: OAuth2Options,\n    @InjectDataSource()\n    private readonly dataSource: DataSource,\n    @InjectRepository(AuthJwtTokenEntity)\n    private readonly jwtRepo: Repository,\n  ) {}\n\n  @Post('login')\n  @Version('1')\n  @ApiResponse({ status: 401, description: 'Wrong credentials.' })\n  @ApiResponse({ status: 201, type: AuthLoginTokenResponse })\n  async login(@Body() credentials: SignInDto): Promise {\n    const user = await this.userValidator.validate(\n      this.dataSource,\n      credentials.email,\n      credentials.password,\n    );\n\n    if (!user) {\n      throw InvalidUserException.wrongCredentials();\n    }\n\n    const tokenExpires: number = isEmpty(this.options.jwtExpires)\n      ? ms('1d')\n      : isString(this.options.jwtExpires)\n      ? ms(this.options.jwtExpires)\n      : this.options.jwtExpires;\n\n    const tokenRefreshExpires: number = isEmpty(this.options.jwtRefreshExpires)\n      ? ms('7 days')\n      : isString(this.options.jwtRefreshExpires)\n      ? ms(this.options.jwtRefreshExpires)\n      : this.options.jwtRefreshExpires;\n\n    const token = await this.jwtService.signAsync(user.toJSON(), {\n      jwtid: uuidv4(),\n      subject: user.id,\n      expiresIn: tokenExpires,\n      secret: this.options.jwtSecret,\n    });\n\n    const refreshToken = await this.jwtService.signAsync(user.toJSON(), {\n      jwtid: uuidv4(),\n      subject: user.id,\n      expiresIn: tokenRefreshExpires,\n      secret: this.options.jwtSecret,\n    });\n\n    const newJetToken = this.jwtRepo.create();\n    newJetToken.identifier = user.id;\n    newJetToken.accessToken = token;\n    newJetToken.refreshToken = refreshToken;\n    newJetToken.accessTokenExpiresAt = new Date(Date.now() + tokenExpires);\n    newJetToken.refreshTokenExpiresAt = new Date(\n      Date.now() + tokenRefreshExpires,\n    );\n    newJetToken.createdAt = new Date();\n    newJetToken.save();\n\n    return new AuthLoginTokenResponse(\n      new TokenResponse(\n        token,\n        newJetToken.accessTokenExpiresAt,\n        tokenExpires,\n        refreshToken,\n        newJetToken.refreshTokenExpiresAt,\n        tokenRefreshExpires,\n      ),\n      user,\n    );\n  }\n\n  @UseGuards(JwtTokenGuard)\n  @ApiBearerAuth()\n  @ApiExtraModels(UserClass)\n  @ApiResponse({ type: UserClass })\n  @Get('me')\n  @Version('1')\n  async validate(@Req() req: Request): Promise {\n    try {\n      return await this.userLoader.load(this.dataSource, (req as any).user.id);\n    } catch (err) {\n      throw new InternalServerErrorException(err);\n    }\n  }\n\n  @UseGuards(JwtTokenGuard)\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 201,\n    description: 'The logout was successfully.',\n  })\n  @ApiResponse({ status: 403, description: 'Unauthorized or invalid token.' })\n  @Get('logout')\n  @Version('1')\n  async logout(@Req() req: Request) {\n    await this.jwtRepo.update(\n      { accessToken: (req as any).userToken, identifier: (req as any).user.id },\n      { revokedAt: new Date() },\n    );\n  }\n\n  @UseGuards(JwtTokenGuard)\n  @ApiBearerAuth()\n  @ApiResponse({\n    status: 201,\n    description: 'The logout from all devices was successfully.',\n  })\n  @ApiResponse({ status: 403, description: 'Unauthorized or invalid token.' })\n  @Get('logoutAll')\n  @Version('1')\n  async logoutAll(@Req() req: Request) {\n    await this.jwtRepo.update(\n      { identifier: (req as any).user.id },\n      { revokedAt: new Date() },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthJwtTokenEntity.html":{"url":"entities/AuthJwtTokenEntity.html","title":"entity - AuthJwtTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthJwtTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-jwt-token.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                accessTokenExpiresAt\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                identifier\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                refreshTokenExpiresAt\n                            \n                            \n                                    \n                                revokedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token', primary: true, nullable: false, length: 80})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'access_token_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'created_on', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token', unique: true, nullable: false, length: 80})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'refresh_token_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        revokedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'revoked_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-jwt-token.entity.ts:50\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  Entity,\n  Index,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity('system_user_tokens')\nexport class AuthJwtTokenEntity extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @Index()\n  identifier: string;\n\n  @Column({\n    name: 'access_token',\n    primary: true,\n    nullable: false,\n    length: 80,\n  })\n  accessToken: string;\n\n  @Column({\n    name: 'refresh_token',\n    unique: true,\n    nullable: false,\n    length: 80,\n  })\n  refreshToken: string;\n\n  @Column('datetime', { name: 'access_token_expires_at', nullable: false })\n  accessTokenExpiresAt: Date;\n\n  @Column('datetime', { name: 'refresh_token_expires_at', nullable: false })\n  refreshTokenExpiresAt: Date;\n\n  @Column('datetime', {\n    name: 'created_on',\n    nullable: false,\n  })\n  createdAt: Date;\n\n  @Column('datetime', {\n    name: 'revoked_at',\n    nullable: true,\n  })\n  revokedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthJwtTokenResponse.html":{"url":"classes/AuthJwtTokenResponse.html","title":"class - AuthJwtTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthJwtTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/responses/auth-jwt-token.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessTokenExpiresAt\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                identifier\n                            \n                            \n                                    \n                                    \n                                refreshTokenExpiresAt\n                            \n                            \n                                    \n                                    \n                                revokedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/auth/responses/auth-jwt-token.response.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-jwt-token.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-jwt-token.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-jwt-token.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-jwt-token.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-jwt-token.response.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        revokedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-jwt-token.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { AuthJwtTokenEntity } from '../entities/auth-jwt-token.entity';\n\nexport class AuthJwtTokenResponse {\n  @Expose()\n  @ApiProperty()\n  id: string;\n\n  @Expose()\n  @ApiProperty()\n  identifier: string;\n  @Expose()\n  @ApiProperty()\n  createdAt: Date;\n  @Expose()\n  @ApiProperty()\n  revokedAt: Date;\n  @Expose()\n  @ApiProperty()\n  accessTokenExpiresAt: Date;\n  @Expose()\n  @ApiProperty()\n  refreshTokenExpiresAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginTokenResponse.html":{"url":"classes/AuthLoginTokenResponse.html","title":"class - AuthLoginTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/responses/auth-login-token.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                token\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(token: TokenResponse, user: UserClass)\n                    \n                \n                        \n                            \n                                Defined in src/auth/responses/auth-login-token.response.ts:19\n                            \n                        \n\n                \n                    \n                            Main method used to build this object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        TokenResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserClass\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: TokenResponse, description: 'The generated access token', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-login-token.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserClass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The user datas for the user', required: true})@Expose({name: 'user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/auth-login-token.response.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { UserClass } from '../interfaces';\nimport { TokenResponse } from './token-response.dto';\n\nexport class AuthLoginTokenResponse {\n  @ApiProperty({\n    type: TokenResponse,\n    description: 'The generated access token',\n    required: true,\n  })\n  token: TokenResponse;\n\n  @ApiProperty({\n    description: 'The user datas for the user',\n    required: true,\n  })\n  @Expose({ name: 'user' })\n  user: UserClass;\n\n  /**\n   * Main method used to build this object\n   *\n   * @param token\n   * @param user\n   */\n  constructor(token: TokenResponse, user: UserClass) {\n    this.token = token;\n    this.user = user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: OAuth2Options)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.module.ts:101\n                        \n                    \n\n\n            \n                \n                        Create the static for Root Options\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            OAuth2Options\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.module.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  DynamicModule,\n  Global,\n  Inject,\n  Logger,\n  Module,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport {\n  Oauth2AccessTokenEntity,\n  Oauth2ClientEntity,\n  AuthPermissionEntity,\n  AuthPermissionGroupEntity,\n  AuthRoleAssignmentEntity,\n} from './entities';\n\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { Oauth2GrantStrategyRegistry, StrategyExplorer } from './services';\n\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtAuthModule } from '../jwt/jwt-auth.module';\nimport { CrudModule } from '../crud/crud.module';\nimport { OAUTH2_SERVER_OPTIONS } from './auth.constants';\nimport {\n  CreateAccessTokenHandler,\n  CreateClientHandler,\n  CreateSystemPermissionHandler,\n} from './commands';\nimport { CreateUserHandle } from './commands/create-user-handler';\nimport { AuthController } from './controllers';\nimport { Oauth2Controller } from './controllers/oauth2.controller';\nimport { RolesController } from './controllers/roles.controller';\nimport { TokenController } from './controllers/token.controller';\nimport { AuthRoleEntity } from './entities/auth-role.entity';\nimport { AuthJwtTokenEntity } from './entities/auth-jwt-token.entity';\nimport { AccessTokenRepository, ClientRepository } from './repository';\nimport {\n  AccessTokenStrategy,\n  ClientCredentialsStrategy,\n  PasswordStrategy,\n  RefreshTokenStrategy,\n} from './strategies';\nimport { AuthTasksService } from './tasks/auth-tasks-service';\nimport { OAuth2Options } from './types';\n\nexport const CommandHandlers = [\n  CreateClientHandler,\n  CreateAccessTokenHandler,\n  CreateUserHandle,\n  CreateSystemPermissionHandler,\n];\n\nexport const EventHandlers = [];\n\nexport const QueryHandlers = [];\n\nexport const Sagas = [];\n\nexport const Services = [\n  { provide: 'ClientRepositoryInterface', useClass: ClientRepository },\n  {\n    provide: 'AccessTokenRepositoryInterface',\n    useClass: AccessTokenRepository,\n  },\n];\n\nexport const ServiceNames = [\n  'ClientRepositoryInterface',\n  'AccessTokenRepositoryInterface',\n];\n\nexport const Resolvers = [];\n\nexport const Oauth2Strategies = [\n  ClientCredentialsStrategy,\n  RefreshTokenStrategy,\n  PasswordStrategy,\n];\n\nexport const Providers = [StrategyExplorer, Oauth2GrantStrategyRegistry];\n\n@Global()\n@Module({})\nexport class AuthModule implements OnModuleInit {\n  private readonly logger = new Logger('AuthModule');\n\n  constructor(\n    @Inject(OAUTH2_SERVER_OPTIONS)\n    private readonly options: OAuth2Options,\n    private readonly explorerService: StrategyExplorer,\n    private readonly strategyRegistry: Oauth2GrantStrategyRegistry,\n  ) {}\n\n  /**\n   * Create the static for Root Options\n   *\n   * @param options\n   */\n  public static forRoot(options: OAuth2Options): DynamicModule {\n    const oAuth2OptionsProvider = {\n      provide: OAUTH2_SERVER_OPTIONS,\n      useValue: options,\n    };\n\n    const userLoaderProvider = {\n      provide: 'UserLoaderInterface',\n      useFactory: async options => {\n        return options.userLoader;\n      },\n      inject: [OAUTH2_SERVER_OPTIONS],\n    };\n\n    const userValidatorProvider = {\n      provide: 'UserValidatorInterface',\n      useFactory: async options => {\n        return options.userValidator;\n      },\n      inject: [OAUTH2_SERVER_OPTIONS],\n    };\n\n    const systemAdminProvider = {\n      provide: 'SystemAdminInterface',\n      useFactory: async options => {\n        return options.systemAdminCreator;\n      },\n      inject: [OAUTH2_SERVER_OPTIONS],\n    };\n\n    return {\n      module: AuthModule,\n      imports: [\n        JwtAuthModule,\n        JwtModule.register({\n          global: true,\n          secret: options.jwtSecret,\n          signOptions: { expiresIn: '30d' },\n        }),\n        CqrsModule,\n        TypeOrmModule.forFeature([\n          AuthJwtTokenEntity,\n          AuthPermissionGroupEntity,\n          AuthPermissionEntity,\n          AuthRoleEntity,\n          AuthRoleAssignmentEntity,\n          Oauth2ClientEntity,\n          Oauth2AccessTokenEntity,\n        ]),\n        CrudModule.forFeature(),\n        ScheduleModule.forRoot(),\n      ],\n      controllers: [\n        Oauth2Controller,\n        AuthController,\n        TokenController,\n        RolesController,\n      ],\n      providers: [\n        oAuth2OptionsProvider,\n        userValidatorProvider,\n        userLoaderProvider,\n        systemAdminProvider,\n        ...Providers,\n        ...Services,\n        ...Resolvers,\n        ...Oauth2Strategies,\n        ...CommandHandlers,\n        ...EventHandlers,\n        ...QueryHandlers,\n        ...Sagas,\n        AccessTokenStrategy,\n        AuthTasksService,\n      ],\n      exports: [\n        ...Providers,\n        ...ServiceNames,\n        userValidatorProvider,\n        userLoaderProvider,\n        systemAdminProvider,\n        JwtModule,\n      ],\n    };\n  }\n\n  onModuleInit() {\n    this.logger.log('AuthModule Register Strategies');\n\n    const { strategies } = this.explorerService.explore();\n    this.strategyRegistry.register(strategies);\n\n    this.logger.log('AuthModule Initialized');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthPermissionEntity.html":{"url":"entities/AuthPermissionEntity.html","title":"entity - AuthPermissionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthPermissionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayTitle\n                            \n                            \n                                    \n                                    \n                                group\n                            \n                            \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthPermissionGroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, group => group.slug)@JoinColumn({name: 'group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryColumn,\n} from 'typeorm';\nimport { AuthPermissionGroupEntity } from './auth-permission-group.entity';\n\n@Entity('system_permissions')\nexport class AuthPermissionEntity extends BaseEntity {\n  @PrimaryColumn('varchar', {\n    length: 120,\n  })\n  slug: string;\n\n  @Column('varchar', {\n    length: 120,\n  })\n  displayTitle: string;\n\n  @ManyToOne(() => AuthPermissionGroupEntity, group => group.slug)\n  @JoinColumn({ name: 'group' })\n  group: AuthPermissionGroupEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthPermissionGroupEntity.html":{"url":"entities/AuthPermissionGroupEntity.html","title":"entity - AuthPermissionGroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthPermissionGroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-permission-group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayTitle\n                            \n                            \n                                    \n                                    Optional\n                                permissions\n                            \n                            \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission-group.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, role => role.group)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission-group.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission-group.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, OneToMany, PrimaryColumn } from 'typeorm';\nimport { AuthPermissionEntity } from './auth-permission.entity';\n\n@Entity('system_permission_groups')\nexport class AuthPermissionGroupEntity extends BaseEntity {\n  @PrimaryColumn('varchar', {\n    length: 120,\n  })\n  slug: string;\n\n  @Column('varchar', {\n    length: 120,\n  })\n  displayTitle: string;\n\n  @OneToMany(() => AuthPermissionEntity, role => role.group)\n  permissions?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthRoleAssignmentEntity.html":{"url":"entities/AuthRoleAssignmentEntity.html","title":"entity - AuthRoleAssignmentEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthRoleAssignmentEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-role-assignment.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                identifier\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role-assignment.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role-assignment.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthRoleEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, role => role.slug)@JoinColumn({name: 'role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role-assignment.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  Entity,\n  Index,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\nimport { AuthRoleEntity } from './auth-role.entity';\n\n@Unique(['role', 'identifier'])\n@Entity('system_user_roles')\nexport class AuthRoleAssignmentEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(() => AuthRoleEntity, role => role.slug)\n  @JoinColumn({ name: 'role' })\n  role: AuthRoleEntity;\n\n  @Column()\n  @Index()\n  identifier: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AuthRoleEntity.html":{"url":"entities/AuthRoleEntity.html","title":"entity - AuthRoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AuthRoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                displayTitle\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        displayTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthPermissionEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'system_roles_permissions'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryColumn('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, users => users.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryColumn,\n} from 'typeorm';\nimport { AuthPermissionEntity } from './auth-permission.entity';\nimport { AuthRoleAssignmentEntity } from './auth-role-assignment.entity';\n\n@Entity('system_roles')\nexport class AuthRoleEntity extends BaseEntity {\n  @ApiProperty()\n  @PrimaryColumn('varchar', {\n    length: 120,\n  })\n  slug: string;\n\n  @ApiProperty()\n  @Column('varchar', {\n    length: 120,\n  })\n  displayTitle: string;\n\n  @ManyToMany(() => AuthPermissionEntity)\n  @JoinTable({ name: 'system_roles_permissions' })\n  permissions: AuthPermissionEntity[];\n\n  @OneToMany(() => AuthRoleAssignmentEntity, users => users.id)\n  users: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthTasksService.html":{"url":"injectables/AuthTasksService.html","title":"injectable - AuthTasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthTasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/tasks/auth-tasks-service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/tasks/auth-tasks-service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleCron\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron(CronExpression.EVERY_DAY_AT_MIDNIGHT)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/tasks/auth-tasks-service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthTasksService.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/tasks/auth-tasks-service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, CronExpression } from '@nestjs/schedule';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { AuthJwtTokenEntity } from '../entities/auth-jwt-token.entity';\n\n@Injectable()\nexport class AuthTasksService {\n  private readonly logger = new Logger(AuthTasksService.name);\n\n  constructor(\n    @InjectRepository(AuthJwtTokenEntity)\n    private readonly jwtRepo: Repository,\n  ) {}\n\n  @Cron(CronExpression.EVERY_DAY_AT_MIDNIGHT)\n  handleCron() {\n    this.logger.debug('Clear none-refreshable jwt tokens');\n    this.jwtRepo\n      .createQueryBuilder()\n      .delete()\n      .where('refreshTokenExpiresAt \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BasicCommandOptions.html":{"url":"interfaces/BasicCommandOptions.html","title":"interface - BasicCommandOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BasicCommandOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/auth/create-user.cli.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommandBus } from '@nestjs/cqrs';\nimport { Command, CommandRunner, Option } from 'nest-commander';\nimport { CreateUserCommand } from '../../auth/commands/create-user-command';\n\ninterface BasicCommandOptions {\n  password?: string;\n  role?: string;\n}\n\n@Command({\n  name: 'system:admin',\n  description: 'Generate a new system administrator',\n  arguments: '',\n  options: { isDefault: true },\n})\nexport class CreateUserCli extends CommandRunner {\n  constructor(private readonly commandBus: CommandBus) {\n    super();\n  }\n\n  @Option({\n    flags: '-p, --password ',\n    description: 'With custom password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n\n  @Option({\n    flags: '-r, --role ',\n    description: 'With custom role',\n  })\n  parseRole(val: string) {\n    return val;\n  }\n\n  async run(args: string[], options: BasicCommandOptions): Promise {\n    await this.commandBus.execute(\n      new CreateUserCommand(args[0], options.password, options.role),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CliModule.html":{"url":"modules/CliModule.html","title":"module - CliModule","body":"\n                   \n\n\n\n\n    Modules\n    CliModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_exports\n\n\n\n\nCreateSystemPermissionsCli \n\nCreateSystemPermissionsCli \n\n\n\nCreateUserCli \n\nCreateUserCli \n\n\n\nSetupCli \n\nSetupCli \n\n\n\nCliModule\n\nCliModule\n\nCreateSystemPermissionsCli  -->\n\nCliModule->CreateSystemPermissionsCli \n\n\n\nCreateUserCli  -->\n\nCliModule->CreateUserCli \n\n\n\nSetupCli  -->\n\nCliModule->SetupCli \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cli/cli.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CreateSystemPermissionsCli\n                        \n                        \n                            CreateUserCli\n                        \n                        \n                            SetupCli\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { CreateUserCli } from './auth/create-user.cli';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { CreateSystemPermissionsCli } from './auth/create-permissions.cli';\nimport { SetupCli } from './auth/setup-cli';\n\n@Module({\n  imports: [CqrsModule],\n  controllers: [],\n  providers: [CreateUserCli, CreateSystemPermissionsCli, SetupCli],\n  exports: [CreateUserCli, CreateSystemPermissionsCli, SetupCli],\n})\nexport class CliModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientCreatedEvent.html":{"url":"classes/ClientCreatedEvent.html","title":"class - ClientCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/events/client-created.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event published when a client is created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                certExpiresAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, clientId: string, certExpiresAt: Date)\n                    \n                \n                        \n                            \n                                Defined in src/auth/events/client-created.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        certExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        certExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ClientCreatedEvent {\n  constructor(\n    public readonly id: string,\n    public readonly name: string,\n    public readonly clientId: string,\n    public readonly certExpiresAt: Date,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientCredentialsStrategy.html":{"url":"classes/ClientCredentialsStrategy.html","title":"class - ClientCredentialsStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientCredentialsStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/client-credentials.strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Oauth2GrantStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/client-credentials.strategy.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/client-credentials.strategy.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/client-credentials.strategy.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { Oauth2GrantStrategy } from '../decorators/oauth2-grant-strategy.decorator';\nimport { CreateAccessTokenCommand } from '../commands/create-access-token.command';\nimport { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\nimport { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\nimport {\n  Oauth2GrantStrategyInterface,\n  ClientRepositoryInterface,\n} from '../interfaces';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../responses/oauth2-response.dto';\n\n@Oauth2GrantStrategy('client_credentials')\nexport class ClientCredentialsStrategy implements Oauth2GrantStrategyInterface {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param commandBus\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly commandBus: CommandBus,\n  ) {}\n\n  async validate(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    if (\n      client.clientSecret !== request.clientSecret ||\n      !request.clientSecret ||\n      client.deletedAt !== null ||\n      !client.grants.includes(request.grantType)\n    ) {\n      return false;\n    }\n\n    const scopes: string[] = JSON.parse(client.scope);\n    const requestScopes =\n      typeof request.scopes === 'string' ? [request.scopes] : request.scopes;\n    return requestScopes.every(scope => scopes.includes(scope));\n  }\n\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    const requestScopes =\n      typeof request.scopes === 'string' ? [request.scopes] : request.scopes;\n    const accessToken: Oauth2AccessTokenEntity = await this.commandBus.execute(\n      new CreateAccessTokenCommand(\n        client.id,\n        JSON.stringify(requestScopes),\n        request.exp,\n        request.iat,\n        request,\n      ),\n    );\n\n    return new OAuth2Response(\n      accessToken.accessToken,\n      accessToken.refreshToken,\n      ~~((accessToken.accessTokenExpiresAt.getTime() - Date.now()) / 1000),\n      ~~((accessToken.refreshTokenExpiresAt.getTime() - Date.now()) / 1000),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientNotFoundException.html":{"url":"classes/ClientNotFoundException.html","title":"class - ClientNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/client-not-found.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when a client was not found\n\n            \n\n            \n                Extends\n            \n            \n                        NotFoundException\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                withClientId\n                            \n                            \n                                    Static\n                                withId\n                            \n                            \n                                    Static\n                                withName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withClientId(clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/client-not-found.exception.ts:27\n                        \n                    \n\n\n            \n                \n                        Kind message with client ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UnauthorizedException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/client-not-found.exception.ts:16\n                        \n                    \n\n\n            \n                \n                        Kind message with id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ClientNotFoundException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withName\n                        \n                    \n                \n            \n            \n                \n                        \n                    withName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/client-not-found.exception.ts:38\n                        \n                    \n\n\n            \n                \n                        Kind message with client ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     InternalServerErrorException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  InternalServerErrorException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\n\n/**\n * Exception thrown when a client was not found\n */\nexport class ClientNotFoundException extends NotFoundException {\n  /**\n   * Kind message with id\n   *\n   * @param id\n   */\n  static withId(id: string): ClientNotFoundException {\n    return new ClientNotFoundException(\n      `The client with id \"${id}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with client ID\n   *\n   * @param clientId\n   */\n  static withClientId(clientId: string): UnauthorizedException {\n    return new UnauthorizedException(\n      `The client with clientId \"${clientId}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with client ID\n   *\n   * @param name\n   */\n  static withName(name: string): InternalServerErrorException {\n    return new UnauthorizedException(\n      `The client with name \"${name}\" was not found`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientPayload.html":{"url":"classes/ClientPayload.html","title":"class - ClientPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/client-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a client's payload\n\n            \n\n\n            \n                Implements\n            \n            \n                            Oauth2PayloadInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: Oauth2AccessTokenEntity, id: string, clientId: string, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/interfaces/client-payload.interface.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        Oauth2AccessTokenEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Oauth2AccessTokenEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Oauth2PayloadType\n\n                    \n                \n                \n                    \n                        Default value : Oauth2PayloadType.CLIENT\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\nimport {\n  Oauth2PayloadInterface,\n  Oauth2PayloadType,\n} from './oauth2-payload.interface';\n\n/**\n * Represents a client's payload\n */\nexport class ClientPayload implements Oauth2PayloadInterface {\n  // Store the current type of payload user or client\n  // When the client is connected he should only be able to access his own resources\n  readonly type: Oauth2PayloadType = Oauth2PayloadType.CLIENT;\n\n  constructor(\n    public readonly accessToken: Oauth2AccessTokenEntity,\n    public readonly id: string,\n    public readonly clientId: string,\n    public readonly name: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientRepository.html":{"url":"injectables/ClientRepository.html","title":"injectable - ClientRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/repository/client.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findByClientId\n                            \n                            \n                                    Async\n                                findByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/repository/client.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByClientId(clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\nimport { ClientNotFoundException } from '../exceptions/client-not-found.exception';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\n\n@Injectable()\nexport class ClientRepository implements ClientRepositoryInterface {\n  constructor(\n    @InjectRepository(Oauth2ClientEntity)\n    private readonly repository: Repository,\n  ) {}\n\n  async find(id: string): Promise {\n    const client = await this.repository.findOneBy({ id });\n\n    if (!client) {\n      throw ClientNotFoundException.withId(id);\n    }\n\n    return client;\n  }\n\n  async findByClientId(clientId: string): Promise {\n    const client = await this.repository.findOne({\n      where: {\n        clientId: clientId,\n      },\n    });\n\n    if (!client) {\n      throw ClientNotFoundException.withClientId(clientId);\n    }\n\n    return client;\n  }\n\n  async findByName(name: string): Promise {\n    const client = await this.repository.findOne({\n      where: {\n        name: name,\n      },\n    });\n\n    if (!client) {\n      throw ClientNotFoundException.withName(name);\n    }\n\n    return client;\n  }\n\n  async create(client: Oauth2ClientEntity): Promise {\n    return await this.repository.save(client);\n  }\n\n  async delete(client: Oauth2ClientEntity): Promise {\n    client.deletedAt = new Date();\n\n    return await this.repository.save(client);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientRepositoryInterface.html":{"url":"interfaces/ClientRepositoryInterface.html","title":"interface - ClientRepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClientRepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/client-repository.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the main repository you have to implement if you want to\nstore clients in the database\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findByClientId\n                                    \n                                \n                                \n                                    \n                                        findByName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:40\n                        \n                    \n\n\n            \n                \n                        Create a new oAuth2 client\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:15\n                        \n                    \n\n\n            \n                \n                        Find the client with the given ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByClientId\n                        \n                    \n                \n            \n            \n                \nfindByClientId(clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:24\n                        \n                    \n\n\n            \n                \n                        Finds a client using its clientId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:33\n                        \n                    \n\n\n            \n                \n                        Finds a client using its name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\n\n/**\n * This is the main repository you have to implement if you want to\n * store clients in the database\n */\nexport interface ClientRepositoryInterface {\n  /**\n   * Find the client with the given ID\n   *\n   * @param id\n   *\n   * @throws ClientNotFoundException\n   */\n  find(id: string): Promise;\n\n  /**\n   * Finds a client using its clientId\n   *\n   * @param clientId\n   *\n   * @throws ClientNotFoundException\n   */\n  findByClientId(clientId: string): Promise;\n\n  /**\n   * Finds a client using its name\n   *\n   * @param name\n   *\n   * @throws ClientNotFoundException\n   */\n  findByName(name: string): Promise;\n\n  /**\n   * Create a new oAuth2 client\n   *\n   * @param client\n   */\n  create(client: Oauth2ClientEntity): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessTokenCommand.html":{"url":"classes/CreateAccessTokenCommand.html","title":"class - CreateAccessTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-access-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                exp\n                            \n                            \n                                    Public\n                                    Readonly\n                                iat\n                            \n                            \n                                    Public\n                                    Readonly\n                                request\n                            \n                            \n                                    Public\n                                    Readonly\n                                scope\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string, scope: string, exp: number, iat: number, request: OAuth2Request, userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-access-token.command.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        OAuth2Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        exp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuth2Request\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OAuth2Request } from '../requests/oauth2-request.dto';\n\nexport class CreateAccessTokenCommand {\n  constructor(\n    public readonly clientId: string,\n    public readonly scope: string,\n    public readonly exp: number,\n    public readonly iat: number,\n    public readonly request: OAuth2Request,\n    public readonly userId?: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessTokenHandler.html":{"url":"classes/CreateAccessTokenHandler.html","title":"class - CreateAccessTokenHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessTokenHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-access-token.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessTokenRepository: AccessTokenRepositoryInterface, clientRepository: ClientRepositoryInterface, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-access-token.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessTokenRepository\n                                                  \n                                                        \n                                                                        AccessTokenRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateAccessTokenCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/commands/create-access-token.handler.ts:28\n                        \n                    \n\n\n            \n                \n                        Execute the create AccessToken Command\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateAccessTokenCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { CreateAccessTokenCommand } from './create-access-token.command';\n\nimport * as crypto from 'crypto';\nimport { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\nimport { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\nimport { AccessTokenCreatedEvent } from '../events/access-token-created.event';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\nimport { AccessTokenRepositoryInterface } from '../interfaces/access-token-repository.interface';\n\n@CommandHandler(CreateAccessTokenCommand)\nexport class CreateAccessTokenHandler\n  implements ICommandHandler {\n  constructor(\n    @Inject('AccessTokenRepositoryInterface')\n    private readonly accessTokenRepository: AccessTokenRepositoryInterface,\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Execute the create AccessToken Command\n   *\n   * @param command\n   */\n  async execute(command: CreateAccessTokenCommand) {\n    const client: Oauth2ClientEntity = await this.clientRepository.find(\n      command.clientId,\n    );\n    // @fixme: Shall we remove old tokens ?\n\n    const accessToken = new Oauth2AccessTokenEntity();\n    accessToken.client = client;\n    accessToken.createdAt = new Date();\n    accessToken.createdFrom = command.request;\n    accessToken.scope = command.scope;\n\n    // generate access & refresh tokens\n    const now = Date.now();\n    // Ensure we have an expiration\n    const requestedExp =\n      command.exp ||\n      new Date(now + client.accessTokenLifetime * 1000).getTime() / 1000;\n    const exp =\n      now + client.accessTokenLifetime * 1000 \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientCommand.html":{"url":"classes/CreateClientCommand.html","title":"class - CreateClientCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-client.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command used to create clients\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                accessTokenLifetime\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                grants\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                noSecret\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                refreshTokenLifetime\n                            \n                            \n                                    Public\n                                    Readonly\n                                scope\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, scope: string, clientId?: string, grants?: string[], noSecret?: boolean, accessTokenLifetime?: number, refreshTokenLifetime?: number)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-client.command.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        grants\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        noSecret\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenLifetime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenLifetime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        accessTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        grants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        noSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        refreshTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateClientCommand {\n  constructor(\n    public readonly name: string,\n    public readonly scope: string,\n    public readonly clientId?: string,\n    public readonly grants?: string[],\n    public readonly noSecret?: boolean,\n    public readonly accessTokenLifetime?: number,\n    public readonly refreshTokenLifetime?: number,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientHandler.html":{"url":"classes/CreateClientHandler.html","title":"class - CreateClientHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-client.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-client.handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateClientCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/commands/create-client.handler.ts:25\n                        \n                    \n\n\n            \n                \n                        Execute the create Client Command\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateClientCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { CreateClientCommand } from './create-client.command';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as crypto from 'crypto';\nimport * as selfsigned from 'selfsigned';\nimport { Oauth2ClientEntity } from '../entities';\nimport { ClientCreatedEvent } from '../events/client-created.event';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\n\n@CommandHandler(CreateClientCommand)\nexport class CreateClientHandler\n  implements ICommandHandler {\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Execute the create Client Command\n   *\n   * @param command\n   */\n  async execute(command: CreateClientCommand) {\n    const client = new Oauth2ClientEntity();\n    client.name = command.name;\n    client.clientId = command.clientId || uuidv4();\n    if (!command.noSecret) {\n      client.clientSecret = crypto.randomBytes(32).toString('hex');\n    }\n\n    client.scope = command.scope;\n    client.accessTokenLifetime = command.accessTokenLifetime || 3600;\n    client.refreshTokenLifetime = command.refreshTokenLifetime || 7200;\n    client.grants = command.grants || ['client_credentials', 'refresh_token'];\n\n    // generate keys\n    const attrs = [{ name: 'commonName', value: command.name }];\n    const pem = selfsigned.generate(attrs, { days: 365 });\n\n    client.privateKey = pem.private;\n    client.publicKey = pem.public;\n    client.cert = pem.cert;\n\n    const exp = new Date();\n    exp.setDate(exp.getDate() + 365);\n    client.certExpiresAt = exp;\n\n    const createdClient = await this.clientRepository.create(client);\n\n    // emit an access token created event\n    this.eventBus.publish(\n      new ClientCreatedEvent(\n        createdClient.id,\n        createdClient.name,\n        createdClient.clientId,\n        createdClient.certExpiresAt,\n      ),\n    );\n\n    return createdClient;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSystemPermissionCommand.html":{"url":"classes/CreateSystemPermissionCommand.html","title":"class - CreateSystemPermissionCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSystemPermissionCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-system-permissions-command.ts\n        \n\n\n            \n                Description\n            \n            \n                Create an access token\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-system-permissions-command.ts:5\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSystemPermissionCommand {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSystemPermissionHandler.html":{"url":"classes/CreateSystemPermissionHandler.html","title":"class - CreateSystemPermissionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSystemPermissionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-system-permissions-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionGroupRepo: Repository, permissionRepo: Repository, roleRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-system-permissions-handler.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionGroupRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('CreateSystemPermission')\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-system-permissions-handler.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateSystemPermissionCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/commands/create-system-permissions-handler.ts:41\n                        \n                    \n\n\n            \n                \n                        Execute the create system permission command\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateSystemPermissionCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport chalk from 'chalk';\nimport { Repository } from 'typeorm';\nimport {\n  DEFAULT_ADMIN_ROLE_NAME,\n  DEFAULT_SYSTEM_AUTH_PERMISSION_NAME,\n  DEFAULT_SYSTEM_PERMISSION_GROUP,\n  DEFAULT_SYSTEM_PERMISSION_NAME,\n  DEFAULT_USER_ROLE_NAME,\n} from '../constants';\nimport {\n  AuthPermissionEntity,\n  AuthPermissionGroupEntity,\n  AuthRoleEntity,\n} from '../entities';\nimport { CreateSystemPermissionCommand } from './create-system-permissions-command';\n\nconst log = console.log;\n\n@CommandHandler(CreateSystemPermissionCommand)\nexport class CreateSystemPermissionHandler\n  implements ICommandHandler {\n  private readonly logger = new Logger('CreateSystemPermission');\n\n  constructor(\n    @InjectRepository(AuthPermissionGroupEntity)\n    private readonly permissionGroupRepo: Repository,\n    @InjectRepository(AuthPermissionEntity)\n    private readonly permissionRepo: Repository,\n    @InjectRepository(AuthRoleEntity)\n    private readonly roleRepo: Repository,\n  ) {}\n\n  /**\n   * Execute the create system permission command\n   *\n   * @param command\n   */\n  async execute(command: CreateSystemPermissionCommand) {\n    try {\n      log(chalk.yellow(`Start creating system permissions..`));\n\n      const permissionsGroup = this.permissionGroupRepo.create();\n      permissionsGroup.displayTitle = DEFAULT_SYSTEM_PERMISSION_GROUP;\n      permissionsGroup.slug = DEFAULT_SYSTEM_PERMISSION_GROUP;\n\n      await permissionsGroup.save();\n      log(\n        chalk.green(\n          `Create default permission group: ${DEFAULT_SYSTEM_PERMISSION_GROUP}`,\n        ),\n      );\n\n      const authPermission = this.permissionRepo.create();\n      authPermission.displayTitle = DEFAULT_SYSTEM_AUTH_PERMISSION_NAME;\n      authPermission.slug = DEFAULT_SYSTEM_AUTH_PERMISSION_NAME;\n      authPermission.group = permissionsGroup;\n      await authPermission.save();\n\n      log(\n        chalk.green(\n          `Create default  permission: ${authPermission.displayTitle}`,\n        ),\n      );\n\n      const systemPermission = this.permissionRepo.create();\n      systemPermission.displayTitle = DEFAULT_SYSTEM_PERMISSION_NAME;\n      systemPermission.slug = DEFAULT_SYSTEM_PERMISSION_NAME;\n      systemPermission.group = permissionsGroup;\n      await systemPermission.save();\n\n      log(\n        chalk.green(\n          `Create default  permission: ${systemPermission.displayTitle}`,\n        ),\n      );\n\n      const adminRole = this.roleRepo.create();\n      adminRole.displayTitle = DEFAULT_ADMIN_ROLE_NAME;\n      adminRole.slug = DEFAULT_ADMIN_ROLE_NAME;\n      adminRole.permissions = [authPermission, systemPermission];\n      await adminRole.save();\n\n      log(chalk.green(`Create admin role: ${DEFAULT_ADMIN_ROLE_NAME}`));\n      log(\n        chalk.green(\n          `Assign ${authPermission.displayTitle} permission to ${\n            adminRole.displayTitle\n          }`,\n        ),\n      );\n\n      log(\n        chalk.green(\n          `Assign ${systemPermission.displayTitle} permission to ${\n            adminRole.displayTitle\n          }`,\n        ),\n      );\n\n      const userRole = this.roleRepo.create();\n      userRole.displayTitle = DEFAULT_USER_ROLE_NAME;\n      userRole.slug = DEFAULT_USER_ROLE_NAME;\n      await userRole.save();\n\n      log(chalk.green(`Create user role: ${DEFAULT_USER_ROLE_NAME}`));\n    } catch (e) {\n      log(chalk.red(`${e}`));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSystemPermissionsCli.html":{"url":"classes/CreateSystemPermissionsCli.html","title":"class - CreateSystemPermissionsCli","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSystemPermissionsCli\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/auth/create-permissions.cli.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/cli/auth/create-permissions.cli.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(args: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/auth/create-permissions.cli.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandBus } from '@nestjs/cqrs';\nimport { Command, CommandRunner } from 'nest-commander';\nimport { CreateSystemPermissionCommand } from '../../auth/commands';\n\n@Command({\n  name: 'system:permissions',\n  description: 'Create default system permissions',\n})\nexport class CreateSystemPermissionsCli extends CommandRunner {\n  constructor(private readonly commandBus: CommandBus) {\n    super();\n  }\n\n  async run(args: string[], options: any): Promise {\n    await this.commandBus.execute(new CreateSystemPermissionCommand());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCli.html":{"url":"classes/CreateUserCli.html","title":"class - CreateUserCli","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCli\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/auth/create-user.cli.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parsePassword\n                            \n                            \n                                    \n                                parseRole\n                            \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/cli/auth/create-user.cli.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parsePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    parsePassword(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Option({flags: '-p, --password ', description: 'With custom password'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/auth/create-user.cli.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseRole(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Option({flags: '-r, --role ', description: 'With custom role'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/auth/create-user.cli.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(args: string[], options: BasicCommandOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/auth/create-user.cli.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            BasicCommandOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandBus } from '@nestjs/cqrs';\nimport { Command, CommandRunner, Option } from 'nest-commander';\nimport { CreateUserCommand } from '../../auth/commands/create-user-command';\n\ninterface BasicCommandOptions {\n  password?: string;\n  role?: string;\n}\n\n@Command({\n  name: 'system:admin',\n  description: 'Generate a new system administrator',\n  arguments: '',\n  options: { isDefault: true },\n})\nexport class CreateUserCli extends CommandRunner {\n  constructor(private readonly commandBus: CommandBus) {\n    super();\n  }\n\n  @Option({\n    flags: '-p, --password ',\n    description: 'With custom password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n\n  @Option({\n    flags: '-r, --role ',\n    description: 'With custom role',\n  })\n  parseRole(val: string) {\n    return val;\n  }\n\n  async run(args: string[], options: BasicCommandOptions): Promise {\n    await this.commandBus.execute(\n      new CreateUserCommand(args[0], options.password, options.role),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCommand.html":{"url":"classes/CreateUserCommand.html","title":"class - CreateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-user-command.ts\n        \n\n\n            \n                Description\n            \n            \n                Create an access token\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                plainPassword\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, plainPassword?: string, role?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-user-command.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plainPassword\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        role\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        plainPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-user-command.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-user-command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-user-command.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserCommand {\n  constructor(\n    public readonly username: string,\n    public readonly plainPassword?: string,\n    public readonly role?: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserHandle.html":{"url":"classes/CreateUserHandle.html","title":"class - CreateUserHandle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserHandle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-user-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(systemAdmin: SystemAdminInterface, dataSource: DataSource, roleRepo: Repository, userRoleRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-user-handler.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        systemAdmin\n                                                  \n                                                        \n                                                                        SystemAdminInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRoleRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('CreateUserHandle')\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-user-handler.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateUserCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/commands/create-user-handler.ts:40\n                        \n                    \n\n\n            \n                \n                        Execute the create Client Command\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateUserCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Logger } from '@nestjs/common';\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectDataSource, InjectRepository } from '@nestjs/typeorm';\nimport chalk from 'chalk';\nimport * as crypto from 'crypto';\nimport { DataSource, Repository } from 'typeorm';\nimport { AuthRoleEntity, AuthRoleAssignmentEntity } from '../entities';\nimport { SystemAdminInterface } from '../interfaces/system-admin.interface';\nimport { CreateUserCommand } from './create-user-command';\n\nconst generatePassword = (\n  length = 20,\n  characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~!@-#$',\n) =>\n  Array.from(crypto.getRandomValues(new Uint32Array(length)))\n    .map(x => characters[x % characters.length])\n    .join('');\nconst log = console.log;\n\n@CommandHandler(CreateUserCommand)\nexport class CreateUserHandle implements ICommandHandler {\n  private readonly logger = new Logger('CreateUserHandle');\n\n  constructor(\n    @Inject('SystemAdminInterface')\n    private readonly systemAdmin: SystemAdminInterface,\n    @InjectDataSource()\n    private readonly dataSource: DataSource,\n    @InjectRepository(AuthRoleEntity)\n    private readonly roleRepo: Repository,\n    @InjectRepository(AuthRoleAssignmentEntity)\n    private readonly userRoleRepo: Repository,\n  ) {}\n\n  /**\n   * Execute the create Client Command\n   *\n   * @param command\n   */\n  async execute(command: CreateUserCommand) {\n    try {\n      const password = command.plainPassword || generatePassword();\n      const adminUser = await this.systemAdmin.create(\n        this.dataSource,\n        command.username,\n        password,\n      );\n\n      log(chalk.yellow('New user account was created..'));\n      log(chalk.blue(`E-Mail: ${adminUser.email}`));\n      log(chalk.blue(`Password: ${password}`));\n      log(chalk.blue(`ID: ${adminUser.id}`));\n\n      if (command.role) {\n        const role = await this.roleRepo.findOneByOrFail({\n          slug: command.role,\n        });\n        const newAdminUserRole = this.userRoleRepo.create();\n        newAdminUserRole.identifier = adminUser.id;\n        newAdminUserRole.role = role;\n        await newAdminUserRole.save();\n\n        log(chalk.blue(`Role: ${role}`));\n      }\n    } catch (e) {\n      log(chalk.red(`${e}`));\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CrudEntityDetectionGuard.html":{"url":"guards/CrudEntityDetectionGuard.html","title":"guard - CrudEntityDetectionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CrudEntityDetectionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/crud/guards/crud-entity-detection.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/crud/guards/crud-entity-detection.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/guards/crud-entity-detection.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  Injectable,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { InjectDataSource } from '@nestjs/typeorm';\nimport { Request } from 'express';\nimport { BaseEntity, DataSource } from 'typeorm';\n\n@Injectable()\nexport class CrudEntityDetectionGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    @InjectDataSource() private dataSource: DataSource,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    try {\n      const request = context.switchToHttp().getRequest() as Request;\n      const params = request.params;\n\n      const primaryKey: string = this.reflector.get(\n        'queryPrimaryKey',\n        context.getHandler(),\n      );\n\n      const routeKey: string = this.reflector.get(\n        'queryRouteKey',\n        context.getHandler(),\n      );\n\n      const queryType = this.reflector.get(\n        'queryType',\n        context.getHandler(),\n      );\n\n      const repo = this.dataSource.getRepository(queryType);\n      const conditions = {};\n      conditions[primaryKey] = params[routeKey];\n\n      const item = await repo.findOneByOrFail(conditions);\n\n      request.queryItem = item;\n      request.queryType = queryType;\n\n      return true;\n    } catch (err) {\n      throw new HttpException(err.message || err, 400);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudFilterableRequest.html":{"url":"classes/CrudFilterableRequest.html","title":"class - CrudFilterableRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudFilterableRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/requests/crud-filterable.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                condition\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                field\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterMatch\n\n                    \n                \n                \n                    \n                        Default value : FilterMatch.LIKE\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: FilterMatch})@IsEnum(FilterMatch)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-filterable.request.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-filterable.request.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        term\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiPropertyOptional({})@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-filterable.request.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsOptional, IsEnum } from 'class-validator';\nimport { FilterMatch } from '../interfaces';\n\nexport class CrudFilterableRequest {\n  @IsString()\n  @ApiProperty({})\n  @Type(() => String)\n  readonly field: string;\n\n  @IsString()\n  @ApiPropertyOptional({})\n  @IsOptional()\n  @Type(() => String)\n  readonly term: string;\n\n  @ApiProperty({ enum: FilterMatch })\n  @IsEnum(FilterMatch)\n  readonly condition: FilterMatch = FilterMatch.LIKE;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CrudModule.html":{"url":"modules/CrudModule.html","title":"module - CrudModule","body":"\n                   \n\n\n\n\n    Modules\n    CrudModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/crud/crud.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forFeature\n                        \n                    \n                \n            \n            \n                \n                        \n                    forFeature()\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/crud.module.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/crud.module.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport _ from 'lodash';\nimport { JwtAuthModule } from '../jwt/jwt-auth.module';\nimport { CrudSettingsStorage } from './settings-storage';\n\n@Module({})\nexport class CrudModule {\n  public static forFeature(): DynamicModule {\n    return {\n      module: CrudModule,\n      providers: [],\n      imports: [JwtAuthModule],\n      exports: [],\n    };\n  }\n\n  public static forRoot(options): DynamicModule {\n    CrudSettingsStorage.setOptions(\n      _.defaults(options, {\n        adminRoleName: 'system',\n      }),\n    );\n\n    return {\n      module: CrudModule,\n      imports: [JwtAuthModule],\n      controllers: [],\n      providers: [],\n      exports: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudPaginationMeta.html":{"url":"classes/CrudPaginationMeta.html","title":"class - CrudPaginationMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudPaginationMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/resources/crud-paginat-meta.resource.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    \n                                    Readonly\n                                page\n                            \n                            \n                                    \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: ICrudPaginationMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/crud/resources/crud-paginat-meta.resource.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        ICrudPaginationMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-paginat-meta.resource.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-paginat-meta.resource.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-paginat-meta.resource.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-paginat-meta.resource.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-paginat-meta.resource.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-paginat-meta.resource.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { CrudPaginationRequest } from '../requests/crud-pagination.request';\n\nexport interface ICrudPaginationMetaParameters {\n  options: CrudPaginationRequest;\n  itemCount: number;\n}\n\nexport class CrudPaginationMeta {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ options, itemCount }: ICrudPaginationMetaParameters) {\n    this.page = options.page;\n    this.take = options.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudPaginationRequest.html":{"url":"classes/CrudPaginationRequest.html","title":"class - CrudPaginationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudPaginationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/requests/crud-pagination.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sort\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CrudFilterableRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: CrudFilterableRequest, isArray: true})@IsOptional()@ValidateNested({each: true})@IsArray()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-pagination.request.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-pagination.request.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CrudSortableRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: CrudSortableRequest, isArray: true})@IsOptional()@ValidateNested({each: true})@IsArray()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-pagination.request.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 200, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(200)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-pagination.request.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/crud/requests/crud-pagination.request.ts:38\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiExtraModels, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsArray,\n  IsInt,\n  IsOptional,\n  Max,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport { CrudFilterableRequest } from './crud-filterable.request';\nimport { CrudSortableRequest } from './crud-sortable.request';\n\n@ApiExtraModels(CrudFilterableRequest, CrudSortableRequest)\nexport class CrudPaginationRequest {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 200,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(200)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n\n  @ApiPropertyOptional({ type: CrudSortableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @IsArray()\n  @Type(() => CrudSortableRequest)\n  readonly sort?: CrudSortableRequest[];\n\n  @ApiPropertyOptional({ type: CrudFilterableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @IsArray()\n  @Type(() => CrudFilterableRequest)\n  readonly filter?: CrudFilterableRequest[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudPaginationResource.html":{"url":"classes/CrudPaginationResource.html","title":"class - CrudPaginationResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudPaginationResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/resources/crud-pagination.resource.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    \n                                meta\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                            \n                                setMetaData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-pagination.resource.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CrudPaginationMeta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => CrudPaginationMeta})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/resources/crud-pagination.resource.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(data: T[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/resources/crud-pagination.resource.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMetaData\n                        \n                    \n                \n            \n            \n                \nsetMetaData(meta: CrudPaginationMeta)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/resources/crud-pagination.resource.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                meta\n                                            \n                                                            CrudPaginationMeta\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { BaseEntity } from 'typeorm';\nimport { CrudPaginationMeta } from './crud-paginat-meta.resource';\n\nexport class CrudPaginationResource {\n  data: T[];\n\n  @ApiProperty({ type: () => CrudPaginationMeta })\n  meta: CrudPaginationMeta;\n\n  setData(data: T[]) {\n    this.data = data;\n  }\n  setMetaData(meta: CrudPaginationMeta) {\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CrudSearchRequestFiltersGuard.html":{"url":"guards/CrudSearchRequestFiltersGuard.html","title":"guard - CrudSearchRequestFiltersGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CrudSearchRequestFiltersGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/crud/guards/crud-search-request-filters.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/crud/guards/crud-search-request-filters.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/guards/crud-search-request-filters.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  Injectable,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { IsArray, IsNotEmpty } from 'class-validator';\n\n@Injectable()\nexport class CrudSearchRequestFiltersGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    try {\n      const request = context.switchToHttp().getRequest();\n      const fields =\n        this.reflector.get(\n          'filterableFields',\n          context.getHandler(),\n        ) || [];\n      request.filterableFields = fields;\n\n      if (\n        request.body &&\n        IsNotEmpty(request.body.filter) &&\n        IsArray(request.body.filter)\n      ) {\n        for (let { field } of request.body.filter) {\n          if (!fields.includes(field)) {\n            throw new Error(\n              `\"${field}\" is not a allowed field for the filter function.`,\n            );\n          }\n        }\n      }\n\n      return true;\n    } catch (err) {\n      throw new HttpException(err.message || err, 400);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CrudSearchRequestSortablesGuard.html":{"url":"guards/CrudSearchRequestSortablesGuard.html","title":"guard - CrudSearchRequestSortablesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CrudSearchRequestSortablesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/crud/guards/crud-search-request-sortables.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/crud/guards/crud-search-request-sortables.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/guards/crud-search-request-sortables.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  Injectable,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { IsArray, IsNotEmpty } from 'class-validator';\n\n@Injectable()\nexport class CrudSearchRequestSortablesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    try {\n      const request = context.switchToHttp().getRequest();\n      const fields =\n        this.reflector.get(\n          'sortableFields',\n          context.getHandler(),\n        ) || [];\n      request.filterableFields = fields;\n\n      if (\n        request.body &&\n        IsNotEmpty(request.body.filter) &&\n        IsArray(request.body.filter)\n      ) {\n        for (let { field } of request.body.filter) {\n          if (!fields.includes(field)) {\n            throw new Error(\n              `\"${field}\" is not a allowed field for the sort function.`,\n            );\n          }\n        }\n      }\n\n      return true;\n    } catch (err) {\n      throw new HttpException(err.message || err, 400);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudSettingsStorage.html":{"url":"classes/CrudSettingsStorage.html","title":"class - CrudSettingsStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudSettingsStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/settings-storage.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getOptions\n                            \n                            \n                                    Static\n                                setOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        queryOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryOptions\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/crud/settings-storage.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/settings-storage.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         QueryOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        setOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    setOptions(options: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/settings-storage.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { QueryOptions } from './interfaces';\n\nexport class CrudSettingsStorage {\n  private static queryOptions: QueryOptions = {};\n\n  static setOptions(options: QueryOptions): void {\n    this.queryOptions = options;\n  }\n\n  static getOptions(): QueryOptions {\n    return this.queryOptions;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudSortableRequest.html":{"url":"classes/CrudSortableRequest.html","title":"class - CrudSortableRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudSortableRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/requests/crud-sortable.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                field\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-sortable.request.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryOrder\n\n                    \n                \n                \n                    \n                        Default value : QueryOrder.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: QueryOrder})@IsEnum(QueryOrder)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/crud/requests/crud-sortable.request.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEnum } from 'class-validator';\nimport { QueryOrder } from '../interfaces';\n\nexport class CrudSortableRequest {\n  @IsString()\n  @ApiProperty({})\n  @Type(() => String)\n  readonly field: string;\n\n  @ApiPropertyOptional({ enum: QueryOrder })\n  @IsEnum(QueryOrder)\n  readonly order: QueryOrder = QueryOrder.ASC;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudTransformPaginationInterceptor.html":{"url":"classes/CrudTransformPaginationInterceptor.html","title":"class - CrudTransformPaginationInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudTransformPaginationInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/interceptor/crud-transform-pagination.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(originalDto: any, transformDto: any | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/crud/interceptor/crud-transform-pagination.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        originalDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transformDto\n                                                  \n                                                        \n                                                                    any | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, handler: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/interceptor/crud-transform-pagination.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, NestInterceptor } from '@nestjs/common';\nimport { plainToInstance } from 'class-transformer';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CrudPaginationResource } from '../resources/crud-pagination.resource';\n\nexport class CrudTransformPaginationInterceptor implements NestInterceptor {\n  constructor(\n    private originalDto: any,\n    private transformDto: any | undefined,\n  ) {}\n  intercept(context: ExecutionContext, handler: CallHandler): Observable {\n    if (\n      this.originalDto != this.transformDto &&\n      this.transformDto !== undefined\n    ) {\n      return handler.handle().pipe(\n        map((data: CrudPaginationResource) => {\n          const newData = data;\n          data.data = plainToInstance(this.transformDto, data.data, {\n            excludeExtraneousValues: true,\n          });\n          return newData;\n        }),\n      );\n    } else {\n      return handler.handle();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CrudTransformSingleInterceptor.html":{"url":"classes/CrudTransformSingleInterceptor.html","title":"class - CrudTransformSingleInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CrudTransformSingleInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/interceptor/crud-transform-single.interceptor.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        NestInterceptor\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(originalDto: any, transformDto: any | undefined)\n                    \n                \n                        \n                            \n                                Defined in src/crud/interceptor/crud-transform-single.interceptor.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        originalDto\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        transformDto\n                                                  \n                                                        \n                                                                    any | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, handler: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/crud/interceptor/crud-transform-single.interceptor.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handler\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, NestInterceptor } from '@nestjs/common';\nimport { plainToInstance } from 'class-transformer';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport class CrudTransformSingleInterceptor implements NestInterceptor {\n  constructor(\n    private originalDto: any,\n    private transformDto: any | undefined,\n  ) {}\n  intercept(context: ExecutionContext, handler: CallHandler): Observable {\n    if (\n      this.originalDto != this.transformDto &&\n      this.transformDto !== undefined\n    ) {\n      return handler.handle().pipe(\n        map((data: any) => {\n          return plainToInstance(this.transformDto, data, {\n            excludeExtraneousValues: true,\n          });\n        }),\n      );\n    } else {\n      return handler.handle();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudPaginationMetaParameters.html":{"url":"interfaces/ICrudPaginationMetaParameters.html","title":"interface - ICrudPaginationMetaParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICrudPaginationMetaParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/resources/crud-paginat-meta.resource.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         CrudPaginationRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CrudPaginationRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { CrudPaginationRequest } from '../requests/crud-pagination.request';\n\nexport interface ICrudPaginationMetaParameters {\n  options: CrudPaginationRequest;\n  itemCount: number;\n}\n\nexport class CrudPaginationMeta {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ options, itemCount }: ICrudPaginationMetaParameters) {\n    this.page = options.page;\n    this.take = options.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICrudSearchRequestOptions.html":{"url":"interfaces/ICrudSearchRequestOptions.html","title":"interface - ICrudSearchRequestOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICrudSearchRequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/requests/crud-search.request.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sortable\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entity:     EntityDTO\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntityDTO\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterable:     ClassProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ClassProperties\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:     ResponseDTO\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResponseDTO\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sortable:     ClassProperties\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ClassProperties\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ClassLike, ClassProperties } from '../../types';\nimport { BaseEntity } from 'typeorm';\n\nexport interface ICrudSearchRequestOptions,\n  ResponseDTO extends ClassLike = EntityDTO\n> {\n  entity: EntityDTO;\n  output?: ResponseDTO;\n  sortable?: ClassProperties;\n  filterable?: ClassProperties;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQueryController.html":{"url":"interfaces/IQueryController.html","title":"interface - IQueryController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IQueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/interfaces/query-controller.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            model\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseEntity } from 'typeorm';\n\nexport interface IQueryController {\n  model: typeof BaseEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserException.html":{"url":"classes/InvalidUserException.html","title":"class - InvalidUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/invalid-user.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when a user is invalid\n\n            \n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                withId\n                            \n                            \n                                    Static\n                                wrongCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/invalid-user.exception.ts:24\n                        \n                    \n\n\n            \n                \n                        Kind message with id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         InvalidUserException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        wrongCredentials\n                        \n                    \n                \n            \n            \n                \n                        \n                    wrongCredentials()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/invalid-user.exception.ts:13\n                        \n                    \n\n\n            \n                \n                        Kind message with email and password\n\n\n                        \n                            Returns :         InvalidUserException\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\n\n/**\n * Exception thrown when a user is invalid\n */\nexport class InvalidUserException extends UnauthorizedException {\n  /**\n   * Kind message with email and password\n   *\n   * @param email\n   * @param password\n   */\n  static wrongCredentials(): InvalidUserException {\n    return new InvalidUserException(\n      `We couldn't find any users with these credentials.`,\n    );\n  }\n\n  /**\n   * Kind message with id\n   *\n   * @param userId\n   */\n  static withId(userId: string): InvalidUserException {\n    return new InvalidUserException(\n      `The user with id \"${userId}\" was not found`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtAuthModule.html":{"url":"modules/JwtAuthModule.html","title":"module - JwtAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jwt/jwt-auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthJwtTokenEntity } from '../auth/entities/auth-jwt-token.entity';\nimport { AuthRoleAssignmentEntity } from '../auth/entities/auth-role-assignment.entity';\nimport { AuthRoleEntity } from '../auth/entities/auth-role.entity';\n\n@Global()\n@Module({\n  imports: [\n    JwtModule,\n    TypeOrmModule.forFeature([\n      AuthJwtTokenEntity,\n      AuthRoleEntity,\n      AuthRoleAssignmentEntity,\n    ]),\n  ],\n  controllers: [],\n  providers: [],\n  exports: [TypeOrmModule],\n})\nexport class JwtAuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtTokenGuard.html":{"url":"guards/JwtTokenGuard.html","title":"guard - JwtTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/jwt/guards/jwt-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtRepo: Repository, userRoleRepo: Repository, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/jwt/guards/jwt-token.guard.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRoleRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jwt/guards/jwt-token.guard.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IsNull, Repository } from 'typeorm';\nimport { AuthJwtTokenEntity } from '../../auth/entities/auth-jwt-token.entity';\nimport { AuthRoleAssignmentEntity } from '../../auth/entities/auth-role-assignment.entity';\nimport { UserClass } from '../../auth/interfaces';\nimport { AuthWithPermission } from '../../auth/decorators/auth-with-permission.decorator';\nimport { isEmpty } from 'lodash';\n\n@Injectable()\nexport class JwtTokenGuard implements CanActivate {\n  constructor(\n    private readonly jwtService: JwtService,\n    @InjectRepository(AuthJwtTokenEntity)\n    private readonly jwtRepo: Repository,\n    @InjectRepository(AuthRoleAssignmentEntity)\n    private readonly userRoleRepo: Repository,\n    private reflector: Reflector,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    try {\n      const request = context.switchToHttp().getRequest();\n      const { authorization }: any = request.headers;\n      if (!authorization || authorization.trim() === '') {\n        throw new UnauthorizedException('Please provide token');\n      }\n      const authToken = authorization.replace(/bearer/gim, '').trim();\n      const payload = await this.jwtService.verifyAsync(authToken);\n      const user = UserClass.fromJSON(payload);\n      const tokenFound = await this.jwtRepo.count({\n        where: {\n          identifier: user.id,\n          accessToken: authToken,\n          revokedAt: IsNull(),\n        },\n      });\n      if (tokenFound \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuth2Request.html":{"url":"classes/OAuth2Request.html","title":"class - OAuth2Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuth2Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/requests/oauth2-request.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Main object used to transport data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                clientId\n                            \n                            \n                                    \n                                    \n                                clientSecret\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                exp\n                            \n                            \n                                    \n                                    \n                                    \n                                grantType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                iat\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                scopes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The API Key given by the application', required: true})@IsNotEmpty()@Expose({name: 'client_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clientSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The API Token given by the application', required: true})@Expose({name: 'client_secret'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The email only when grant_type is set to \"refresh_token\"'})@Expose({name: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        exp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The expiration time of the assertion, specified as seconds since 00:00:00 UTC, January 1, 1970. This value has a maximum of 1 hour after the issued time.'})@Expose({name: 'exp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        grantType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The type of grant you are requesting, must be \"client_credentials\"', required: true})@IsNotEmpty()@Expose({name: 'grant_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The time the assertion was issued, specified as seconds since 00:00:00 UTC, January 1, 1970.'})@Expose({name: 'iat'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The password when grant_type is set to \"password_grant\"'})@Expose({name: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The refresh token only when grant_type is set to \"refresh_token\"'})@Expose({name: 'refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        scopes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The list of the permissions (tpApps) that the application requests.', isArray: true})@Expose({name: 'scopes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\nimport { Expose } from 'class-transformer';\n\n/**\n * Main object used to transport data\n */\nexport class OAuth2Request {\n  @ApiProperty({\n    type: String,\n    description:\n      'The type of grant you are requesting, must be \"client_credentials\"',\n    required: true,\n  })\n  @IsNotEmpty()\n  @Expose({ name: 'grant_type' })\n  grantType: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The API Key given by the application',\n    required: true,\n  })\n  @IsNotEmpty()\n  @Expose({ name: 'client_id' })\n  clientId: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The API Token given by the application',\n    required: true,\n  })\n  @Expose({ name: 'client_secret' })\n  clientSecret: string;\n\n  @ApiProperty({\n    type: Number,\n    description:\n      'The expiration time of the assertion, specified as seconds since 00:00:00 UTC, January 1, 1970. This value has a maximum of 1 hour after the issued time.',\n  })\n  @Expose({ name: 'exp' })\n  exp?: number;\n\n  @ApiProperty({\n    type: Number,\n    description:\n      'The time the assertion was issued, specified as seconds since 00:00:00 UTC, January 1, 1970.',\n  })\n  @Expose({ name: 'iat' })\n  iat?: number;\n\n  @ApiProperty({\n    type: String,\n    description:\n      'The list of the permissions (tpApps) that the application requests.',\n    isArray: true,\n  })\n  @Expose({ name: 'scopes' })\n  scopes?: string | string[];\n\n  @ApiProperty({\n    type: String,\n    description:\n      'The refresh token only when grant_type is set to \"refresh_token\"',\n  })\n  @Expose({ name: 'refresh_token' })\n  refreshToken?: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The email only when grant_type is set to \"refresh_token\"',\n  })\n  @Expose({ name: 'email' })\n  email?: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The password when grant_type is set to \"password_grant\"',\n  })\n  @Expose({ name: 'password' })\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuth2Response.html":{"url":"classes/OAuth2Response.html","title":"class - OAuth2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuth2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/responses/oauth2-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Main object used to transport data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                    \n                                accessTokenExp\n                            \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                refreshTokenExp\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                scope\n                            \n                            \n                                    \n                                    \n                                tokenType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: string, refreshToken: string, accessTokenExp: number, refreshTokenExp: number, scope?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/responses/oauth2-response.dto.ts:55\n                            \n                        \n\n                \n                    \n                            Main method used to build this object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenExp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenExp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The generated access token', required: true})@Expose({name: 'access_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/oauth2-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessTokenExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'Number of seconds until the acess token expires', required: true})@Expose({name: 'expires_in'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/oauth2-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The generated refresh token', required: true})@Expose({name: 'refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/oauth2-response.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokenExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The list of the permissions (tpApps) that the application requests.', required: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/oauth2-response.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Scopes you are allowed to use if any requested', required: true})@Expose({name: 'scope'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/oauth2-response.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tokenType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bearer'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The type of token, in our case should always be \"bearer\"', required: true})@Expose({name: 'token_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/oauth2-response.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\n\n/**\n * Main object used to transport data\n */\nexport class OAuth2Response {\n  @ApiProperty({\n    type: String,\n    description: 'The generated access token',\n    required: true,\n  })\n  @Expose({ name: 'access_token' })\n  accessToken: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The type of token, in our case should always be \"bearer\"',\n    required: true,\n  })\n  @Expose({ name: 'token_type' })\n  tokenType: string = 'bearer';\n\n  @ApiProperty({\n    type: String,\n    description: 'The generated refresh token',\n    required: true,\n  })\n  @Expose({ name: 'refresh_token' })\n  refreshToken: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'Number of seconds until the acess token expires',\n    required: true,\n  })\n  @Expose({ name: 'expires_in' })\n  accessTokenExp: number;\n\n  @ApiProperty({\n    type: Number,\n    description:\n      'The list of the permissions (tpApps) that the application requests.',\n    required: true,\n  })\n  @Exclude()\n  refreshTokenExp: number;\n\n  @ApiProperty({\n    type: String,\n    description: 'Scopes you are allowed to use if any requested',\n    required: true,\n  })\n  @Expose({ name: 'scope' })\n  scope?: string;\n\n  /**\n   * Main method used to build this object\n   *\n   * @param accessToken\n   * @param refreshToken\n   * @param accessTokenExp\n   * @param refreshTokenExp\n   * @param scope\n   */\n  constructor(\n    accessToken: string,\n    refreshToken: string,\n    accessTokenExp: number,\n    refreshTokenExp: number,\n    scope?: string,\n  ) {\n    this.accessToken = accessToken;\n    this.refreshToken = refreshToken;\n    this.accessTokenExp = accessTokenExp;\n    this.refreshTokenExp = refreshTokenExp;\n    this.scope = scope;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Oauth2AccessTokenEntity.html":{"url":"entities/Oauth2AccessTokenEntity.html","title":"entity - Oauth2AccessTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Oauth2AccessTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/oauth2-accoss-token.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                accessTokenExpiresAt\n                            \n                            \n                                    \n                                    \n                                client\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdFrom\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                refreshTokenExpiresAt\n                            \n                            \n                                    \n                                scope\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Column({name: 'access_token', primary: true, nullable: false, length: 80})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'access_token_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Oauth2ClientEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(type => Oauth2ClientEntity, {nullable: false})@JoinColumn({name: 'client_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'created_on', nullable: false, default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuth2Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'created_from', type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token', unique: true, nullable: false, length: 80})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'refresh_token_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, length: 500})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-accoss-token.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  BaseEntity,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { Oauth2ClientEntity } from './oauth2-client.entity';\n\n@Entity('system_oauth2_access_tokens')\nexport class Oauth2AccessTokenEntity extends BaseEntity {\n  @ApiProperty()\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ApiProperty()\n  @Column({\n    name: 'access_token',\n    primary: true,\n    nullable: false,\n    length: 80,\n  })\n  accessToken: string;\n\n  @Column({\n    name: 'refresh_token',\n    unique: true,\n    nullable: false,\n    length: 80,\n  })\n  refreshToken: string;\n\n  @Column('datetime', { name: 'access_token_expires_at', nullable: false })\n  accessTokenExpiresAt: Date;\n\n  @Column('datetime', { name: 'refresh_token_expires_at', nullable: false })\n  refreshTokenExpiresAt: Date;\n\n  @ManyToOne(type => Oauth2ClientEntity, { nullable: false })\n  @JoinColumn({ name: 'client_id', referencedColumnName: 'id' })\n  client: Oauth2ClientEntity;\n\n  @Column({ nullable: true, name: 'user_id' })\n  userId: string;\n\n  @Column({ nullable: true, length: 500 })\n  scope: string;\n\n  @Column('datetime', {\n    name: 'created_on',\n    nullable: false,\n    default: () => 'now()',\n  })\n  createdAt: Date;\n\n  @Column({ name: 'created_from', type: 'json', nullable: true })\n  createdFrom: OAuth2Request;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Oauth2ClientEntity.html":{"url":"entities/Oauth2ClientEntity.html","title":"entity - Oauth2ClientEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Oauth2ClientEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/oauth2-client.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessTokenLifetime\n                            \n                            \n                                    \n                                cert\n                            \n                            \n                                    \n                                certExpiresAt\n                            \n                            \n                                    \n                                clientId\n                            \n                            \n                                    \n                                clientSecret\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                grants\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                privateKey\n                            \n                            \n                                    \n                                publicKey\n                            \n                            \n                                    \n                                refreshTokenLifetime\n                            \n                            \n                                    \n                                scope\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token_lifetime', nullable: false, default: 3600})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        certExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', name: 'cert_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_id', type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_secret', type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', name: 'created_at', nullable: false, default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        grants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'grants', type: 'simple-array', nullable: false, default: 'client_credentials,refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        privateKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'private_key', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'public_key', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token_lifetime', nullable: false, default: 7200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 500, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/oauth2-client.entity.ts:37\n                        \n                    \n\n            \n                \n                    Client scope. The scope should contain the list of third party applications\nthe client has access to\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\n\n@Entity('system_oauth2_clients')\n@Unique(['clientId'])\nexport class Oauth2ClientEntity extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ type: 'text', nullable: false })\n  name: string;\n\n  @Column({ name: 'client_id', type: 'text', nullable: false })\n  clientId: string;\n\n  @Column({ name: 'client_secret', type: 'text', nullable: true })\n  clientSecret: string;\n\n  @Column({\n    name: 'grants',\n    type: 'simple-array',\n    nullable: false,\n    default: 'client_credentials,refresh_token',\n  })\n  grants: string[];\n\n  /**\n   * Client scope. The scope should contain the list of third party applications\n   * the client has access to\n   */\n  @Column({ length: 500, nullable: false })\n  scope: string;\n\n  @Column({ name: 'access_token_lifetime', nullable: false, default: 3600 })\n  accessTokenLifetime: number;\n\n  @Column({ name: 'refresh_token_lifetime', nullable: false, default: 7200 })\n  refreshTokenLifetime: number;\n\n  @Column({ type: 'text', name: 'private_key', nullable: false })\n  privateKey: string;\n\n  @Column({ type: 'text', name: 'public_key', nullable: false })\n  publicKey: string;\n\n  @Column({ type: 'text', nullable: false })\n  cert: string;\n\n  @Column({ type: 'datetime', name: 'cert_expires_at', nullable: false })\n  certExpiresAt: Date;\n\n  @Column({\n    type: 'datetime',\n    name: 'created_at',\n    nullable: false,\n    default: () => 'now()',\n  })\n  createdAt: Date;\n\n  @Column({ type: 'datetime', name: 'deleted_at', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/Oauth2Controller.html":{"url":"controllers/Oauth2Controller.html","title":"controller - Oauth2Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  Oauth2Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/oauth2.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        token\n                        \n                    \n                \n            \n            \n                \n                        \n                    token(request: OAuth2Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Post('token')@ApiResponse({type: OAuth2Response})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/oauth2.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  ForbiddenException,\n  Inject,\n  Post,\n  UseInterceptors,\n  Version,\n} from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../responses/oauth2-response.dto';\nimport { Oauth2GrantStrategyRegistry } from '../services/strategy.registry';\n\n@Controller({\n  path: 'oauth2',\n  version: ['1'],\n})\n@ApiTags('oauth2')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class Oauth2Controller {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param strategyRegistry\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly strategyRegistry: Oauth2GrantStrategyRegistry,\n  ) {}\n\n  @Version('1')\n  @Post('token')\n  @ApiResponse({ type: OAuth2Response })\n  async token(@Body() request: OAuth2Request): Promise {\n    const client = await this.clientRepository.findByClientId(request.clientId);\n    if (!(await this.strategyRegistry.validate(request, client))) {\n      throw new ForbiddenException(\n        'You are not allowed to access the given resource',\n      );\n    }\n\n    return await this.strategyRegistry.getOauth2Response(request, client);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2GrantStrategyInterface.html":{"url":"interfaces/Oauth2GrantStrategyInterface.html","title":"interface - Oauth2GrantStrategyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2GrantStrategyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/oauth2-grant-strategy.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Implement this interface to provide an oauth2 grant type handler. Handlers must be registered using the\ndecorator @Oauth2Strategy('grant_type')\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getOauth2Response\n                                    \n                                \n                                \n                                    \n                                        validate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \ngetOauth2Response(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/oauth2-grant-strategy.interface.ts:27\n                        \n                    \n\n\n            \n                \n                        Get a request from the given response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/oauth2-grant-strategy.interface.ts:16\n                        \n                    \n\n\n            \n                \n                        Validate the request return false if the request is not valid within the context of this strategy\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../responses/oauth2-response.dto';\n\n/**\n * Implement this interface to provide an oauth2 grant type handler. Handlers must be registered using the\n * decorator @Oauth2Strategy('grant_type')\n */\nexport interface Oauth2GrantStrategyInterface {\n  /**\n   * Validate the request return false if the request is not valid within the context of this strategy\n   *\n   * @param request\n   * @param client\n   */\n  validate(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise;\n\n  /**\n   * Get a request from the given response\n   *\n   * @param request\n   * @param client\n   */\n  getOauth2Response(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Oauth2GrantStrategyRegistry.html":{"url":"injectables/Oauth2GrantStrategyRegistry.html","title":"injectable - Oauth2GrantStrategyRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Oauth2GrantStrategyRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/strategy.registry.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the main class used to execute strategies\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                registry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Private\n                                reflectStrategyName\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                registerStrategy\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/strategy.registry.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:73\n                        \n                    \n\n\n            \n                \n                        Get the response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reflectStrategyName\n                        \n                    \n                \n            \n            \n                \n                        \n                    reflectStrategyName(strategy: Oauth2GrantStrategyType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                strategy\n                                            \n                                                            Oauth2GrantStrategyType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(strategies: Oauth2GrantStrategyType[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:43\n                        \n                    \n\n\n            \n                \n                        Register all strategies with the decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                strategies\n                                            \n                                                            Oauth2GrantStrategyType[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerStrategy\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerStrategy(strategy: Oauth2GrantStrategyType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:28\n                        \n                    \n\n\n            \n                \n                        Register a single strategy\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                strategy\n                                            \n                                                            Oauth2GrantStrategyType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:53\n                        \n                    \n\n\n            \n                \n                        Validate the client associated to the given request\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/auth/services/strategy.registry.ts:19\n                        \n                    \n\n            \n                \n                    Store all available granted strategy\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Type } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { OAUTH2_STRATEGY_METADATA } from './strategy.explorer';\nimport { Oauth2GrantStrategyInterface } from '../interfaces/oauth2-grant-strategy.interface';\nimport { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../responses/oauth2-response.dto';\n\nexport type Oauth2GrantStrategyType = Type;\n\n/**\n * This is the main class used to execute strategies\n */\n@Injectable()\nexport class Oauth2GrantStrategyRegistry {\n  /**\n   * Store all available granted strategy\n   */\n  private registry: { [s: string]: Oauth2GrantStrategyInterface } = {};\n\n  constructor(private readonly moduleRef: ModuleRef) {}\n\n  /**\n   * Register a single strategy\n   *\n   * @param strategy\n   */\n  protected registerStrategy(strategy: Oauth2GrantStrategyType): void {\n    const instance = this.moduleRef.get(strategy, { strict: false });\n    if (!instance) {\n      return;\n    }\n\n    const strategyName = this.reflectStrategyName(strategy);\n    this.registry[strategyName] = instance as Oauth2GrantStrategyInterface;\n  }\n\n  /**\n   * Register all strategies with the decorator\n   *\n   * @param strategies\n   */\n  register(strategies: Oauth2GrantStrategyType[] = []) {\n    strategies.forEach(strategy => this.registerStrategy(strategy));\n  }\n\n  /**\n   * Validate the client associated to the given request\n   *\n   * @param request\n   * @param client\n   */\n  async validate(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    if (!(request.grantType in this.registry)) {\n      throw new HttpException(\n        `Cannot find the a strategy for the grant type \"${request.grantType}\"`,\n        400,\n      );\n    }\n\n    return await this.registry[request.grantType].validate(request, client);\n  }\n\n  /**\n   * Get the response\n   *\n   * @param request\n   * @param client\n   */\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    if (!(request.grantType in this.registry)) {\n      throw new HttpException(\n        `Cannot find the a strategy for the grant type \"${request.grantType}\"`,\n        400,\n      );\n    }\n\n    return await this.registry[request.grantType].getOauth2Response(\n      request,\n      client,\n    );\n  }\n\n  private reflectStrategyName(strategy: Oauth2GrantStrategyType): string {\n    return Reflect.getMetadata(OAUTH2_STRATEGY_METADATA, strategy);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2OptionsFactoryInterface.html":{"url":"interfaces/Oauth2OptionsFactoryInterface.html","title":"interface - Oauth2OptionsFactoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2OptionsFactoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/oauth2-options-factory.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createOauth2Options\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOauth2Options\n                        \n                    \n                \n            \n            \n                \ncreateOauth2Options()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/oauth2-options-factory.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise | OAuth2Options\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OAuth2Options } from '../types/oauth2-options.type';\n\nexport interface Oauth2OptionsFactoryInterface {\n  createOauth2Options(): Promise | OAuth2Options;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2PayloadInterface.html":{"url":"interfaces/Oauth2PayloadInterface.html","title":"interface - Oauth2PayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2PayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/oauth2-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                User payloads are used in the guard when the user still finish\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         Oauth2AccessTokenEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Oauth2AccessTokenEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Oauth2PayloadType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Oauth2PayloadType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\n\n/** define payload types */\nexport enum Oauth2PayloadType {\n  CLIENT = 'client',\n  USER = 'user',\n}\n\n/**\n * User payloads are used in the guard when the user still finish\n */\nexport interface Oauth2PayloadInterface {\n  // Store the current type of payload user or client\n  // When the client is connected he should only be able to access his own resources\n  readonly type: Oauth2PayloadType;\n\n  // This is the access token which is currently connected within the application\n  readonly accessToken: Oauth2AccessTokenEntity;\n\n  // The ID is common to all\n  readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2StrategyOptions.html":{"url":"interfaces/Oauth2StrategyOptions.html","title":"interface - Oauth2StrategyOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2StrategyOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/strategy.explorer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            strategies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        strategies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strategies:         Type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Type } from '@nestjs/common';\nimport { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';\nimport { Module } from '@nestjs/core/injector/module';\nimport { ModulesContainer } from '@nestjs/core/injector/modules-container';\nimport { Oauth2GrantStrategyInterface } from '../interfaces/oauth2-grant-strategy.interface';\n\nexport const OAUTH2_STRATEGY_METADATA = '__oauth2GrantStrategy__';\n\nexport interface Oauth2StrategyOptions {\n  strategies: Type[];\n}\n\n@Injectable()\nexport class StrategyExplorer {\n  constructor(private readonly modulesContainer: ModulesContainer) {}\n\n  explore(): Oauth2StrategyOptions {\n    const modules = [...this.modulesContainer.values()];\n    const strategies = this.flatMap(\n      modules,\n      instance => this.filterProvider(instance, OAUTH2_STRATEGY_METADATA),\n    );\n\n    return { strategies };\n  }\n\n  flatMap(\n    modules: Module[],\n    callback: (instance: InstanceWrapper) => Type | undefined,\n  ): Type[] {\n    const items = modules\n      .map(module => [...module.providers.values()].map(callback))\n      .reduce((a, b) => a.concat(b), []);\n    return items.filter(element => !!element) as Type[];\n  }\n\n  filterProvider(\n    wrapper: InstanceWrapper,\n    metadataKey: string,\n  ): Type | undefined {\n    const { instance } = wrapper;\n    if (!instance) {\n      return undefined;\n    }\n    return this.extractMetadata(instance, metadataKey);\n  }\n\n  extractMetadata(instance: Object, metadataKey: string): Type {\n    if (!instance.constructor) {\n      return;\n    }\n    const metadata = Reflect.getMetadata(metadataKey, instance.constructor);\n    return metadata ? (instance.constructor as Type) : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordStrategy.html":{"url":"classes/PasswordStrategy.html","title":"class - PasswordStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/password.strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Oauth2GrantStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, userValidator: UserValidatorInterface, commandBus: CommandBus, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/password.strategy.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userValidator\n                                                  \n                                                        \n                                                                        UserValidatorInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/password.strategy.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/password.strategy.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateAccessTokenCommand } from '../commands/create-access-token.command';\nimport { Oauth2GrantStrategy } from '../decorators/oauth2-grant-strategy.decorator';\nimport { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\nimport { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\nimport {\n  Oauth2GrantStrategyInterface,\n  ClientRepositoryInterface,\n  UserValidatorInterface,\n} from '../interfaces';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../responses/oauth2-response.dto';\nimport { DataSource } from 'typeorm';\nimport { InjectDataSource } from '@nestjs/typeorm';\n\n@Oauth2GrantStrategy('password')\nexport class PasswordStrategy implements Oauth2GrantStrategyInterface {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param userValidator\n   * @param commandBus\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    @Inject('UserValidatorInterface')\n    private readonly userValidator: UserValidatorInterface,\n    private readonly commandBus: CommandBus,\n    @InjectDataSource()\n    private readonly dataSource: DataSource,\n  ) {}\n\n  async validate(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    if (\n      (client.clientSecret && client.clientSecret !== request.clientSecret) ||\n      client.deletedAt !== null ||\n      !client.grants.includes(request.grantType)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    const user = await this.userValidator.validate(\n      this.dataSource,\n      request.email,\n      request.password,\n    );\n    const requestScopes =\n      typeof request.scopes === 'string' ? [request.scopes] : request.scopes;\n    const accessToken: Oauth2AccessTokenEntity = await this.commandBus.execute(\n      new CreateAccessTokenCommand(\n        client.id,\n        JSON.stringify(requestScopes),\n        request.exp,\n        request.iat,\n        request,\n        user.id,\n      ),\n    );\n\n    return new OAuth2Response(\n      accessToken.accessToken,\n      accessToken.refreshToken,\n      ~~((accessToken.accessTokenExpiresAt.getTime() - Date.now()) / 1000),\n      ~~((accessToken.refreshTokenExpiresAt.getTime() - Date.now()) / 1000),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryDictionary.html":{"url":"interfaces/QueryDictionary.html","title":"interface - QueryDictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryDictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/interfaces/query-dictonary.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [Key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/crud/interfaces/query-dictonary.interface.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface QueryDictionary {\n  [Key: string]: T;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryModuleOptions.html":{"url":"interfaces/QueryModuleOptions.html","title":"interface - QueryModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/interfaces/query-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            group\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseEntity } from 'typeorm';\n\nexport interface QueryOptions {\n  adminRoleName?: string;\n}\n\nexport interface QueryModuleOptions {\n  entities: typeof BaseEntity[];\n  group: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryOptions.html":{"url":"interfaces/QueryOptions.html","title":"interface - QueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/crud/interfaces/query-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminRoleName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminRoleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminRoleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseEntity } from 'typeorm';\n\nexport interface QueryOptions {\n  adminRoleName?: string;\n}\n\nexport interface QueryModuleOptions {\n  entities: typeof BaseEntity[];\n  group: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenStrategy.html":{"url":"classes/RefreshTokenStrategy.html","title":"class - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/refresh-token.strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Oauth2GrantStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, accessTokenRepository: AccessTokenRepositoryInterface, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/refresh-token.strategy.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenRepository\n                                                  \n                                                        \n                                                                        AccessTokenRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/refresh-token.strategy.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: Oauth2ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/refresh-token.strategy.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            Oauth2ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, UnauthorizedException } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateAccessTokenCommand } from '../commands/create-access-token.command';\nimport { Oauth2GrantStrategy } from '../decorators/oauth2-grant-strategy.decorator';\nimport { Oauth2ClientEntity } from '../entities/oauth2-client.entity';\nimport { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\nimport {\n  Oauth2GrantStrategyInterface,\n  ClientRepositoryInterface,\n  AccessTokenRepositoryInterface,\n} from '../interfaces';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../responses/oauth2-response.dto';\n\n@Oauth2GrantStrategy('refresh_token')\nexport class RefreshTokenStrategy implements Oauth2GrantStrategyInterface {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param accessTokenRepository\n   * @param commandBus\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    @Inject('AccessTokenRepositoryInterface')\n    private readonly accessTokenRepository: AccessTokenRepositoryInterface,\n    private readonly commandBus: CommandBus,\n  ) {}\n\n  async validate(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    if (\n      (client.clientSecret && client.clientSecret !== request.clientSecret) ||\n      client.deletedAt !== null ||\n      !client.grants.includes(request.grantType)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: Oauth2ClientEntity,\n  ): Promise {\n    const expiredToken = await this.accessTokenRepository.findByRefreshToken(\n      request.refreshToken,\n    );\n    if (\n      expiredToken.refreshTokenExpiresAt \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceDictonary.html":{"url":"interfaces/ResourceDictonary.html","title":"interface - ResourceDictonary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceDictonary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin.config.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [Key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/admin.config.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\nimport { OAuth2Options } from './auth';\nimport { QueryOptions } from './crud';\n\nexport interface ResourceDictonary {\n  [Key: string]: T;\n}\nexport interface AdminConfig extends Pick {\n  query?: QueryOptions;\n  auth: OAuth2Options;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/roles.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller({\n  path: 'roles',\n  version: ['1'],\n})\n@ApiTags('roles')\nexport class RolesController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetupCli.html":{"url":"classes/SetupCli.html","title":"class - SetupCli","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetupCli\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/auth/setup-cli.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/cli/auth/setup-cli.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(args: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/auth/setup-cli.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandBus } from '@nestjs/cqrs';\nimport { Command, CommandRunner } from 'nest-commander';\nimport {\n  CreateUserCommand,\n  CreateSystemPermissionCommand,\n} from '../../auth/commands';\nimport { DEFAULT_ADMIN_ROLE_NAME } from '../../auth/constants';\n\n@Command({\n  name: 'system:setup',\n  description: 'Create default system settings',\n})\nexport class SetupCli extends CommandRunner {\n  constructor(private readonly commandBus: CommandBus) {\n    super();\n  }\n\n  async run(args: string[], options: any): Promise {\n    await this.commandBus.execute(new CreateSystemPermissionCommand());\n    await this.commandBus.execute(\n      new CreateUserCommand(\n        'admin@admin.com',\n        'admin',\n        DEFAULT_ADMIN_ROLE_NAME,\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/requests/sign-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String, description: 'Email or Username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/sign-request.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({type: String, description: 'Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/sign-request.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class SignInDto {\n  @IsString()\n  @ApiProperty({\n    type: String,\n    description: 'Email or Username',\n  })\n  email: string;\n\n  @IsString()\n  @ApiProperty({\n    type: String,\n    description: 'Password',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrategyExplorer.html":{"url":"injectables/StrategyExplorer.html","title":"injectable - StrategyExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrategyExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/strategy.explorer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                explore\n                            \n                            \n                                extractMetadata\n                            \n                            \n                                filterProvider\n                            \n                            \n                                flatMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modulesContainer: ModulesContainer)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/strategy.explorer.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modulesContainer\n                                                  \n                                                        \n                                                                    ModulesContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        explore\n                        \n                    \n                \n            \n            \n                \nexplore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Oauth2StrategyOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractMetadata\n                        \n                    \n                \n            \n            \n                \nextractMetadata(instance: Object, metadataKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instance\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadataKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProvider\n                        \n                    \n                \n            \n            \n                \nfilterProvider(wrapper: InstanceWrapper, metadataKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wrapper\n                                            \n                                                        InstanceWrapper\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadataKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flatMap\n                        \n                    \n                \n            \n            \n                \nflatMap(modules: Module[], callback: (instance: InstanceWrapper) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:27\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                modules\n                                            \n                                                        Module[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@nestjs/common';\nimport { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';\nimport { Module } from '@nestjs/core/injector/module';\nimport { ModulesContainer } from '@nestjs/core/injector/modules-container';\nimport { Oauth2GrantStrategyInterface } from '../interfaces/oauth2-grant-strategy.interface';\n\nexport const OAUTH2_STRATEGY_METADATA = '__oauth2GrantStrategy__';\n\nexport interface Oauth2StrategyOptions {\n  strategies: Type[];\n}\n\n@Injectable()\nexport class StrategyExplorer {\n  constructor(private readonly modulesContainer: ModulesContainer) {}\n\n  explore(): Oauth2StrategyOptions {\n    const modules = [...this.modulesContainer.values()];\n    const strategies = this.flatMap(\n      modules,\n      instance => this.filterProvider(instance, OAUTH2_STRATEGY_METADATA),\n    );\n\n    return { strategies };\n  }\n\n  flatMap(\n    modules: Module[],\n    callback: (instance: InstanceWrapper) => Type | undefined,\n  ): Type[] {\n    const items = modules\n      .map(module => [...module.providers.values()].map(callback))\n      .reduce((a, b) => a.concat(b), []);\n    return items.filter(element => !!element) as Type[];\n  }\n\n  filterProvider(\n    wrapper: InstanceWrapper,\n    metadataKey: string,\n  ): Type | undefined {\n    const { instance } = wrapper;\n    if (!instance) {\n      return undefined;\n    }\n    return this.extractMetadata(instance, metadataKey);\n  }\n\n  extractMetadata(instance: Object, metadataKey: string): Type {\n    if (!instance.constructor) {\n      return;\n    }\n    const metadata = Reflect.getMetadata(metadataKey, instance.constructor);\n    return metadata ? (instance.constructor as Type) : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SystemAdminInterface.html":{"url":"interfaces/SystemAdminInterface.html","title":"interface - SystemAdminInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SystemAdminInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/system-admin.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validates that the usernanme exists and has the given password\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(datasource: DataSource, email: string, plainPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/system-admin.interface.ts:18\n                        \n                    \n\n\n            \n                \n                        Implement this method to validate the user existence\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasource\n                                            \n                                                        DataSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                plainPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                UserClass\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DataSource } from 'typeorm';\nimport { UserClass } from './user.interface';\n\n/**\n * Validates that the usernanme exists and has the given password\n */\nexport interface SystemAdminInterface {\n  /**\n   * Implement this method to validate the user existence\n   *\n   * @param datasource\n   * @param email\n   * @param plainPassword\n   *\n   * @return UserClass\n   * @throws InvalidUserException\n   */\n  create(\n    datasource: DataSource,\n    email: string,\n    plainPassword: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TokenController.html":{"url":"controllers/TokenController.html","title":"controller - TokenController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TokenController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/token.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteRequest\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getCollectionPost\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getRequest\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                revokeToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        deleteRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRequest(record: AuthJwtTokenEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('item/:id')@CrudEntityRequest(AuthJwtTokenEntity, 'id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/token.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                record\n                                            \n                                                            AuthJwtTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getCollectionPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCollectionPost(options: CrudPaginationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('collection')@CrudSearchRequest({entity: AuthJwtTokenEntity, output: AuthJwtTokenResponse, sortable: undefined, filterable: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/token.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            CrudPaginationRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRequest(record: AuthJwtTokenEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('item/:id')@CrudEntityRequest(AuthJwtTokenEntity, 'id')@CrudTransformResponse(AuthJwtTokenEntity, AuthJwtTokenResponse)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/token.controller.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                record\n                                            \n                                                            AuthJwtTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        revokeToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    revokeToken(record: AuthJwtTokenEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('revoke/:id')@CrudEntityRequest(AuthJwtTokenEntity, 'id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/token.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                record\n                                            \n                                                            AuthJwtTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport {\n  CrudEntity,\n  CrudEntityRequest,\n  CrudPaginationRequest,\n  CrudPaginationResource,\n  CrudSearchRequest,\n  CrudTransformResponse,\n  crudPagination,\n} from '../../crud';\n\nimport { AuthPermission } from '../decorators/auth-permission.decorator';\nimport { AuthJwtTokenEntity } from '../entities/auth-jwt-token.entity';\nimport { AuthJwtTokenResponse } from '../responses/auth-jwt-token.response';\n\n/*\nexport const applySort = (\n  entity: Object,\n  field: CrudSortableRequest,\n  queryBuilder: SelectQueryBuilder,\n) => {\n  const fields = getAllSortableFields(entity);\n\n  if (!Object.keys(fields).includes(field.field)) {\n    throw new UnauthorizedException(\n      field.field + ' is not accessable as order field.',\n    );\n  } else {\n    queryBuilder.orderBy(field.field, field.order);\n  }\n};\n\nexport const applyFilter = (\n  entity: Object,\n  field: CrudFilterableRequest,\n  queryBuilder: SelectQueryBuilder,\n) => {\n  const fields = getFilterableFields(entity);\n\n  if (!Object.keys(fields).includes(field.field)) {\n    throw new UnauthorizedException(\n      field.field + ' is not accessable as filter field.',\n    );\n  } else {\n    const filter = {};\n    if (field.condition == FilterMatch.ENDS_WITH) {\n      filter[field.field] = ILike(`%${field.term}`);\n    } else if (field.condition == FilterMatch.EQUALS) {\n      filter[field.field] = `${field.term}`;\n    } else if (field.condition == FilterMatch.GREATHER) {\n      filter[field.field] = MoreThan(field.term);\n    } else if (field.condition == FilterMatch.GREATHER_OR_EQUAL) {\n      filter[field.field] = MoreThanOrEqual(field.term);\n    } else if (field.condition == FilterMatch.IS_NULL) {\n      filter[field.field] = IsNull();\n    } else if (field.condition == FilterMatch.LIKE) {\n      filter[field.field] = ILike(`%${field.term}%`);\n    } else if (field.condition == FilterMatch.LOWER) {\n      filter[field.field] = LessThan(field.term);\n    } else if (field.condition == FilterMatch.LOWER_OR_EQUAL) {\n      filter[field.field] = LessThanOrEqual(field.term);\n    } else if (field.condition == FilterMatch.NOT) {\n      filter[field.field] = Not(field.term);\n    } else if (field.condition == FilterMatch.NOT_NULL) {\n      filter[field.field] = Not(IsNull());\n    } else if (field.condition == FilterMatch.STARTS_WITH) {\n      filter[field.field] = ILike(`${field.term}%`);\n    } else if (field.condition == FilterMatch.UNEQUAL) {\n      filter[field.field] = Not(field.term);\n    }\n    queryBuilder.where(filter);\n  }\n};\n*/\n\n@Controller({\n  path: 'tokens',\n  version: ['1'],\n})\n@AuthPermission()\n@ApiTags('auth')\nexport class TokenController {\n  constructor(\n    @InjectRepository(AuthJwtTokenEntity)\n    protected repository: Repository,\n  ) {}\n\n  @Post('collection')\n  @CrudSearchRequest({\n    entity: AuthJwtTokenEntity,\n    output: AuthJwtTokenResponse,\n    sortable: { accessToken: true },\n    filterable: { accessToken: true, identifier: true },\n  })\n  public async getCollectionPost(\n    @Body() options: CrudPaginationRequest,\n  ): Promise> {\n    return await crudPagination(AuthJwtTokenEntity, this.repository, options);\n  }\n\n  @Get('revoke/:id')\n  @CrudEntityRequest(AuthJwtTokenEntity, 'id')\n  public async revokeToken(@CrudEntity() record: AuthJwtTokenEntity) {\n    record.revokedAt = new Date();\n    await record.save();\n  }\n\n  @Delete('item/:id')\n  @CrudEntityRequest(AuthJwtTokenEntity, 'id')\n  public async deleteRequest(@CrudEntity() record: AuthJwtTokenEntity) {\n    await record.remove();\n  }\n\n  @Get('item/:id')\n  @CrudEntityRequest(AuthJwtTokenEntity, 'id')\n  @CrudTransformResponse(AuthJwtTokenEntity, AuthJwtTokenResponse)\n  public async getRequest(@CrudEntity() record: AuthJwtTokenEntity) {\n    return record;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenResponse.html":{"url":"classes/TokenResponse.html","title":"class - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/responses/token-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                    \n                                accessTokenExpireMs\n                            \n                            \n                                    \n                                    \n                                accessTokenExpiresAt\n                            \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                refreshTokenExpiresAt\n                            \n                            \n                                    \n                                    \n                                refreshTokenExpiresMs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: string, accessTokenExpiresAt: Date, accessTokenExpirems: number, refreshToken: string, refreshTokenExpiresAt: Date, refreshTokenExpiresMs: number)\n                    \n                \n                        \n                            \n                                Defined in src/auth/responses/token-response.dto.ts:47\n                            \n                        \n\n                \n                    \n                            Main method used to build this object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenExpirems\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenExpiresMs\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The generated access token', required: true})@Expose({name: 'access_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/token-response.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessTokenExpireMs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ms until the refresh token expires', required: true})@Expose({name: 'access_token_expires_in_ms'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/token-response.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The datetime when the access token expires', required: true})@Expose({name: 'access_token_expires_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/token-response.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The generated refresh token', required: true})@Expose({name: 'refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/token-response.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The datetime when the refresh token expires', required: true})@Expose({name: 'refresh_token_expires_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/token-response.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokenExpiresMs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ms until the token expires', required: true})@Expose({name: 'refresh_token_expires_in_ms'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/responses/token-response.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nexport class TokenResponse {\n  @ApiProperty({\n    type: String,\n    description: 'The generated access token',\n    required: true,\n  })\n  @Expose({ name: 'access_token' })\n  accessToken: string;\n\n  @ApiProperty({\n    description: 'The datetime when the access token expires',\n    required: true,\n  })\n  @Expose({ name: 'access_token_expires_at' })\n  accessTokenExpiresAt: Date;\n\n  @ApiProperty({\n    description: 'The ms until the refresh token expires',\n    required: true,\n  })\n  @Expose({ name: 'access_token_expires_in_ms' })\n  accessTokenExpireMs: number;\n\n  @ApiProperty({\n    type: String,\n    description: 'The generated refresh token',\n    required: true,\n  })\n  @Expose({ name: 'refresh_token' })\n  refreshToken: string;\n\n  @ApiProperty({\n    description: 'The datetime when the refresh token expires',\n    required: true,\n  })\n  @Expose({ name: 'refresh_token_expires_at' })\n  refreshTokenExpiresAt: Date;\n\n  @ApiProperty({\n    description: 'The ms until the token expires',\n    required: true,\n  })\n  @Expose({ name: 'refresh_token_expires_in_ms' })\n  refreshTokenExpiresMs: number;\n\n  /**\n   * Main method used to build this object\n   *\n   * @param token\n   * @param user\n   */\n  constructor(\n    accessToken: string,\n    accessTokenExpiresAt: Date,\n    accessTokenExpirems: number,\n    refreshToken: string,\n    refreshTokenExpiresAt: Date,\n    refreshTokenExpiresMs: number,\n  ) {\n    this.accessToken = accessToken;\n    this.accessTokenExpiresAt = accessTokenExpiresAt;\n    this.refreshToken = refreshToken;\n    this.refreshTokenExpiresAt = refreshTokenExpiresAt;\n    this.refreshTokenExpiresMs = accessTokenExpirems;\n    this.accessTokenExpireMs = refreshTokenExpiresMs;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserClass.html":{"url":"classes/UserClass.html","title":"class - UserClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, email: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/interfaces/user.interface.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The user email address', required: true})@Expose({name: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user.interface.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The user id', required: true})@Expose({name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user.interface.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromJSON(object: UserClassPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/user.interface.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                object\n                                            \n                                                            UserClassPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         UserClass\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/user.interface.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         UserClassPayload\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nexport interface UserClassPayload {\n  id: string;\n  email: string;\n}\nexport class UserClass {\n  @ApiProperty({\n    type: String,\n    description: 'The user id',\n    required: true,\n  })\n  @Expose({ name: 'id' })\n  id: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The user email address',\n    required: true,\n  })\n  @Expose({ name: 'email' })\n  email: string;\n\n  constructor(id: string, email: string) {\n    this.id = id;\n    this.email = email;\n  }\n\n  toJSON(): UserClassPayload {\n    return { email: this.email, id: this.id };\n  }\n\n  static fromJSON(object: UserClassPayload) {\n    return new UserClass(object.id, object.email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserClassPayload.html":{"url":"interfaces/UserClassPayload.html","title":"interface - UserClassPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserClassPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nexport interface UserClassPayload {\n  id: string;\n  email: string;\n}\nexport class UserClass {\n  @ApiProperty({\n    type: String,\n    description: 'The user id',\n    required: true,\n  })\n  @Expose({ name: 'id' })\n  id: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The user email address',\n    required: true,\n  })\n  @Expose({ name: 'email' })\n  email: string;\n\n  constructor(id: string, email: string) {\n    this.id = id;\n    this.email = email;\n  }\n\n  toJSON(): UserClassPayload {\n    return { email: this.email, id: this.id };\n  }\n\n  static fromJSON(object: UserClassPayload) {\n    return new UserClass(object.id, object.email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserLoaderInterface.html":{"url":"interfaces/UserLoaderInterface.html","title":"interface - UserLoaderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserLoaderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user-loader.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the main interface you have to implement in order to have the appropriate\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        load\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(dataSource: DataSource, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/user-loader.interface.ts:13\n                        \n                    \n\n\n            \n                \n                        Implement this interface to load your user into the payload from its id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataSource\n                                            \n                                                        DataSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DataSource } from 'typeorm';\nimport { UserClass } from './user.interface';\n\n/**\n * This is the main interface you have to implement in order to have the appropriate\n */\nexport interface UserLoaderInterface {\n  /**\n   * Implement this interface to load your user into the payload from its id\n   *\n   * @param userId\n   */\n  load(dataSource: DataSource, userId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPayload.html":{"url":"classes/UserPayload.html","title":"class - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a UserPayload\n\n            \n\n\n            \n                Implements\n            \n            \n                            Oauth2PayloadInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: Oauth2AccessTokenEntity, id: string, email: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/interfaces/user-payload.interface.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        Oauth2AccessTokenEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Oauth2AccessTokenEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Oauth2PayloadType\n\n                    \n                \n                \n                    \n                        Default value : Oauth2PayloadType.USER\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:14\n                        \n                    \n\n            \n                \n                    The current payload type should not be changed as it should always be user in this case\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Oauth2AccessTokenEntity } from '../entities/oauth2-accoss-token.entity';\nimport {\n  Oauth2PayloadInterface,\n  Oauth2PayloadType,\n} from './oauth2-payload.interface';\n\n/**\n * Represents a UserPayload\n */\nexport class UserPayload implements Oauth2PayloadInterface {\n  /**\n   * The current payload type should not be changed as it should always be user in this case\n   */\n  readonly type: Oauth2PayloadType = Oauth2PayloadType.USER;\n\n  constructor(\n    public readonly accessToken: Oauth2AccessTokenEntity,\n    public readonly id: string,\n    public readonly email: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserValidatorInterface.html":{"url":"interfaces/UserValidatorInterface.html","title":"interface - UserValidatorInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserValidatorInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user-validator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validates that the usernanme exists and has the given password\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        validate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(datasource: DataSource, email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/user-validator.interface.ts:17\n                        \n                    \n\n\n            \n                \n                        Implement this method to validate the user existence\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                datasource\n                                            \n                                                        DataSource\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                UserClass\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DataSource } from 'typeorm';\nimport { UserClass } from './user.interface';\n\n/**\n * Validates that the usernanme exists and has the given password\n */\nexport interface UserValidatorInterface {\n  /**\n   * Implement this method to validate the user existence\n   *\n   * @param email\n   * @param password\n   *\n   * @return UserClass\n   * @throws InvalidUserException\n   */\n  validate(\n    datasource: DataSource,\n    email: string,\n    password: string,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin.config.ts\n            \n            interface\n            AdminConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin.config.ts\n            \n            interface\n            ResourceDictonary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            OAUTH2_SERVER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            CommandHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            EventHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Oauth2Strategies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            QueryHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Resolvers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Sagas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            ServiceNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/commands/create-access-token.command.ts\n            \n            class\n            CreateAccessTokenCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/commands/create-access-token.handler.ts\n            \n            class\n            CreateAccessTokenHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/commands/create-client.command.ts\n            \n            class\n            CreateClientCommand\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/auth/commands/create-client.handler.ts\n            \n            class\n            CreateClientHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/commands/create-system-permissions-command.ts\n            \n            class\n            CreateSystemPermissionCommand\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/commands/create-system-permissions-handler.ts\n            \n            class\n            CreateSystemPermissionHandler\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/commands/create-system-permissions-handler.ts\n            \n            variable\n            log\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/commands/create-user-command.ts\n            \n            class\n            CreateUserCommand\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/auth/commands/create-user-handler.ts\n            \n            class\n            CreateUserHandle\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/commands/create-user-handler.ts\n            \n            variable\n            generatePassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/commands/create-user-handler.ts\n            \n            variable\n            log\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_ADMIN_ROLE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_SYSTEM_AUTH_PERMISSION_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_SYSTEM_PERMISSION_GROUP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_SYSTEM_PERMISSION_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_USER_ROLE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/controllers/oauth2.controller.ts\n            \n            controller\n            Oauth2Controller\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/controllers/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/controllers/token.controller.ts\n            \n            controller\n            TokenController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/decorators/auth-access-token-required.decorator.ts\n            \n            variable\n            AuthAccessTokenRequired\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/auth-permission.decorator.ts\n            \n            variable\n            AuthPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/auth-with-permission.decorator.ts\n            \n            variable\n            AuthWithPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/oauth2-grant-strategy.decorator.ts\n            \n            variable\n            Oauth2GrantStrategy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/oauth2-token-required.decorator.ts\n            \n            variable\n            OAuth2TokenRequired\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-jwt-token.entity.ts\n            \n            entity\n            AuthJwtTokenEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-permission-group.entity.ts\n            \n            entity\n            AuthPermissionGroupEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-permission.entity.ts\n            \n            entity\n            AuthPermissionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-role-assignment.entity.ts\n            \n            entity\n            AuthRoleAssignmentEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-role-assignment.entity.ts\n            \n            class\n            AuthRoleAssignmentEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-role.entity.ts\n            \n            entity\n            AuthRoleEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/oauth2-accoss-token.entity.ts\n            \n            entity\n            Oauth2AccessTokenEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/oauth2-client.entity.ts\n            \n            entity\n            Oauth2ClientEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/oauth2-client.entity.ts\n            \n            class\n            Oauth2ClientEntity\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/auth/events/access-token-created.event.ts\n            \n            class\n            AccessTokenCreatedEvent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/auth/events/client-created.event.ts\n            \n            class\n            ClientCreatedEvent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/auth/exceptions/access-token-not-found.exception.ts\n            \n            class\n            AccessTokenNotFoundException\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/exceptions/client-not-found.exception.ts\n            \n            class\n            ClientNotFoundException\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/exceptions/invalid-user.exception.ts\n            \n            class\n            InvalidUserException\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/access-token-repository.interface.ts\n            \n            interface\n            AccessTokenRepositoryInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/client-payload.interface.ts\n            \n            class\n            ClientPayload\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/auth/interfaces/client-repository.interface.ts\n            \n            interface\n            ClientRepositoryInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/interfaces/oauth2-grant-strategy.interface.ts\n            \n            interface\n            Oauth2GrantStrategyInterface\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/oauth2-options-factory.interface.ts\n            \n            interface\n            Oauth2OptionsFactoryInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/oauth2-payload.interface.ts\n            \n            interface\n            Oauth2PayloadInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/system-admin.interface.ts\n            \n            interface\n            SystemAdminInterface\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user-loader.interface.ts\n            \n            interface\n            UserLoaderInterface\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user-payload.interface.ts\n            \n            class\n            UserPayload\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user-validator.interface.ts\n            \n            interface\n            UserValidatorInterface\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user.interface.ts\n            \n            class\n            UserClass\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user.interface.ts\n            \n            interface\n            UserClassPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/loader.ts\n            \n            injectable\n            AdminLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/repository/access-token.repository.ts\n            \n            injectable\n            AccessTokenRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/repository/client.repository.ts\n            \n            injectable\n            ClientRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/requests/oauth2-request.dto.ts\n            \n            class\n            OAuth2Request\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/auth/requests/sign-request.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/responses/auth-jwt-token.response.ts\n            \n            class\n            AuthJwtTokenResponse\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/responses/auth-login-token.response.ts\n            \n            class\n            AuthLoginTokenResponse\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/responses/oauth2-response.dto.ts\n            \n            class\n            OAuth2Response\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/auth/responses/token-response.dto.ts\n            \n            class\n            TokenResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.explorer.ts\n            \n            injectable\n            StrategyExplorer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.explorer.ts\n            \n            interface\n            Oauth2StrategyOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.explorer.ts\n            \n            variable\n            OAUTH2_STRATEGY_METADATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.registry.ts\n            \n            injectable\n            Oauth2GrantStrategyRegistry\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/auth/strategies/access-token.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/client-credentials.strategy.ts\n            \n            class\n            ClientCredentialsStrategy\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/password.strategy.ts\n            \n            class\n            PasswordStrategy\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/refresh-token.strategy.ts\n            \n            class\n            RefreshTokenStrategy\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/tasks/auth-tasks-service.ts\n            \n            injectable\n            AuthTasksService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cli/auth/create-permissions.cli.ts\n            \n            class\n            CreateSystemPermissionsCli\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cli/auth/create-user.cli.ts\n            \n            class\n            CreateUserCli\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cli/auth/create-user.cli.ts\n            \n            interface\n            BasicCommandOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cli/auth/setup-cli.ts\n            \n            class\n            SetupCli\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            CONFIG_INJECT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crud/decorators/crud-entity-request.decorator.ts\n            \n            variable\n            CrudEntityRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/crud/decorators/crud-entity.decorator.ts\n            \n            variable\n            CrudEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crud/decorators/crud-search-request.decorator.ts\n            \n            variable\n            CrudSearchRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crud/decorators/crud-transform-response.decorator.ts\n            \n            variable\n            CrudTransformResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crud/guards/crud-entity-detection.guard.ts\n            \n            guard\n            CrudEntityDetectionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/guards/crud-search-request-filters.guard.ts\n            \n            guard\n            CrudSearchRequestFiltersGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/guards/crud-search-request-sortables.guard.ts\n            \n            guard\n            CrudSearchRequestSortablesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/helpers/crud-pagination.ts\n            \n            variable\n            crudPagination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crud/interceptor/crud-transform-pagination.interceptor.ts\n            \n            class\n            CrudTransformPaginationInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/interceptor/crud-transform-single.interceptor.ts\n            \n            class\n            CrudTransformSingleInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/interfaces/query-controller.interface.ts\n            \n            interface\n            IQueryController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/crud/interfaces/query-dictonary.interface.ts\n            \n            interface\n            QueryDictionary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/crud/interfaces/query-options.interface.ts\n            \n            interface\n            QueryModuleOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/interfaces/query-options.interface.ts\n            \n            interface\n            QueryOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/crud/requests/crud-filterable.request.ts\n            \n            class\n            CrudFilterableRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/crud/requests/crud-pagination.request.ts\n            \n            class\n            CrudPaginationRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/crud/requests/crud-search.request.ts\n            \n            interface\n            ICrudSearchRequestOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/crud/requests/crud-sortable.request.ts\n            \n            class\n            CrudSortableRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/resources/crud-paginat-meta.resource.ts\n            \n            class\n            CrudPaginationMeta\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/crud/resources/crud-paginat-meta.resource.ts\n            \n            interface\n            ICrudPaginationMetaParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/crud/resources/crud-pagination.resource.ts\n            \n            class\n            CrudPaginationResource\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/crud/settings-storage.ts\n            \n            class\n            CrudSettingsStorage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jwt/guards/jwt-token.guard.ts\n            \n            guard\n            JwtTokenGuard\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            nest-commander : ^3.12.5\n        \n            passport : ^0.7.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            reflect-metadata : 0.1.13\n        \n            selfsigned : ^2.4.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : >=10.2.1\n        \n            @nestjs/core : >=10.2.1\n        \n            @nestjs/cqrs : >=10.2.1\n        \n            @nestjs/jwt : >=10.2.0\n        \n            @nestjs/passport : >=10.0.0\n        \n            @nestjs/typeorm : >=10.0.1\n        \n            class-transformer : >=0.5.1\n        \n            class-validator : >=0.14.1\n        \n            passport : >=0.7.0\n        \n            passport-http-bearer : >=1.0.1\n        \n            rxjs : >=7.2.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FilterMatch   (src/.../filter-match.ts)\n                        \n                        \n                            Oauth2PayloadType   (src/.../oauth2-payload.interface.ts)\n                        \n                        \n                            QueryOrder   (src/.../query-order.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/crud/interfaces/filter-match.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterMatch\n                    \n                \n                        \n                            \n                                 EQUALS\n                            \n                        \n                        \n                            \n                                Value : eq\n                            \n                        \n                        \n                            \n                                 UNEQUAL\n                            \n                        \n                        \n                            \n                                Value : ne\n                            \n                        \n                        \n                            \n                                 GREATHER\n                            \n                        \n                        \n                            \n                                Value : gt\n                            \n                        \n                        \n                            \n                                 GREATHER_OR_EQUAL\n                            \n                        \n                        \n                            \n                                Value : gte\n                            \n                        \n                        \n                            \n                                 LOWER_OR_EQUAL\n                            \n                        \n                        \n                            \n                                Value : lte\n                            \n                        \n                        \n                            \n                                 LOWER\n                            \n                        \n                        \n                            \n                                Value : lt\n                            \n                        \n                        \n                            \n                                 STARTS_WITH\n                            \n                        \n                        \n                            \n                                Value : starts\n                            \n                        \n                        \n                            \n                                 LIKE\n                            \n                        \n                        \n                            \n                                Value : like\n                            \n                        \n                        \n                            \n                                 ENDS_WITH\n                            \n                        \n                        \n                            \n                                Value : ends\n                            \n                        \n                        \n                            \n                                 NOT\n                            \n                        \n                        \n                            \n                                Value : not\n                            \n                        \n                        \n                            \n                                 IS_NULL\n                            \n                        \n                        \n                            \n                                Value : isnull\n                            \n                        \n                        \n                            \n                                 NOT_NULL\n                            \n                        \n                        \n                            \n                                Value : notnull\n                            \n                        \n            \n        \n\n    src/auth/interfaces/oauth2-payload.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        Oauth2PayloadType\n                    \n                \n                    \n                        \n                            define payload types\n\n                        \n                    \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                Value : client\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n    src/crud/interfaces/query-order.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CliModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CrudModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_exports\n\n\n\n\nCreateSystemPermissionsCli \n\nCreateSystemPermissionsCli \n\n\n\nCreateUserCli \n\nCreateUserCli \n\n\n\nSetupCli \n\nSetupCli \n\n\n\nCliModule\n\nCliModule\n\nCreateSystemPermissionsCli  -->\n\nCliModule->CreateSystemPermissionsCli \n\n\n\nCreateUserCli  -->\n\nCliModule->CreateUserCli \n\n\n\nSetupCli  -->\n\nCliModule->SetupCli \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    38 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : Administration Dashboard Connector for @himalaya/admin-backend\n        \n            Keywords : nestjs\n        \n            Bugs : https://github.com/red-ninjas/himalaya-dashboard-nest\n        \n            License : MIT\n        \n            Repository : https://github.com/red-ninjas/himalaya-dashboard-nest\n        \n            Author : RedNinjas \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessorRole   (src/.../access-role.ts)\n                        \n                        \n                            ClassLike   (src/.../crud-transform-response.decorator.ts)\n                        \n                        \n                            Oauth2GrantStrategyType   (src/.../strategy.registry.ts)\n                        \n                        \n                            OAuth2Options   (src/.../oauth2-options.type.ts)\n                        \n                        \n                            PublicConstructor   (src/.../constructor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/crud/types/access-role.ts\n    \n    \n        \n            \n                \n                    \n                    AccessorRole\n                \n            \n            \n                \n                        string | string[] | boolean\n\n                \n            \n        \n    \n    src/crud/decorators/crud-transform-response.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    ClassLike\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/services/strategy.registry.ts\n    \n    \n        \n            \n                \n                    \n                    Oauth2GrantStrategyType\n                \n            \n            \n                \n                            Type\n\n                \n            \n        \n    \n    src/auth/types/oauth2-options.type.ts\n    \n    \n        \n            \n                \n                    \n                    OAuth2Options\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/crud/types/constructor.ts\n    \n    \n        \n            \n                \n                    \n                    PublicConstructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthAccessTokenRequired   (src/.../auth-access-token-required.decorator.ts)\n                        \n                        \n                            AuthPermission   (src/.../auth-permission.decorator.ts)\n                        \n                        \n                            AuthWithPermission   (src/.../auth-with-permission.decorator.ts)\n                        \n                        \n                            CommandHandlers   (src/.../auth.module.ts)\n                        \n                        \n                            CONFIG_INJECT_KEY   (src/.../constants.ts)\n                        \n                        \n                            CrudEntity   (src/.../crud-entity.decorator.ts)\n                        \n                        \n                            CrudEntityRequest   (src/.../crud-entity-request.decorator.ts)\n                        \n                        \n                            crudPagination   (src/.../crud-pagination.ts)\n                        \n                        \n                            CrudSearchRequest   (src/.../crud-search-request.decorator.ts)\n                        \n                        \n                            CrudTransformResponse   (src/.../crud-transform-response.decorator.ts)\n                        \n                        \n                            DEFAULT_ADMIN_ROLE_NAME   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_SYSTEM_AUTH_PERMISSION_NAME   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_SYSTEM_PERMISSION_GROUP   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_SYSTEM_PERMISSION_NAME   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_USER_ROLE_NAME   (src/.../index.ts)\n                        \n                        \n                            EventHandlers   (src/.../auth.module.ts)\n                        \n                        \n                            generatePassword   (src/.../create-user-handler.ts)\n                        \n                        \n                            log   (src/.../create-system-permissions-handler.ts)\n                        \n                        \n                            log   (src/.../create-user-handler.ts)\n                        \n                        \n                            OAUTH2_SERVER_OPTIONS   (src/.../auth.constants.ts)\n                        \n                        \n                            OAUTH2_STRATEGY_METADATA   (src/.../strategy.explorer.ts)\n                        \n                        \n                            Oauth2GrantStrategy   (src/.../oauth2-grant-strategy.decorator.ts)\n                        \n                        \n                            Oauth2Strategies   (src/.../auth.module.ts)\n                        \n                        \n                            OAuth2TokenRequired   (src/.../oauth2-token-required.decorator.ts)\n                        \n                        \n                            Providers   (src/.../auth.module.ts)\n                        \n                        \n                            QueryHandlers   (src/.../auth.module.ts)\n                        \n                        \n                            Resolvers   (src/.../auth.module.ts)\n                        \n                        \n                            Sagas   (src/.../auth.module.ts)\n                        \n                        \n                            ServiceNames   (src/.../auth.module.ts)\n                        \n                        \n                            Services   (src/.../auth.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/auth-access-token-required.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthAccessTokenRequired\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => UseGuards(JwtTokenGuard)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/auth-permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  permission: string = DEFAULT_SYSTEM_PERMISSION_NAME,\n) => {\n  return applyDecorators(\n    AuthWithPermission(permission),\n    AuthAccessTokenRequired(),\n    ApiBearerAuth(),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/auth-with-permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthWithPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Reflector.createDecorator()\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommandHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CreateClientHandler,\n  CreateAccessTokenHandler,\n  CreateUserHandle,\n  CreateSystemPermissionHandler,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EventHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Oauth2Strategies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ClientCredentialsStrategy,\n  RefreshTokenStrategy,\n  PasswordStrategy,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [StrategyExplorer, Oauth2GrantStrategyRegistry]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QueryHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolvers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Sagas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ServiceNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'ClientRepositoryInterface',\n  'AccessTokenRepositoryInterface',\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Services\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: 'ClientRepositoryInterface', useClass: ClientRepository },\n  {\n    provide: 'AccessTokenRepositoryInterface',\n    useClass: AccessTokenRepository,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONFIG_INJECT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AdminOptions'\n                    \n                \n\n\n        \n    \n\n    src/crud/decorators/crud-entity.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CrudEntity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest() as Request;\n    return request.queryItem;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/crud/decorators/crud-entity-request.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CrudEntityRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  entity: TypeOrmEntity,\n  primaryKey: string = 'id',\n  urlKey?: string,\n) => {\n  return applyDecorators(\n    SetMetadata('queryPrimaryKey', primaryKey),\n    SetMetadata('queryRouteKey', urlKey || primaryKey),\n    SetMetadata('queryType', entity),\n    Header('Content-Type', 'application/json'),\n    UseGuards(CrudEntityDetectionGuard),\n  );\n}\n                    \n                \n\n            \n                \n                    Detects the entity by parameter and store it into the request\n\n                \n            \n\n        \n    \n\n    src/crud/helpers/crud-pagination.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        crudPagination\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async  = Type\n>(\n  entityType: TEntityType,\n  builderOrRepo: SelectQueryBuilder | Repository,\n  request: CrudPaginationRequest = new CrudPaginationRequest(),\n): Promise> => {\n  const queryBuilder =\n    builderOrRepo instanceof Repository\n      ? builderOrRepo.createQueryBuilder()\n      : builderOrRepo;\n\n  const columns =\n    builderOrRepo instanceof Repository\n      ? builderOrRepo.metadata.columns\n      : builderOrRepo.connection.getMetadata(entityType).columns;\n\n  queryBuilder.skip(request.skip).take(request.take);\n  const itemCount = await queryBuilder.getCount();\n\n  if (request.sort !== undefined && isArray(request.sort)) {\n    for (let item of request.sort) {\n      const findField = _.find(columns, {\n        propertyName: item.field,\n      });\n\n      const fieldName = findField.databaseName || findField.propertyName;\n      queryBuilder.orderBy(fieldName, item.order);\n    }\n  }\n\n  if (request.filter !== undefined && isArray(request.filter)) {\n    for (let item of request.filter) {\n      const findField = _.find(columns, {\n        propertyName: item.field,\n      });\n\n      const fieldName = findField.propertyName;\n\n      const filter = {};\n      if (item.condition == FilterMatch.ENDS_WITH) {\n        filter[fieldName] = ILike(`%${item.term}`);\n      } else if (item.condition == FilterMatch.EQUALS) {\n        filter[fieldName] = `${item.term}`;\n      } else if (item.condition == FilterMatch.GREATHER) {\n        filter[fieldName] = MoreThan(item.term);\n      } else if (item.condition == FilterMatch.GREATHER_OR_EQUAL) {\n        filter[fieldName] = MoreThanOrEqual(item.term);\n      } else if (item.condition == FilterMatch.IS_NULL) {\n        filter[fieldName] = IsNull();\n      } else if (item.condition == FilterMatch.LIKE) {\n        filter[fieldName] = ILike(`%${item.term}%`);\n      } else if (item.condition == FilterMatch.LOWER) {\n        filter[fieldName] = LessThan(item.term);\n      } else if (item.condition == FilterMatch.LOWER_OR_EQUAL) {\n        filter[fieldName] = LessThanOrEqual(item.term);\n      } else if (item.condition == FilterMatch.NOT) {\n        filter[fieldName] = Not(item.term);\n      } else if (item.condition == FilterMatch.NOT_NULL) {\n        filter[fieldName] = Not(IsNull());\n      } else if (item.condition == FilterMatch.STARTS_WITH) {\n        filter[fieldName] = ILike(`${item.term}%`);\n      } else if (item.condition == FilterMatch.UNEQUAL) {\n        filter[fieldName] = Not(item.term);\n      }\n      queryBuilder.where(filter);\n    }\n  }\n\n  const { entities } = await queryBuilder.getRawAndEntities();\n  const pageMetaDto = new CrudPaginationMeta({ itemCount, options: request });\n  const reponse = new CrudPaginationResource();\n\n  reponse.setData(entities);\n  reponse.setMetaData(pageMetaDto);\n\n  return reponse;\n}\n                    \n                \n\n\n        \n    \n\n    src/crud/decorators/crud-search-request.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CrudSearchRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ,\n  ResponseDTO extends ClassLike = EntityDTO\n>(\n  optionsOrEntity:\n    | ICrudSearchRequestOptions\n    | EntityDTO,\n) => {\n  const options =\n    typeof optionsOrEntity === 'function'\n      ? {\n          sortable: [],\n          filterable: [],\n          output: optionsOrEntity,\n          entity: optionsOrEntity,\n        }\n      : optionsOrEntity;\n\n  const responseType = options.output ? options.output : options.entity;\n  const filterKeys =\n    options['filterable'] !== undefined ? Object.keys(options.filterable) : [];\n  const sortableKeys =\n    options['sortable'] !== undefined ? Object.keys(options.sortable) : [];\n\n  return applyDecorators(\n    UseInterceptors(ClassSerializerInterceptor),\n    UseInterceptors(\n      new CrudTransformPaginationInterceptor(options.entity, options.output),\n    ),\n    Header('Content-Type', 'application/json'),\n    SetMetadata('filterableFields', filterKeys),\n    UseGuards(CrudSearchRequestFiltersGuard),\n    SetMetadata('sortableFields', sortableKeys),\n    SetMetadata('queryOutputType', responseType),\n    UseGuards(CrudSearchRequestSortablesGuard),\n    ApiExtraModels(CrudPaginationResource, responseType),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(CrudPaginationResource) },\n          {\n            properties: {\n              data: {\n                type: 'array',\n                items: { $ref: getSchemaPath(responseType) },\n              },\n            },\n          },\n        ],\n      },\n    }),\n    ApiExtraModels(CrudPaginationRequest),\n    ApiBody({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(CrudPaginationRequest) },\n          {\n            properties: {\n              sort: {\n                type: 'array',\n                items: {\n                  allOf: [\n                    { $ref: getSchemaPath(CrudSortableRequest) },\n                    {\n                      properties: {\n                        field: {\n                          type: 'enum',\n                          enum: sortableKeys,\n                        },\n                      },\n                    },\n                  ],\n                },\n              },\n\n              filter: {\n                type: 'array',\n                items: {\n                  allOf: [\n                    { $ref: getSchemaPath(CrudFilterableRequest) },\n                    {\n                      properties: {\n                        field: {\n                          type: 'enum',\n                          enum: filterKeys,\n                        },\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n          },\n        ],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/crud/decorators/crud-transform-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CrudTransformResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ,\n  ResponseDTO extends ClassLike = EntityDTO\n>(\n  entity: EntityDTO,\n  output?: ResponseDTO,\n) => {\n  const responseType = output ? output : entity;\n\n  return applyDecorators(\n    Header('Content-Type', 'application/json'),\n    UseInterceptors(ClassSerializerInterceptor),\n    UseInterceptors(new CrudTransformSingleInterceptor(entity, output)),\n    ApiExtraModels(responseType),\n    ApiOkResponse({\n      schema: {\n        allOf: [{ $ref: getSchemaPath(responseType) }],\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/constants/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ADMIN_ROLE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'administrator'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SYSTEM_AUTH_PERMISSION_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authentification'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SYSTEM_PERMISSION_GROUP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'system'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SYSTEM_PERMISSION_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'system'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_USER_ROLE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/auth/commands/create-user-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generatePassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  length = 20,\n  characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz~!@-#$',\n) =>\n  Array.from(crypto.getRandomValues(new Uint32Array(length)))\n    .map(x => characters[x % characters.length])\n    .join('')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Default value : console.log\n                    \n                \n\n\n        \n    \n\n    src/auth/commands/create-system-permissions-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Default value : console.log\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OAUTH2_SERVER_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OAUTH2_SERVER_OPTIONS'\n                    \n                \n\n\n        \n    \n\n    src/auth/services/strategy.explorer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OAUTH2_STRATEGY_METADATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '__oauth2GrantStrategy__'\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/oauth2-grant-strategy.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Oauth2GrantStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string): ClassDecorator => {\n  return (target: object) => {\n    Reflect.defineMetadata(OAUTH2_STRATEGY_METADATA, name, target);\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/oauth2-token-required.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OAuth2TokenRequired\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => UseGuards(AuthGuard('access-token'))\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
