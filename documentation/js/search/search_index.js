var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessTokenCreatedEvent.html",[0,0.035,1,2.778]],["body/classes/AccessTokenCreatedEvent.html",[0,0.033,1,3.63,2,0.986,3,0.141,4,0.141,5,0.125,6,6.454,7,2.936,8,2.84,9,1.254,10,2.84,11,4.411,12,1.363,13,0.157,14,0.922,15,3.738,16,1.571,17,2.844,18,5.785,19,3.283,20,2.182,21,3.869,22,5.785,23,3.869,24,0.604,25,4.41,26,1.272,27,3.161,28,0.915,29,4.196,30,0.599,31,3.161,32,0.581,33,0.015,34,0.484,35,0.317,36,2.41,37,3.161,38,3.161,39,3.161,40,3.161,41,3.648,42,3.648,43,3.648,44,3.648,45,0.141,46,0.01,47,0.01]],["title/entities/AccessTokenEntity.html",[48,1.587,49,1.66]],["body/entities/AccessTokenEntity.html",[0,0.027,3,0.116,4,0.116,5,0.103,7,1.727,13,0.13,14,0.802,17,2.241,18,4.558,20,2.128,21,3.049,22,4.558,23,3.049,25,3.475,28,0.817,29,3.754,30,0.582,33,0.015,34,0.972,35,0.316,45,0.116,46,0.008,47,0.008,48,1.224,49,1.887,50,1.34,51,6.271,52,2.603,53,2.128,54,4.558,55,5.26,56,2.557,57,4.558,58,3.448,59,3.837,60,2.667,61,6.559,62,3.958,63,4.278,64,5.805,65,3.004,66,6.476,67,3.837,68,3.004,69,2.522,70,4.428,71,3.004,72,3.158,73,4.428,74,3.004,75,3.837,76,1.887,77,3.158,78,3.004,79,2.461,80,3.837,81,5.03,82,3.004,83,3.837,84,3.004,85,2.925,86,3.158,87,3.004,88,3.837,89,3.004,90,4.428,91,3.837,92,3.004,93,3.158,94,3.837,95,4.428,96,3.837,97,3.837,98,3.004,99,0.324,100,3.996,101,4.428,102,2.339,103,2.339,104,1.406,105,3.004,106,1.643,107,1.643,108,3.004]],["title/classes/AccessTokenNotFoundException.html",[0,0.035,109,2.574]],["body/classes/AccessTokenNotFoundException.html",[0,0.034,2,1.033,3,0.148,4,0.148,5,0.131,7,2.855,9,1.314,12,2.419,13,0.165,17,2.989,20,2.412,21,4.066,24,0.62,28,0.851,30,0.49,32,0.957,33,0.016,34,0.798,35,0.259,45,0.148,46,0.01,47,0.01,99,0.235,109,4.484,110,5.61,111,2.975,112,4.094,113,4.094,114,5.286,115,2.142,116,5.208,117,1.214,118,4.584,119,5.257,120,4.094,121,5.257,122,5.257,123,3.821,124,5.462,125,5.462,126,1.388,127,4.165,128,4.556,129,3.821,130,5.257,131,3.821,132,0.918,133,1.984,134,1.388,135,1.984,136,3.821,137,2.724]],["title/injectables/AccessTokenRepository.html",[138,1.286,139,2.131]],["body/injectables/AccessTokenRepository.html",[0,0.03,3,0.13,4,0.13,5,0.115,7,2.765,13,0.145,16,0.661,17,2.759,20,1.156,21,3.252,24,0.694,26,1.202,28,0.827,30,0.549,32,1.073,33,0.016,34,0.894,35,0.29,45,0.13,46,0.009,47,0.009,49,2.954,53,1.653,99,0.415,104,1.574,109,2.222,117,1.11,126,1.495,132,0.808,134,1.495,138,1.587,139,2.629,140,1.742,141,6.008,142,2.915,143,2.986,144,2.49,145,3.428,146,4.807,147,4.166,148,4.166,149,2.915,150,3.904,151,3.363,152,4.166,153,3.363,154,2.624,155,4.807,156,3.363,157,4.807,158,3.363,159,4.166,160,3.363,161,4.166,162,3.363,163,2.619,164,1.949,165,3.363,166,1.742,167,1.742,168,3.363,169,2.915,170,2.49,171,2.915,172,2.222,173,1.433,174,3.363,175,1.257,176,1.524,177,2.759,178,4.166,179,4.807,180,2.966,181,3.363,182,3.363,183,3.363,184,3.363,185,3.363]],["title/interfaces/AccessTokenRepositoryInterface.html",[170,2.018,186,0.705]],["body/interfaces/AccessTokenRepositoryInterface.html",[3,0.157,4,0.157,5,0.139,7,2.966,9,1.395,12,2.774,13,0.175,17,2.828,21,3.174,24,0.639,28,0.818,30,0.505,32,0.987,33,0.016,34,0.823,35,0.267,45,0.157,46,0.01,47,0.01,49,2.828,99,0.25,109,3.618,117,1.265,126,1.432,133,2.046,135,1.808,144,2.836,147,4.746,148,4.746,152,4.746,154,2.559,159,4.746,161,4.746,166,2.101,167,2.101,170,2.836,186,1.122,187,1.188,188,5.752,189,3.159,190,3.379,191,3.618,192,4.746,193,5.477,194,4.746,195,3.905,196,4.057,197,4.265,198,5.477,199,3.516,200,4.385,201,3.516,202,4.265]],["title/injectables/AccessTokenStrategy.html",[138,1.286,203,2.778]],["body/injectables/AccessTokenStrategy.html",[0,0.037,3,0.161,4,0.161,5,0.143,7,2.176,12,2.085,13,0.18,16,1.097,17,2.861,24,0.575,26,1.395,28,0.72,30,0.455,32,0.889,33,0.015,34,0.741,35,0.241,45,0.161,46,0.011,47,0.011,99,0.414,115,2.274,117,1.289,126,0.964,127,2.418,132,1.002,133,1.377,138,1.842,139,3.052,140,2.161,143,2.452,154,2,170,3.477,175,2.085,176,1.323,177,1.778,187,1.221,203,3.979,204,5.449,205,3.249,206,6.288,207,5.449,208,3.891,209,3.616,210,6.288,211,4.435,212,3.616,213,5.58,214,4.172,215,5.818,216,4.345,217,5.449,218,5.58,219,3.616,220,3.616,221,1.953,222,2.574,223,2.975,224,2.975,225,3.249,226,4.172,227,4.172,228,4.172,229,4.172]],["title/interfaces/AdminConfig.html",[186,0.705,230,2.574]],["body/interfaces/AdminConfig.html",[3,0.201,4,0.201,5,0.179,13,0.224,14,1.165,24,0.663,28,0.596,33,0.015,35,0.277,45,0.249,46,0.012,47,0.012,99,0.43,115,2.621,132,1.25,186,1.165,187,1.523,230,4.249,231,4.051,232,5.574,233,4.099,234,5.836,235,4.819,236,4.228,237,4.509,238,3.21,239,3.71,240,3.016]],["title/injectables/AdminLoader.html",[138,1.286,241,3.034]],["body/injectables/AdminLoader.html",[0,0.046,3,0.199,4,0.199,5,0.177,13,0.222,14,1.156,16,1.366,24,0.53,26,1.285,30,0.521,32,0.819,33,0.015,34,0.683,35,0.222,45,0.199,46,0.012,47,0.012,76,2.191,99,0.393,132,1.236,135,2.108,138,2.108,140,2.663,175,2.596,241,4.973,242,4.456,243,5.657,244,6.386,245,6.295,246,6.386,247,5.142,248,2.191,249,6.386,250,3.397,251,4.456,252,5.142,253,4.004,254,5.142]],["title/modules/AdminModule.html",[255,1.823,256,3.034]],["body/modules/AdminModule.html",[0,0.034,3,0.148,4,0.148,5,0.131,15,2.46,16,1.034,24,0.542,30,0.49,32,0.837,33,0.016,34,0.698,35,0.227,45,0.148,46,0.01,47,0.01,60,1.428,99,0.443,117,0.882,118,3.244,126,1.388,132,0.918,134,1.388,135,1.984,143,2.05,173,1.628,175,1.428,221,2.46,230,4.277,233,2.09,243,4.094,245,5.208,250,2.524,251,3.311,255,3.03,256,4.68,257,1.979,258,3.821,259,3.821,260,5.257,261,6.474,262,3.821,263,3.821,264,2.358,265,2.975,266,4.094,267,3.821,268,2.24,269,4.68,270,5.882,271,3.821,272,3.311,273,4.556,274,5.257,275,5.257,276,5.257,277,3.821,278,5.257,279,5.257,280,6.474,281,3.311,282,2.724,283,4.094,284,2.358,285,2.724,286,3.821,287,3.821,288,2.524,289,3.311,290,2.724,291,3.821,292,3.821,293,2.215,294,3.97,295,2.975,296,4.556,297,3.821,298,3.821,299,2.524]],["title/controllers/AuthController.html",[300,2.574,301,2.778]],["body/controllers/AuthController.html",[0,0.038,3,0.165,4,0.165,5,0.146,7,2.204,12,1.589,13,0.183,16,1.111,24,0.438,26,1.413,30,0.347,32,0.677,33,0.016,34,0.565,35,0.183,45,0.165,46,0.011,47,0.011,53,2.182,56,1.524,79,3.166,99,0.446,106,2.326,107,2.326,117,1.305,126,0.982,132,1.022,133,1.865,134,0.982,135,1.404,143,2.476,154,2.025,172,2.809,175,2.112,176,1.348,177,2.705,180,2.624,221,1.99,272,3.685,300,3.734,301,4.03,302,2.809,303,3.685,304,4.252,305,4.252,306,4.252,307,3.091,308,5.652,309,3.685,310,3.685,311,4.252,312,4.401,313,2.202,314,2.624,315,2.624,316,3.487,317,4.252,318,2.522,319,3.032,320,3.685,321,1.99,322,3.685,323,4.252,324,1.99,325,4.252,326,4.252,327,2.645,328,4.898,329,2.624,330,3.685,331,4.252,332,4.252,333,4.252,334,4.252,335,3.685,336,2.624,337,4.252,338,4.252]],["title/modules/AuthModule.html",[255,1.823,282,2.778]],["body/modules/AuthModule.html",[0,0.026,3,0.114,4,0.114,5,0.101,15,1.38,16,1.131,24,0.304,26,0.737,30,0.356,32,0.47,33,0.016,34,0.392,35,0.127,45,0.275,46,0.008,47,0.008,49,1.861,50,1.316,69,1.78,99,0.449,117,0.681,118,3.55,126,1.009,132,0.708,133,0.973,134,1.202,135,0.973,139,2.389,143,1.704,144,2.262,150,1.709,164,1.709,170,2.262,173,1.256,175,2.15,176,2.336,197,2.296,203,3.115,211,1.948,221,2.435,235,4.058,243,3.401,255,2.435,257,1.527,264,1.819,265,2.296,266,3.401,268,2.913,269,4.052,270,5.323,273,3.785,282,3.71,289,2.555,290,2.102,293,3.334,294,4.058,295,2.296,296,3.785,299,1.948,301,3.115,302,2.886,316,3.21,318,1.949,327,2.044,328,2.555,339,2.296,340,2.949,341,4.368,342,2.949,343,3.115,344,3.21,345,4.052,346,4.368,347,1.709,348,2.555,349,4.48,350,2.949,351,2.886,352,2.886,353,2.949,354,2.389,355,2.949,356,2.296,357,2.886,358,2.886,359,2.886,360,3.71,361,2.296,362,3.401,363,3.401,364,3.401,365,3.401,366,3.401,367,3.401,368,3.401,369,3.401,370,2.949,371,2.949,372,2.949,373,4.368,374,5.203,375,2.949,376,5.203,377,1.948,378,2.949,379,2.555,380,4.368,381,2.949,382,2.949]],["title/modules/AuthSeedingModule.html",[255,1.823,383,2.778]],["body/modules/AuthSeedingModule.html",[0,0.044,3,0.191,4,0.191,5,0.169,33,0.015,45,0.191,46,0.012,47,0.012,50,2.199,99,0.441,132,1.184,164,2.856,233,2.695,253,3.837,255,3.188,257,2.552,290,3.514,293,3.949,299,4.5,348,4.27,354,3.401,379,4.27,383,5.453,384,3.514,385,4.27,386,4.27,387,4.27,388,4.27,389,4.27,390,5.254,391,5.388,392,4.27,393,4.27,394,3.837,395,4.927,396,3.604,397,3.836,398,4.927]],["title/injectables/AuthSeedingService.html",[138,1.286,390,2.574]],["body/injectables/AuthSeedingService.html",[0,0.039,3,0.168,4,0.168,5,0.149,13,0.187,24,0.447,26,1.431,30,0.467,32,0.691,33,0.015,34,0.576,35,0.187,45,0.168,46,0.011,47,0.011,50,1.935,99,0.437,104,2.029,117,1.322,126,1.001,132,1.042,138,1.89,140,2.245,143,2.5,150,4.462,163,3.376,164,2.513,175,2.395,176,1.374,177,2.905,284,2.675,354,2.371,390,3.782,394,4.991,396,2.513,397,2.675,399,3.757,400,6.817,401,4.336,402,6.409,403,6.409,404,4.336,405,5.725,406,4.336,407,4.458,408,4.458,409,4.458,410,4.458,411,4.336,412,4.336,413,4.336,414,5.725,415,5.725,416,4.503,417,4.503,418,3.757,419,4.336,420,3.757,421,3.757,422,2.132,423,4.336,424,4.336]],["title/classes/ClientCreatedEvent.html",[0,0.035,425,2.778]],["body/classes/ClientCreatedEvent.html",[0,0.041,2,1.224,3,0.175,4,0.175,5,0.155,8,3.523,9,1.556,10,3.523,13,0.195,14,1.066,15,3.678,16,1.545,19,3.533,20,2.383,24,0.466,26,1.471,27,3.921,28,0.9,29,4.017,30,0.586,31,3.921,32,0.721,33,0.015,34,0.978,35,0.31,37,3.921,38,3.921,39,3.921,40,3.921,45,0.175,46,0.011,47,0.011,53,1.556,425,4.198,426,6.383,427,4.524,428,3.921,429,6.226]],["title/classes/ClientCredentialsStrategy.html",[0,0.035,357,2.574]],["body/classes/ClientCredentialsStrategy.html",[0,0.03,2,0.893,3,0.128,4,0.128,5,0.113,12,1.233,13,0.142,16,0.933,17,1.406,24,0.572,26,1.517,28,0.636,30,0.453,32,0.884,33,0.016,34,0.737,35,0.239,45,0.128,46,0.009,47,0.009,49,2.021,53,2.301,62,1.805,69,2.809,79,3.227,99,0.443,106,1.805,107,1.805,117,1.095,126,1.095,132,0.793,133,1.565,134,1.282,135,1.565,143,2.61,154,2.174,166,1.709,167,1.709,173,2.021,175,1.772,176,1.924,177,1.406,187,0.966,208,3.218,221,1.545,307,3.516,313,2.456,314,2.036,315,2.036,318,2.708,327,2.598,329,2.036,347,1.913,357,3.133,430,5.259,431,2.86,432,2.875,433,3.667,434,2.353,435,5.493,436,3.301,437,2.18,438,3.301,439,2.18,440,3.301,441,2.18,442,2.57,443,1.623,444,2.57,445,2.749,446,2.57,447,2.353,448,1.805,449,3.301,450,2.353,451,3.693,452,2.353,453,2.353,454,2.57,455,2.57,456,3.301,457,4.11,458,4.11,459,5.799,460,3.301,461,3.301,462,2.86,463,2.86,464,2.86,465,2.86,466,2.86,467,2.86,468,2.86,469,2.86,470,3.693,471,3.693,472,2.86]],["title/entities/ClientEntity.html",[48,1.587,69,1.587]],["body/entities/ClientEntity.html",[0,0.024,3,0.103,4,0.103,5,0.091,12,1.508,13,0.114,14,0.73,19,2.401,20,1.679,23,3.725,28,0.861,29,3.583,30,0.594,33,0.015,34,0.998,35,0.336,45,0.103,46,0.008,47,0.008,48,1.081,50,1.184,53,1.876,54,4.231,56,2.612,57,5.086,60,2.039,61,6.736,62,4.192,63,1.752,69,1.644,72,2.877,76,2.822,77,2.877,83,3.496,86,1.891,91,3.496,93,2.877,99,0.163,100,4.498,103,2.065,104,1.241,429,4.231,473,2.299,474,4.231,475,4.231,476,4.231,477,4.882,478,4.57,479,4.882,480,4.882,481,4.231,482,2.325,483,3.496,484,3.142,485,2.652,486,6.426,487,6.179,488,2.652,489,5.357,490,3.496,491,2.652,492,2.652,493,3.142,494,2.652,495,3.496,496,2.652,497,3.496,498,2.652,499,4.034,500,2.877,501,3.496,502,2.652,503,2.652,504,2.652,505,3.496,506,2.652,507,3.496,508,2.652,509,3.496,510,3.142,511,2.652,512,2.652,513,2.652,514,4.034,515,4.034,516,4.034,517,4.034,518,2.652,519,2.652]],["title/classes/ClientNotFoundException.html",[0,0.035,520,2.574]],["body/classes/ClientNotFoundException.html",[0,0.035,2,1.042,3,0.149,4,0.149,5,0.132,9,1.325,13,0.166,19,3.195,20,2.589,24,0.622,28,0.853,30,0.492,32,0.962,33,0.016,34,0.957,35,0.26,45,0.149,46,0.01,47,0.01,53,2.559,99,0.237,111,3.001,112,4.118,113,4.118,114,5.302,115,2.155,116,5.232,117,1.221,118,4.592,120,4.118,124,5.477,125,5.477,126,1.394,127,3.947,128,4.583,132,0.926,133,1.993,134,1.394,135,1.993,520,4.498,521,5.631,522,5.288,523,5.288,524,5.288,525,3.854,526,3.854,527,5.288,528,3.854,529,6.037]],["title/classes/ClientPayload.html",[0,0.035,224,2.778]],["body/classes/ClientPayload.html",[0,0.036,2,1.078,3,0.154,4,0.154,5,0.137,9,1.37,12,1.489,13,0.172,14,0.979,15,3.607,16,1.542,17,2.807,19,3.387,20,2.368,24,0.411,26,1.352,28,0.883,30,0.579,32,0.635,33,0.015,34,0.943,35,0.327,45,0.154,46,0.01,47,0.01,49,2.935,53,1.86,76,1.698,99,0.333,166,2.063,167,2.063,173,2.305,222,3.79,224,3.857,248,1.698,422,1.959,530,5.658,531,2.632,532,4.688,533,5.41,534,4.058,535,3.103,536,5.41,537,3.984,538,3.453,539,3.453,540,3.453,541,4.38,542,5.41,543,2.841,544,3.453,545,2.841,546,3.103,547,3.453,548,3.453]],["title/injectables/ClientRepository.html",[138,1.286,327,1.823]],["body/injectables/ClientRepository.html",[0,0.03,3,0.13,4,0.13,5,0.115,13,0.145,16,0.661,19,2.759,20,1.653,24,0.694,26,1.202,28,0.827,29,1.949,30,0.549,32,1.073,33,0.016,34,0.958,35,0.29,45,0.13,46,0.009,47,0.009,53,2.548,69,2.825,99,0.415,104,1.574,117,1.11,126,1.495,132,0.808,134,1.495,135,1.11,138,1.587,140,1.742,143,2.986,144,2.49,145,3.428,149,2.915,150,3.904,154,2.624,163,2.619,164,1.949,169,2.915,172,2.222,173,1.433,175,1.257,176,1.778,177,2.759,178,4.166,180,3.461,200,3.176,318,2.145,319,2.398,327,2.25,448,1.84,452,2.398,520,2.222,549,2.915,550,4.166,551,4.166,552,3.363,553,4.166,554,3.363,555,4.807,556,3.363,557,4.166,558,3.363,559,4.166,560,3.363,561,4.166,562,3.363,563,3.363,564,3.363,565,3.363,566,3.363,567,3.363,568,3.363,569,4.807]],["title/interfaces/ClientRepositoryInterface.html",[186,0.705,318,1.738]],["body/interfaces/ClientRepositoryInterface.html",[3,0.146,4,0.146,5,0.129,9,1.294,13,0.162,19,3.163,20,2.212,24,0.663,28,0.848,30,0.524,32,1.024,33,0.016,34,0.969,35,0.277,45,0.146,46,0.01,47,0.01,53,2.577,69,2.621,99,0.232,117,1.202,126,1.486,133,2.123,135,1.717,144,3.331,150,3.016,154,2.614,186,0.681,187,1.102,189,2.931,190,3.21,191,3.437,192,4.509,199,3.262,200,4.25,201,3.262,202,4.643,216,5.009,318,2.322,336,3.21,448,2.059,520,3.939,530,5.257,543,3.71,545,3.71,550,4.509,551,4.509,553,4.509,557,4.509,559,4.509,561,4.509,570,4.509,571,5.203,572,3.764,573,6.432,574,3.764]],["title/entities/ClientRolesEntity.html",[48,1.587,343,2.778]],["body/entities/ClientRolesEntity.html",[0,0.043,3,0.187,4,0.187,5,0.166,13,0.265,14,1.112,20,2.321,28,0.704,30,0.55,33,0.015,35,0.291,45,0.187,46,0.012,47,0.012,48,1.969,50,2.157,56,2.419,86,3.446,99,0.378,100,4.166,102,4.783,103,5.257,104,2.262,115,1.969,233,2.644,343,4.38,354,3.885,356,3.764,482,2.617,575,6.156,576,4.188,577,5.532,578,5.711,579,4.833,580,4.833,581,4.188,582,4.783,583,4.833,584,4.38,585,4.833,586,4.833]],["title/classes/ComplexQueryRequest.html",[0,0.035,587,2.258]],["body/classes/ComplexQueryRequest.html",[0,0.06,2,0.888,3,0.127,4,0.127,5,0.113,13,0.142,14,0.855,16,1.509,24,0.726,28,0.765,30,0.493,33,0.015,35,0.327,45,0.234,46,0.009,47,0.009,56,2.169,60,2.262,76,2.846,99,0.373,115,1.925,134,0.758,248,2.013,321,1.536,324,3.296,482,2.933,587,2.738,588,2.168,589,3.154,590,3.656,591,3.946,592,3.208,593,3.208,594,3.872,595,4.724,596,3.459,597,4.724,598,3.282,599,3.282,600,3.872,601,3.282,602,3.282,603,4.093,604,2.844,605,4.724,606,3.282,607,3.656,608,3.121,609,3.368,610,2.844,611,3.282,612,5.116,613,1.7,614,1.902,615,4.316,616,2.34,617,3.946,618,2.34,619,4.573,620,2.34,621,3.946,622,1.7,623,3.121,624,2.34,625,2.34,626,2.915,627,2.34,628,2.025,629,2.34,630,3.368,631,3.368,632,2.34,633,2.34,634,1.902,635,1.902,636,2.34,637,3.368]],["title/classes/CreateAccessTokenCommand.html",[0,0.035,445,2.258]],["body/classes/CreateAccessTokenCommand.html",[0,0.036,2,1.08,3,0.155,4,0.155,5,0.137,12,2.764,13,0.172,14,0.981,15,3.713,16,1.56,19,3.243,23,3.996,24,0.634,25,4.554,26,1.354,28,0.883,30,0.593,32,0.636,33,0.015,34,0.53,35,0.313,36,2.638,45,0.155,46,0.01,47,0.01,79,3.226,99,0.246,106,2.184,107,2.184,307,3.77,445,3.14,482,3.152,638,4.887,639,3.461,640,4.916,641,5.974,642,3.993,643,3.993,644,3.993,645,3.993,646,3.993,647,3.993,648,3.993,649,3.993]],["title/classes/CreateAccessTokenHandler.html",[0,0.035,351,2.574]],["body/classes/CreateAccessTokenHandler.html",[0,0.032,1,2.533,2,0.961,3,0.137,4,0.137,5,0.122,7,1.949,12,2.47,13,0.153,16,1.137,17,2.463,24,0.515,26,1.249,29,2.059,30,0.407,32,0.796,33,0.016,34,0.664,35,0.215,45,0.137,46,0.009,47,0.009,49,2.129,53,1.718,69,2.036,77,3.563,99,0.45,117,1.154,126,0.82,132,0.854,133,1.173,135,1.908,137,2.533,139,2.733,143,2.255,144,2.994,166,1.84,167,1.84,170,3.249,171,3.078,172,3.301,173,2.129,175,2.16,176,2.095,177,1.514,194,4.33,209,3.078,221,1.662,225,2.766,318,2.799,319,2.533,327,2.705,329,2.192,347,2.059,351,3.301,445,3.636,447,2.533,448,1.943,470,2.766,471,3.891,638,3.819,640,2.533,650,3.078,651,5.01,652,4.885,653,6.104,654,3.552,655,4.33,656,3.552,657,4.885,658,3.078,659,3.078,660,4.33,661,3.552,662,3.078,663,3.552,664,3.552,665,3.078,666,3.552,667,3.552,668,3.078,669,3.552,670,3.552,671,3.552,672,3.552,673,3.552,674,3.552,675,3.078,676,3.078,677,3.552,678,3.078,679,3.552,680,3.552,681,3.552,682,4.33,683,3.552]],["title/classes/CreateClientCommand.html",[0,0.035,684,2.778]],["body/classes/CreateClientCommand.html",[0,0.034,2,1.027,3,0.147,4,0.147,5,0.13,9,1.305,13,0.164,14,0.948,15,3.726,16,1.565,19,3.33,23,3.925,24,0.782,26,1.308,28,0.897,30,0.596,32,0.605,33,0.015,34,0.899,35,0.315,36,4.474,45,0.147,46,0.01,47,0.01,144,1.966,474,5.869,478,5.274,481,5.869,482,3.115,570,3.29,638,4.901,657,2.956,684,3.732,685,3.29,686,2.508,687,6.772,688,3.796,689,3.531,690,3.796,691,3.796,692,3.796,693,3.796,694,3.796,695,3.796,696,3.796,697,3.796]],["title/classes/CreateClientHandler.html",[0,0.035,352,2.574]],["body/classes/CreateClientHandler.html",[0,0.031,2,0.927,3,0.133,4,0.133,5,0.118,7,1.337,10,2.67,12,1.281,13,0.148,16,0.958,24,0.502,26,1.218,29,1.987,30,0.397,32,0.776,33,0.016,34,0.753,35,0.21,45,0.133,46,0.009,47,0.009,50,1.53,53,1.949,69,1.986,85,2.265,99,0.447,117,1.125,126,0.792,132,0.824,133,1.132,134,0.792,135,1.871,143,2.211,144,2.936,172,2.265,173,2.077,175,1.821,176,2.068,177,1.461,221,1.604,248,1.461,318,2.755,319,2.445,327,2.281,329,2.115,347,1.987,352,3.22,425,3.475,428,2.971,434,2.445,450,2.445,484,2.67,510,2.67,638,3.746,640,3.475,651,4.913,652,4.808,653,6.042,655,4.223,657,4.808,658,2.971,659,2.971,660,4.223,662,2.971,665,2.971,675,2.971,676,2.971,682,2.971,684,4.403,698,2.971,699,3.428,700,3.428,701,3.428,702,3.428,703,4.873,704,3.428,705,4.223,706,3.428,707,3.428,708,3.428,709,4.873,710,3.428,711,3.428,712,3.428,713,3.428,714,3.428,715,3.428,716,3.428,717,3.428,718,3.428,719,2.971,720,3.428,721,3.428,722,3.428,723,3.428,724,3.428,725,3.428,726,4.873,727,3.428,728,3.428,729,3.428,730,3.428,731,3.428,732,3.428,733,3.428,734,3.428,735,4.873,736,3.428,737,3.428,738,3.428,739,3.428,740,3.428,741,3.428,742,3.428]],["title/guards/EntityAccessorGuard.html",[743,2.778,744,2.778]],["body/guards/EntityAccessorGuard.html",[0,0.04,3,0.171,4,0.171,5,0.151,13,0.19,16,0.867,24,0.597,26,1.447,30,0.472,32,0.922,33,0.016,34,0.769,35,0.25,45,0.171,46,0.011,47,0.011,48,2.359,60,1.649,99,0.398,117,1.337,126,1.019,127,3.356,132,1.06,134,1.019,135,1.911,138,1.911,154,2.075,173,1.88,175,1.649,176,1.836,180,3.573,200,3.825,221,2.065,307,2.413,689,3.167,744,4.129,745,3.823,746,3.823,747,7.127,748,4.411,749,4.513,750,4.411,751,4.411,752,6.863,753,4.411,754,5.018,755,6.464,756,3.823,757,3.435,758,4.411,759,4.411,760,4.411,761,4.411,762,5.79,763,2.722,764,4.411,765,4.411,766,4.411,767,4.411,768,3.435]],["title/classes/FilterableRequest.html",[0,0.035,594,2.258]],["body/classes/FilterableRequest.html",[0,0.062,2,1.003,3,0.143,4,0.143,5,0.127,13,0.16,14,0.932,16,1.498,28,0.833,30,0.42,33,0.016,35,0.328,45,0.247,46,0.01,47,0.01,56,1.845,60,2.389,76,2.194,99,0.394,115,1.511,134,0.857,321,1.736,324,3.143,482,2.862,587,2.15,588,2.45,589,2.532,590,2.45,591,2.645,592,2.15,593,2.15,594,3.893,596,3.31,600,3.705,607,3.402,608,2.45,609,2.645,612,5.263,613,1.921,614,2.15,615,4.558,616,2.645,617,4.219,618,2.645,619,4.789,620,2.645,621,4.219,622,1.921,623,3.402,624,2.645,625,2.645,626,3.944,627,2.645,628,2.288,629,2.645,630,3.672,631,3.672,632,2.645,633,2.645,634,2.15,635,2.15,636,4.219,637,3.672,769,4.463,770,3.709,771,3.709]],["title/interfaces/IEntityAccessorOptions.html",[186,0.705,772,2.574]],["body/interfaces/IEntityAccessorOptions.html",[3,0.167,4,0.167,5,0.148,13,0.186,14,1.031,24,0.792,28,0.732,33,0.015,35,0.319,45,0.281,46,0.011,47,0.011,99,0.265,134,0.994,176,1.364,186,1.031,187,1.26,268,2.428,284,2.656,689,4.164,772,4.49,773,2.656,774,5.293,775,5.858,776,5.293,777,5.293,778,5.293,779,5.77,780,3.764,781,3.352,782,3.352,783,3.352,784,3.352,785,3.352,786,4.062,787,3.73,788,3.73,789,3.069,790,3.069,791,3.352,792,3.302,793,4.436,794,3.352]],["title/interfaces/ITypeOrmAddionalFields.html",[186,0.705,786,2.778]],["body/interfaces/ITypeOrmAddionalFields.html",[3,0.178,4,0.178,5,0.158,13,0.199,14,1.078,24,0.719,28,0.756,33,0.016,35,0.301,45,0.286,46,0.011,47,0.011,99,0.284,134,1.064,176,1.46,186,1.078,187,1.348,268,2.538,284,2.842,689,4.219,772,4.36,773,2.842,774,3.587,775,5.14,776,3.587,777,3.587,778,3.587,779,5.14,780,3.935,781,3.587,782,3.587,783,3.587,784,3.587,785,3.587,786,4.706,787,6.047,788,6.047,789,3.285,790,3.285,791,3.587,792,3.452,793,4.638,794,3.587]],["title/classes/InvalidUserException.html",[0,0.035,795,2.778]],["body/classes/InvalidUserException.html",[0,0.038,2,1.134,3,0.162,4,0.162,5,0.144,9,1.441,13,0.181,20,2.167,24,0.577,25,4.164,28,0.868,30,0.456,32,0.892,33,0.015,34,0.743,35,0.241,45,0.162,46,0.011,47,0.011,99,0.258,112,4.359,113,4.359,114,4.359,115,2.281,117,1.293,118,4.449,120,4.359,124,5.237,125,5.237,126,1.293,127,3.653,132,1.007,133,2.08,134,1.293,135,1.848,422,3.307,795,5.333,796,5.462,797,3.633,798,5.598,799,6.303,800,5.598,801,4.192,802,4.192,803,5.824,804,4.192,805,4.863]],["title/classes/OAuth2Request.html",[0,0.035,79,1.823]],["body/classes/OAuth2Request.html",[0,0.043,2,0.687,3,0.098,4,0.098,5,0.087,7,2.081,9,2.582,13,0.11,14,0.707,19,2.339,21,2.756,24,0.728,28,0.896,30,0.546,33,0.015,34,0.89,35,0.326,45,0.098,46,0.007,47,0.007,56,2.401,60,1.994,72,2.785,79,1.828,85,3.525,93,2.785,94,4.624,99,0.293,137,2.785,190,2.41,195,4.335,239,2.785,248,1.664,321,1.19,324,2.845,336,3.293,443,1.92,455,4.484,476,4.121,482,2.784,493,3.041,596,2.023,608,2.58,613,3.543,614,1.473,622,1.316,640,4.106,641,4.99,678,3.384,686,2.58,719,3.384,792,2.264,803,4.93,805,4.182,806,5.928,807,2.203,808,3.384,809,2.58,810,4.755,811,5.218,812,5.268,813,3.905,814,2.542,815,3.384,816,2.542,817,5.758,818,5.336,819,5.336,820,4.624,821,5.336,822,5.336,823,5.336,824,4.755,825,3.905,826,5.336,827,2.542,828,2.542,829,3.905,830,6.533,831,2.542,832,2.542,833,2.542,834,6.079,835,2.542,836,2.542,837,3.905,838,2.542,839,2.785,840,3.384,841,3.384,842,2.542,843,2.542,844,4.755,845,5.928,846,2.542]],["title/classes/OAuth2Response.html",[0,0.035,313,2.018]],["body/classes/OAuth2Response.html",[0,0.037,2,0.75,3,0.107,4,0.107,5,0.095,7,2.618,9,2.504,11,4.836,12,1.559,13,0.12,14,0.755,17,2.78,21,3.891,23,4.056,24,0.517,26,1.043,28,0.892,30,0.532,32,0.442,33,0.015,34,0.835,35,0.32,36,1.832,45,0.107,46,0.008,47,0.008,56,2.253,58,3.249,60,2.35,76,1.182,85,2.756,93,2.975,99,0.257,133,1.975,137,2.975,190,3.443,195,2.975,215,4.345,248,1.182,313,2.161,321,1.298,335,3.616,455,3.249,482,3.184,535,2.159,613,3.379,614,1.607,686,3.687,792,3.235,808,3.616,809,2.756,811,4.896,812,6.24,815,5.186,820,3.616,839,2.975,840,3.616,841,3.616,845,5.449,847,5.818,848,2.403,849,6.713,850,6.713,851,5.016,852,4.172,853,3.616,854,4.172,855,2.773,856,4.172,857,4.172,858,4.172,859,4.172,860,2.773,861,2.773,862,2.773,863,2.773,864,4.172,865,4.172,866,3.616,867,3.616,868,4.172,869,2.773,870,4.172,871,2.773,872,2.773,873,2.773,874,2.773,875,2.773]],["title/interfaces/Oauth2GrantStrategyInterface.html",[186,0.705,432,2.018]],["body/interfaces/Oauth2GrantStrategyInterface.html",[3,0.155,4,0.155,5,0.138,9,1.379,13,0.173,24,0.56,30,0.443,32,0.866,33,0.015,34,0.722,35,0.285,45,0.155,46,0.01,47,0.01,53,2.546,62,2.972,69,2.966,79,3.407,99,0.38,106,2.194,107,2.194,117,1.255,126,1.255,133,2.181,134,1.255,154,2.367,186,1.116,187,1.174,191,3.59,207,4.232,208,3.829,216,4.232,294,3.59,307,4.188,313,2.077,314,2.475,315,2.475,336,3.353,432,2.815,433,4.072,437,2.65,439,3.59,443,3.395,448,2.194,543,3.875,754,4.71,876,4.072,877,3.476,878,5.435,879,5.435,880,5.435,881,4.232,882,5.435,883,4.011,884,4.71,885,4.011,886,5.435,887,4.71]],["title/injectables/Oauth2GrantStrategyRegistry.html",[138,1.286,316,2.404]],["body/injectables/Oauth2GrantStrategyRegistry.html",[0,0.044,3,0.103,4,0.103,5,0.091,9,0.913,13,0.115,14,0.731,16,0.522,24,0.638,26,0.664,28,0.56,30,0.524,32,0.985,33,0.016,34,0.821,35,0.311,45,0.156,46,0.008,47,0.008,53,2.452,62,1.453,69,2.62,76,1.721,79,3.009,96,3.5,99,0.396,106,1.453,107,1.453,117,0.933,126,1.356,132,0.638,133,2.041,134,1.261,135,1.333,138,1.333,140,1.376,143,2.412,154,1.956,175,2.311,176,1.28,177,1.721,180,2.492,190,2.492,197,4.816,200,2.668,207,5.389,208,3.404,248,1.721,250,1.755,264,3.015,288,1.755,307,3.712,313,1.376,314,1.639,315,1.639,316,2.492,336,2.492,360,4.41,432,2.531,433,3.228,437,1.755,439,1.755,443,2.403,448,1.453,545,2.88,652,3.145,686,2.668,881,3.145,884,3.5,888,2.069,889,4.887,890,4.039,891,4.887,892,4.039,893,2.656,894,6.185,895,4.039,896,2.656,897,4.039,898,5.997,899,2.656,900,4.039,901,2.656,902,4.039,903,2.656,904,4.039,905,2.656,906,4.039,907,2.302,908,3.5,909,4.887,910,1.755,911,2.656,912,2.069,913,2.069,914,2.656,915,3.485,916,2.656,917,2.656,918,2.656,919,2.656,920,2.656,921,2.656,922,2.656,923,5.46,924,4.039,925,4.039,926,2.656,927,2.656,928,2.656]],["title/interfaces/Oauth2OptionsFactoryInterface.html",[186,0.705,929,3.034]],["body/interfaces/Oauth2OptionsFactoryInterface.html",[3,0.216,4,0.216,5,0.192,13,0.241,30,0.455,33,0.015,45,0.216,46,0.013,47,0.013,99,0.344,117,1.55,126,1.289,154,2.405,186,1.01,187,1.633,235,4.757,268,2.86,876,4.435,929,5.227,930,4.836,931,7.471,932,5.58,933,5.58,934,5.58]],["title/interfaces/Oauth2PayloadInterface.html",[186,0.705,222,2.404]],["body/interfaces/Oauth2PayloadInterface.html",[3,0.177,4,0.177,5,0.157,7,1.787,9,1.576,12,2.218,13,0.198,14,1.075,16,1.295,17,2.967,20,2.48,28,0.754,33,0.015,35,0.329,45,0.23,46,0.011,47,0.011,49,2.967,53,2.394,99,0.282,166,2.373,167,2.373,186,0.83,187,1.341,195,3.268,222,3.663,361,3.569,422,3.699,531,3.028,534,3.922,541,4.966,545,3.268,546,3.569,547,5.144,548,3.971,686,3.922,743,4.233,781,3.569,876,3.028,887,3.971,935,5.936,936,5.936,937,5.936,938,3.971,939,4.583,940,4.583]],["title/interfaces/Oauth2StrategyOptions.html",[186,0.705,941,2.778]],["body/interfaces/Oauth2StrategyOptions.html",[0,0.035,3,0.152,4,0.152,5,0.135,13,0.17,14,0.972,16,0.775,28,0.615,33,0.016,35,0.329,45,0.236,46,0.01,47,0.01,99,0.423,132,0.947,134,1.635,138,1.772,176,2.244,186,0.713,187,1.153,255,2.512,257,3.396,288,2.603,344,2.431,360,5.049,432,2.04,443,1.937,763,4.046,792,2.284,910,3.547,912,3.068,913,3.068,915,4.676,941,4.354,942,2.809,943,5.292,944,3.414,945,5.292,946,3.414,947,5.292,948,3.414,949,3.414,950,3.068,951,3.414,952,3.414,953,3.414,954,3.414,955,3.414,956,3.414,957,3.414,958,3.414,959,3.414,960,3.414,961,3.414,962,3.414,963,3.414,964,3.414,965,3.414,966,5.292,967,3.414,968,3.414,969,5.292,970,4.181,971,3.414]],["title/classes/PaginationMeta.html",[0,0.035,972,2.404]],["body/classes/PaginationMeta.html",[0,0.046,2,0.991,3,0.142,4,0.142,5,0.126,13,0.158,14,0.924,16,1.555,24,0.378,26,1.276,30,0.579,32,0.583,33,0.016,34,0.486,35,0.312,45,0.198,46,0.01,47,0.01,56,2.481,60,1.369,99,0.362,186,0.663,240,2.959,268,2.175,321,1.714,324,1.714,482,3.136,589,2.511,592,3.406,593,3.406,596,3.044,613,4.014,622,1.897,634,3.406,635,2.959,689,3.477,809,3.373,972,4.125,973,2.612,974,4.576,975,4.576,976,4.937,977,4.576,978,3.663,979,4.2,980,5.105,981,3.663,982,3.663,983,3.663,984,3.663,985,3.663,986,2.852,987,2.852,988,2.852,989,2.852,990,2.852,991,2.852,992,2.852,993,2.852,994,4.576,995,2.852,996,2.852,997,2.852]],["title/interfaces/PaginationMetaParameters.html",[186,0.705,979,2.574]],["body/interfaces/PaginationMetaParameters.html",[0,0.051,3,0.165,4,0.165,5,0.147,13,0.184,14,1.026,16,1.477,26,1.068,33,0.016,35,0.274,45,0.219,46,0.011,47,0.011,60,1.597,99,0.392,186,0.774,187,1.251,240,3.286,268,3.005,321,2,324,2,482,3.152,589,3.333,592,2.477,593,2.477,596,3.295,613,3.937,622,2.213,634,3.688,635,3.286,689,3.101,809,3.746,972,4.182,973,3.047,974,3.327,975,3.327,976,5.274,977,3.327,979,4.204,986,3.327,987,3.327,988,3.327,989,3.327,990,3.327,991,3.327,992,3.327,993,3.327,994,4.955,995,3.327,996,3.327,997,3.327]],["title/classes/PasswordStrategy.html",[0,0.035,358,2.574]],["body/classes/PasswordStrategy.html",[0,0.03,2,0.893,3,0.128,4,0.128,5,0.113,12,1.233,13,0.142,16,1.092,17,1.406,24,0.572,26,1.517,28,0.378,30,0.453,32,0.884,33,0.016,34,0.737,35,0.239,45,0.128,46,0.009,47,0.009,49,2.021,53,2.301,60,1.233,62,1.805,69,2.809,79,3.227,99,0.443,106,1.805,107,1.805,117,1.095,126,1.095,132,0.793,133,1.832,134,1.282,135,1.565,143,2.61,154,2.174,166,1.709,167,1.709,173,2.021,175,2.074,176,1.76,177,2.021,187,0.966,208,3.218,221,1.545,307,3.516,313,2.456,314,2.036,315,2.036,318,2.708,327,2.598,329,2.036,347,1.913,358,3.133,377,4.009,422,1.623,432,2.875,433,3.667,434,2.353,435,5.493,437,2.18,439,2.18,441,2.18,442,2.57,443,1.623,444,2.57,445,2.749,446,2.57,447,2.353,448,1.805,450,3.382,451,2.57,452,2.353,453,2.353,454,2.57,457,2.86,458,2.86,459,4.811,462,2.86,463,2.86,464,2.86,465,2.86,466,2.86,467,2.86,468,2.86,469,2.86,470,3.693,471,3.693,472,2.86,998,2.86,999,6.068,1000,3.301,1001,3.301,1002,3.301,1003,3.301,1004,3.301,1005,3.301,1006,3.301,1007,3.301,1008,3.301]],["title/entities/PermissionEntity.html",[48,1.587,396,2.258]],["body/entities/PermissionEntity.html",[0,0.039,3,0.169,4,0.169,5,0.15,13,0.189,14,1.043,28,0.784,30,0.558,33,0.015,35,0.295,45,0.169,46,0.011,47,0.011,48,1.784,50,1.954,56,2.452,63,4.521,99,0.397,100,2.702,102,4.487,104,2.049,115,1.784,233,3.152,354,3.152,356,3.41,396,3.34,397,4.222,416,4.255,417,4.255,421,6.161,500,4.109,578,5.536,581,3.795,582,4.487,584,4.109,1009,5.07,1010,3.795,1011,4.487,1012,5.329,1013,4.379,1014,5.762,1015,4.379,1016,3.41,1017,4.379,1018,4.487,1019,4.379,1020,4.487,1021,3.41,1022,3.122,1023,4.379,1024,4.379]],["title/entities/PermissionGroupEntity.html",[48,1.587,397,2.404]],["body/entities/PermissionGroupEntity.html",[0,0.042,3,0.18,4,0.18,5,0.16,13,0.201,14,1.086,24,0.618,28,0.803,30,0.541,33,0.015,35,0.286,45,0.18,46,0.011,47,0.011,48,1.897,50,2.077,56,2.377,63,4.628,99,0.369,100,2.872,104,2.179,115,1.897,233,2.546,396,3.476,397,3.7,416,4.382,417,4.382,500,4.276,578,4.669,582,4.669,584,4.276,839,4.73,1009,4.995,1011,4.669,1012,5.455,1016,3.625,1018,4.669,1020,4.669,1021,3.625,1022,4.995,1025,4.034,1026,4.655,1027,4.655,1028,4.655,1029,4.034,1030,4.655]],["title/controllers/QueryController.html",[300,2.574,1031,2.778]],["body/controllers/QueryController.html",[0,0.022,3,0.093,4,0.093,5,0.083,7,0.939,13,0.104,16,0.473,20,2.044,24,0.662,28,0.893,30,0.523,32,1.05,33,0.016,34,0.852,35,0.291,45,0.093,46,0.007,47,0.007,50,1.671,56,2.224,99,0.395,117,0.865,126,1.482,132,0.578,133,0.794,134,1.297,135,1.963,143,2.319,144,1.939,145,1.716,154,1.858,176,2.24,177,2.209,234,2.916,240,3.005,264,2.835,268,2.735,288,1.59,300,2.474,302,1.59,309,3.245,310,4.492,312,2.916,320,2.086,321,1.126,322,2.086,324,1.126,330,5.379,587,3.005,589,2.549,596,1.247,668,3.245,749,2.835,757,1.874,763,2.31,768,5.759,881,1.874,972,2.835,976,3.696,1031,2.67,1032,2.086,1033,3.744,1034,3.744,1035,4.595,1036,4.595,1037,3.245,1038,3.982,1039,2.407,1040,4.595,1041,2.407,1042,2.407,1043,3.744,1044,2.407,1045,2.407,1046,2.407,1047,2.407,1048,2.407,1049,2.407,1050,2.407,1051,2.407,1052,2.407,1053,2.407,1054,2.086,1055,2.407,1056,2.407,1057,2.407,1058,2.407,1059,2.407,1060,2.407,1061,4.595,1062,2.407,1063,2.407,1064,2.407,1065,2.086,1066,3.744,1067,1.716,1068,2.916,1069,2.407,1070,2.916,1071,2.407,1072,2.407,1073,1.874,1074,1.874,1075,2.407,1076,2.407,1077,2.407,1078,2.407,1079,2.407,1080,5.616,1081,2.916,1082,4.595,1083,3.744,1084,3.744,1085,4.492,1086,3.744,1087,3.744,1088,3.744,1089,3.744,1090,3.744,1091,2.407,1092,5.184,1093,2.407,1094,3.744,1095,2.407,1096,2.407,1097,5.184,1098,3.744,1099,2.407,1100,2.407,1101,3.744,1102,2.407,1103,2.407,1104,2.407,1105,2.407,1106,2.407,1107,2.407]],["title/modules/QueryModule.html",[255,1.823,285,2.778]],["body/modules/QueryModule.html",[0,0.042,3,0.18,4,0.18,5,0.159,15,2.173,24,0.479,30,0.379,32,0.739,33,0.016,34,0.617,35,0.2,36,3.067,45,0.18,46,0.011,47,0.011,99,0.465,117,1.072,118,3.694,126,1.072,132,1.116,134,1.072,187,1.359,236,4.057,250,3.067,255,3.1,257,2.405,265,3.615,266,4.661,268,2.551,269,5.159,284,2.865,285,4.724,290,3.311,293,2.691,294,3.955,295,3.615,299,3.067,302,3.067,366,3.615,744,4.269,745,4.024,749,4.088,757,3.615,1031,4.269,1108,4.643,1109,4.643,1110,5.986,1111,4.269,1112,4.643]],["title/interfaces/QueryOptions.html",[186,0.705,236,2.258]],["body/interfaces/QueryOptions.html",[3,0.224,4,0.224,5,0.199,13,0.25,14,1.244,24,0.708,28,0.839,33,0.015,35,0.25,45,0.224,46,0.013,47,0.013,186,1.05,187,1.697,236,3.982,1113,4.516,1114,5.026,1115,7.567]],["title/classes/QueryPaginationResource.html",[0,0.035,1067,2.778]],["body/classes/QueryPaginationResource.html",[0,0.049,2,1.078,3,0.154,4,0.154,5,0.137,13,0.172,14,0.979,16,1.516,24,0.411,26,1.352,30,0.501,32,0.635,33,0.016,34,0.529,35,0.284,45,0.209,46,0.01,47,0.01,56,1.938,60,2.022,99,0.378,186,0.721,240,3.993,268,2.305,321,1.865,324,1.865,482,2.935,589,2.66,592,2.309,593,2.309,596,3.181,613,3.882,622,2.063,634,3.56,635,3.136,689,2.959,809,4.551,811,3.103,972,4.562,973,2.841,974,3.103,975,3.103,976,4.698,977,3.103,979,3.574,986,3.103,987,3.103,988,3.103,989,3.103,990,3.103,991,3.103,992,3.103,993,3.103,994,5.658,995,4.213,996,3.103,997,3.103,1067,2.841,1116,5.41,1117,3.984,1118,3.984]],["title/injectables/QueryService.html",[138,1.286,749,2.404]],["body/injectables/QueryService.html",[0,0.035,3,0.099,4,0.099,5,0.088,13,0.11,14,0.71,15,3.554,16,0.503,24,0.675,26,0.98,28,0.881,30,0.547,32,1.042,33,0.016,34,0.869,35,0.309,45,0.099,46,0.007,47,0.007,56,0.916,62,2.145,99,0.422,104,1.196,117,0.906,126,1.465,132,0.614,134,1.512,138,1.295,140,1.324,150,2.766,164,1.482,175,2.158,176,2.209,187,0.748,221,1.196,236,3.102,238,3.562,264,1.577,268,2.281,281,2.215,284,2.42,626,2.945,749,2.42,763,2.945,768,4.94,774,1.991,776,1.991,777,1.991,778,1.991,780,3.153,789,3.817,915,3.403,1037,3.399,1054,3.399,1065,2.215,1081,4.168,1111,1.823,1119,2.215,1120,4.773,1121,3.923,1122,4.773,1123,3.923,1124,3.923,1125,3.923,1126,3.923,1127,2.557,1128,6.344,1129,3.923,1130,3.923,1131,2.557,1132,2.557,1133,2.557,1134,3.923,1135,2.557,1136,3.923,1137,2.557,1138,2.557,1139,6.093,1140,3.923,1141,2.557,1142,3.923,1143,2.557,1144,2.557,1145,3.923,1146,2.557,1147,2.557,1148,2.557,1149,2.557,1150,5.353,1151,2.215,1152,3.923,1153,2.557,1154,2.557,1155,4.773,1156,3.923,1157,2.557,1158,2.557,1159,2.557,1160,2.557,1161,3.923,1162,2.557,1163,2.557,1164,2.557,1165,4.773,1166,3.923,1167,2.557,1168,2.557,1169,2.557,1170,3.923,1171,2.557,1172,2.557,1173,2.557,1174,2.557,1175,2.557,1176,2.557,1177,2.557,1178,2.557,1179,2.557,1180,2.557]],["title/classes/RefreshTokenStrategy.html",[0,0.035,359,2.574]],["body/classes/RefreshTokenStrategy.html",[0,0.032,2,0.959,3,0.137,4,0.137,5,0.122,12,1.325,13,0.153,16,1.136,24,0.595,26,1.566,30,0.471,32,0.92,33,0.016,34,0.767,35,0.249,45,0.137,46,0.009,47,0.009,49,1.511,53,2.356,60,1.325,62,1.939,69,2.868,79,3.294,99,0.45,106,1.939,107,1.939,117,1.152,126,1.152,127,2.055,132,0.852,133,1.906,134,1.152,139,3.428,143,2.672,154,2.246,166,1.836,167,1.836,170,3.246,173,2.126,175,2.158,176,1.124,177,1.511,187,1.038,205,2.761,208,3.347,212,3.072,221,1.659,225,2.761,307,3.428,313,1.836,314,2.187,315,2.187,318,2.797,327,2.702,329,2.187,347,2.055,359,3.297,432,2.991,433,3.815,434,2.528,435,5.596,437,2.342,439,2.342,441,2.342,442,2.761,443,1.743,444,2.761,445,2.055,446,2.761,447,2.528,448,1.939,450,3.558,451,2.761,452,2.528,453,2.528,454,2.761,1181,5.431,1182,3.545,1183,3.545,1184,3.545,1185,3.545,1186,3.545,1187,3.545,1188,3.545]],["title/interfaces/ResourceDictonary.html",[186,0.705,238,2.404]],["body/interfaces/ResourceDictonary.html",[3,0.211,4,0.211,5,0.187,28,0.758,30,0.444,33,0.015,45,0.256,46,0.013,47,0.013,99,0.439,115,2.218,132,1.308,186,1.197,187,1.593,230,3.596,231,4.238,232,4.717,233,3.617,234,5.149,235,4.369,236,3.833,237,4.717,238,4.08,239,4.715,240,3.833,1189,5.443,1190,5.443]],["title/entities/RoleEntity.html",[48,1.587,354,2.131]],["body/entities/RoleEntity.html",[0,0.042,3,0.182,4,0.182,5,0.162,13,0.203,14,1.093,24,0.622,28,0.806,30,0.544,33,0.015,35,0.287,45,0.182,46,0.011,47,0.011,48,1.917,50,2.099,56,2.389,63,4.647,99,0.372,100,2.903,104,2.202,115,1.917,233,2.573,354,3.302,396,3.499,416,4.404,417,4.404,500,4.305,584,4.305,839,4.754,1009,5.015,1011,4.701,1012,5.477,1016,3.664,1018,4.701,1020,4.701,1021,3.664,1022,4.305,1029,4.077,1191,4.077,1192,4.705,1193,6.037,1194,4.705,1195,4.705,1196,4.705]],["title/classes/SimpleQueryRequest.html",[0,0.035,589,1.916]],["body/classes/SimpleQueryRequest.html",[0,0.061,2,0.949,3,0.136,4,0.136,5,0.121,13,0.151,14,0.897,16,1.483,24,0.643,28,0.782,30,0.468,33,0.015,35,0.325,45,0.241,46,0.009,47,0.009,56,1.776,60,2.332,76,2.91,99,0.384,115,1.43,134,0.811,248,2.111,321,1.643,324,3.355,482,2.991,587,2.035,588,2.319,589,2.824,590,2.319,591,2.503,592,3.329,593,3.329,594,3.617,596,3.231,600,3.617,603,4.294,604,3.042,607,3.794,608,3.274,609,3.533,610,3.042,612,5.198,613,1.818,614,2.035,615,4.449,616,2.503,617,4.095,618,2.503,619,4.692,620,2.503,621,4.095,622,1.818,623,3.274,624,2.503,625,2.503,626,3.057,627,2.503,628,2.166,629,2.503,630,3.533,631,3.533,632,2.503,633,4.095,634,2.035,635,2.035,636,2.503,637,3.533,1197,4.955,1198,3.51,1199,3.51,1200,3.51,1201,3.51]],["title/classes/SortableRequest.html",[0,0.035,600,2.258]],["body/classes/SortableRequest.html",[0,0.062,2,0.995,3,0.142,4,0.142,5,0.126,13,0.159,14,0.927,16,1.496,28,0.815,30,0.417,33,0.016,35,0.328,45,0.246,46,0.01,47,0.01,56,1.835,60,2.38,76,2.51,99,0.392,115,1.499,134,0.849,248,1.567,321,1.721,324,3.133,482,2.853,587,2.132,588,2.43,589,2.518,590,2.43,591,2.623,592,2.132,593,2.132,594,3.692,596,3.298,600,3.881,607,3.383,608,2.43,609,2.623,612,5.253,613,1.905,614,2.132,615,4.541,616,2.623,617,4.2,618,2.623,619,4.774,620,2.623,621,4.2,622,1.905,623,3.891,624,2.623,625,2.623,626,3.93,627,2.623,628,3.634,629,3.651,630,3.651,631,3.651,632,2.623,633,2.623,634,2.132,635,2.132,636,2.623,637,3.651,769,3.187,1202,3.678,1203,3.678,1204,3.678]],["title/injectables/StrategyExplorer.html",[138,1.286,344,2.404]],["body/injectables/StrategyExplorer.html",[0,0.03,3,0.129,4,0.129,5,0.114,13,0.144,16,0.655,24,0.628,26,0.833,28,0.769,30,0.526,32,1.027,33,0.016,34,0.809,35,0.332,45,0.216,46,0.009,47,0.009,99,0.398,117,1.103,126,1.408,132,0.801,134,1.55,138,1.576,140,1.725,176,2.128,186,0.603,240,1.931,255,2.852,257,3.341,264,2.056,288,2.201,344,2.946,360,3.979,432,1.725,443,1.638,763,3.98,792,3.235,910,3.154,912,2.594,913,2.594,915,4.787,941,3.979,942,2.376,943,5.817,944,2.887,945,5.281,946,2.887,947,5.817,948,2.887,949,2.887,950,2.594,951,5.281,952,2.887,953,2.887,954,2.887,955,4.836,956,4.836,957,2.887,958,2.887,959,2.887,960,2.887,961,2.887,962,2.887,963,2.887,964,2.887,965,4.836,966,5.991,967,2.887,968,4.138,969,4.836,970,3.718,971,2.887,1205,4.775,1206,3.332,1207,3.332,1208,3.332,1209,3.332,1210,3.332,1211,3.332,1212,3.332,1213,3.332,1214,3.332]],["title/classes/System1705059848171.html",[0,0.035,1215,3.034]],["body/classes/System1705059848171.html",[0,0.018,2,0.536,3,0.077,4,0.077,5,0.068,13,0.086,14,0.581,15,2.558,20,2.381,23,3.473,24,0.331,28,0.227,30,0.33,32,0.511,33,0.013,34,0.726,35,0.174,45,0.077,46,0.006,47,0.006,58,4.951,59,5.745,67,4.986,72,4.534,75,4.986,76,2.553,77,3.315,80,4.986,81,3.505,85,4.201,86,4.103,88,4.986,97,4.986,99,0.122,104,0.928,117,0.742,126,0.742,143,2.132,145,2.884,154,1.666,173,1.368,177,3.292,239,4.937,248,0.845,416,4.089,417,4.089,453,5.633,475,1.719,478,1.544,483,1.719,484,1.544,487,4.986,489,5.745,490,1.719,493,1.544,495,1.719,497,1.719,501,1.719,505,1.719,507,1.719,509,1.719,510,1.544,577,4.951,1038,3.505,1215,3.62,1216,4.029,1217,1.719,1218,4.045,1219,3.211,1220,3.211,1221,1.983,1222,3.211,1223,6.19,1224,1.983,1225,3.211,1226,1.983,1227,6.629,1228,6.586,1229,4.045,1230,6.74,1231,4.649,1232,5.107,1233,6.359,1234,1.983,1235,4.045,1236,7.002,1237,4.045,1238,5.754,1239,5.991,1240,5.754,1241,4.045,1242,6.503,1243,4.045,1244,5.754,1245,5.466,1246,4.045,1247,5.107,1248,1.983,1249,4.045,1250,4.045,1251,5.466,1252,5.466,1253,1.983,1254,5.466,1255,6.629,1256,5.466,1257,5.466,1258,5.107,1259,1.983,1260,1.983,1261,5.107,1262,1.983,1263,1.983,1264,1.983,1265,1.983,1266,1.983]],["title/interfaces/UserInterface.html",[186,0.705,1267,2.574]],["body/interfaces/UserInterface.html",[3,0.214,4,0.214,5,0.19,13,0.238,14,1.208,20,2.561,28,0.912,33,0.015,35,0.309,45,0.214,46,0.013,47,0.013,186,1.001,187,1.618,805,4.92,1267,4.41,1268,4.79,1269,6.454]],["title/interfaces/UserLoaderInterface.html",[186,0.705,211,2.574]],["body/interfaces/UserLoaderInterface.html",[3,0.194,4,0.194,5,0.173,9,1.728,13,0.217,20,2.164,24,0.518,25,4.159,28,0.787,30,0.41,32,0.8,33,0.015,34,0.667,35,0.217,45,0.194,46,0.012,47,0.012,99,0.31,117,1.454,126,1.161,133,1.659,154,2.256,186,1.343,187,1.471,190,3.884,191,4.76,211,4.159,422,3.096,534,4.159,628,3.884,1267,3.32,1270,4.489,1271,4.355,1272,6.295,1273,7.205,1274,6.295,1275,5.025,1276,4.355]],["title/classes/UserPayload.html",[0,0.035,223,2.778]],["body/classes/UserPayload.html",[0,0.036,2,1.07,3,0.153,4,0.153,5,0.136,9,1.361,13,0.171,14,0.975,15,3.603,16,1.54,17,2.799,20,2.363,24,0.408,26,1.346,28,0.882,30,0.578,32,0.63,33,0.015,34,0.526,35,0.329,45,0.153,46,0.01,47,0.01,49,2.928,76,1.686,99,0.332,166,2.05,167,2.05,173,2.295,222,3.777,223,4.685,248,1.686,422,2.648,531,2.615,532,4.667,534,3.558,535,3.082,538,3.43,539,3.43,540,3.43,541,4.365,543,2.822,544,3.43,546,4.193,805,4.54,866,4.667,867,4.667,1269,5.955,1270,5.172,1277,5.385,1278,3.958,1279,5.385,1280,5.385]],["title/interfaces/UserValidatorInterface.html",[186,0.705,377,2.574]],["body/interfaces/UserValidatorInterface.html",[3,0.19,4,0.19,5,0.169,9,1.689,13,0.212,24,0.507,30,0.401,32,0.783,33,0.015,34,0.653,45,0.19,46,0.012,47,0.012,99,0.303,117,1.433,126,1.135,133,2.049,134,1.135,154,2.224,186,0.89,187,1.438,191,4.1,202,3.826,208,4.143,336,3.83,377,4.1,422,3.052,795,3.504,803,5.861,805,4.1,853,5.379,1267,4.495,1270,4.426,1276,4.258,1281,4.258,1282,6.207,1283,6.207,1284,6.207,1285,6.207,1286,4.914,1287,6.207]],["title/coverage.html",[1288,4.617]],["body/coverage.html",[0,0.068,1,1.538,5,0.074,6,1.87,7,1.903,8,2.675,12,1.284,33,0.015,35,0.093,46,0.007,47,0.007,48,2.313,49,0.919,51,1.87,52,1.87,69,1.4,79,1.01,109,1.425,110,1.87,111,2.675,135,0.712,138,2.04,139,1.18,141,1.87,142,1.87,170,1.117,186,1.278,188,1.87,189,2.675,203,1.538,204,1.87,205,2.675,211,1.425,222,1.331,223,1.538,224,1.538,230,1.425,231,2.675,236,1.251,238,1.331,241,1.68,242,1.87,268,0.919,283,1.68,293,1.251,300,2.269,301,1.538,303,1.87,313,1.117,316,1.331,318,0.963,327,1.01,339,4.959,343,2.449,344,1.331,345,1.68,349,1.68,351,1.425,352,1.425,354,1.18,357,1.425,358,1.425,359,1.425,362,1.68,363,1.68,364,1.68,365,1.68,367,1.68,368,1.68,369,1.68,377,1.425,390,1.425,394,1.68,396,1.251,397,1.331,399,1.87,407,1.68,408,1.68,409,1.68,410,1.68,425,1.538,426,1.87,430,1.87,431,1.87,432,1.117,441,1.425,443,1.689,445,1.251,473,2.977,520,1.425,521,1.87,530,2.675,531,2.828,549,1.87,575,2.977,576,2.977,577,1.68,587,1.251,588,3.224,589,1.061,594,1.251,600,1.251,607,2.269,638,3.224,639,1.87,650,1.87,684,1.538,685,1.87,698,1.87,743,1.538,744,1.538,746,1.87,749,1.331,772,1.425,773,2.641,780,1.425,786,1.538,790,1.538,795,1.538,796,1.87,797,1.87,806,1.87,807,1.87,847,1.87,848,1.87,876,2.828,877,1.87,888,1.68,910,1.425,929,1.68,930,1.87,941,1.538,942,3.052,972,1.331,973,3.052,979,1.425,998,1.87,1009,3.052,1010,1.87,1022,1.538,1025,1.87,1031,1.538,1032,1.87,1067,1.538,1068,1.68,1070,1.68,1073,1.68,1074,1.68,1111,1.538,1113,1.68,1114,1.87,1119,1.87,1181,1.87,1191,1.87,1215,1.68,1216,1.87,1217,1.87,1228,1.87,1267,1.425,1268,1.87,1270,3.052,1271,1.87,1281,1.87,1288,1.87,1289,2.158,1290,2.158,1291,8.015,1292,6.368,1293,7.702,1294,1.87,1295,7.514,1296,3.435,1297,4.28,1298,4.28,1299,2.158,1300,2.158,1301,4.229,1302,4.88,1303,1.87,1304,1.87,1305,1.87,1306,1.87,1307,4.88,1308,1.87,1309,2.158,1310,3.435,1311,2.158,1312,2.158,1313,6.18,1314,4.28,1315,3.435,1316,2.158,1317,2.158,1318,2.158,1319,4.617,1320,4.88,1321,3.435,1322,2.158,1323,2.158,1324,3.435,1325,2.158,1326,3.435,1327,2.158,1328,2.158,1329,2.977,1330,1.87,1331,2.158,1332,1.87,1333,1.87,1334,2.977,1335,2.158,1336,2.158,1337,2.158]],["title/dependencies.html",[384,3.343,1338,2.815]],["body/dependencies.html",[0,0.058,33,0.015,46,0.012,47,0.012,132,1.261,164,3.749,215,5.036,217,5.605,219,6.341,220,5.605,250,3.468,347,3.043,384,4.612,614,3.043,622,2.718,705,4.549,756,4.549,970,4.087,1339,6.468,1340,6.468,1341,6.468,1342,6.468,1343,5.249,1344,5.249,1345,5.249,1346,5.249,1347,7.01,1348,5.249,1349,5.249,1350,5.249]],["title/miscellaneous/enumerations.html",[1351,2.004,1352,4.063]],["body/miscellaneous/enumerations.html",[13,0.238,33,0.015,46,0.013,47,0.013,53,2.291,248,3.17,361,4.291,422,3.276,531,4.401,534,3.641,541,4.751,623,4.401,773,3.4,775,5.188,782,4.291,783,4.291,784,4.291,785,4.291,876,3.641,938,4.775,1113,4.291,1351,3.4,1352,4.775,1353,4.291,1354,4.291,1355,5.511,1356,6.662,1357,6.662,1358,6.662]],["title/index.html",[13,0.14,1359,3.248,1360,3.248]],["body/index.html",[33,0.014,46,0.014,47,0.014]],["title/modules.html",[257,2.759]],["body/modules.html",[33,0.013,46,0.013,47,0.013,256,4.638,257,3.084,282,4.247,285,4.247,383,4.247,908,6.414,1361,7.401,1362,7.633,1363,5.956,1364,5.956,1365,5.956]],["title/overview.html",[1366,4.617]],["body/overview.html",[2,1.486,33,0.014,46,0.013,47,0.013,50,2.451,140,2.845,187,1.608,253,4.278,255,2.571,257,2.845,293,3.184,299,3.629,302,3.629,324,2.571,383,5.427,384,3.917,385,4.761,386,4.761,387,4.761,388,4.761,389,4.761,390,5.171,391,5.763,392,4.761,393,4.761,743,3.917,1308,4.761,1319,4.761,1366,4.761,1367,5.494,1368,5.494,1369,5.494,1370,5.494]],["title/properties.html",[14,0.849,1338,2.815]],["body/properties.html",[9,1.962,14,1.033,33,0.015,46,0.013,47,0.013,150,3.307,312,4.443,1371,5.706,1372,5.706,1373,7.269,1374,5.706,1375,5.706,1376,5.706,1377,5.706,1378,5.706,1379,6.803,1380,6.803,1381,6.803,1382,5.706,1383,5.706,1384,5.706,1385,5.706]],["title/miscellaneous/typealiases.html",[1351,2.004,1386,4.689]],["body/miscellaneous/typealiases.html",[13,0.248,28,0.782,33,0.014,35,0.314,46,0.013,47,0.013,235,4.512,689,3.141,773,3.544,779,5.318,789,4.87,888,4.472,898,5.918,907,4.977,1351,3.544,1353,5.318,1354,4.472,1387,5.743,1388,5.743,1389,6.83,1390,5.743]],["title/miscellaneous/variables.html",[1351,2.004,1391,4.063]],["body/miscellaneous/variables.html",[7,1.843,13,0.109,28,0.795,33,0.016,34,0.515,35,0.321,46,0.007,47,0.007,60,1.448,76,3.269,127,2.246,134,0.895,135,1.279,139,1.376,170,2.007,176,1.498,180,2.391,238,2.391,248,3.269,268,1.651,283,3.018,293,2.246,294,2.56,316,1.553,318,1.729,327,1.178,339,1.96,344,1.553,345,3.018,349,3.68,351,1.663,352,1.663,357,1.663,358,1.663,359,1.663,362,3.018,363,3.018,364,3.018,365,3.018,366,3.018,367,3.018,368,3.018,369,3.018,407,3.018,408,3.018,409,3.018,410,3.018,418,2.181,420,2.181,422,1.238,441,2.56,443,1.906,590,2.56,594,1.459,600,1.459,626,3.537,628,1.553,763,2.916,772,1.663,773,1.553,780,3.122,790,2.763,791,1.96,792,2.739,793,3.018,794,1.96,910,2.56,942,1.794,950,1.96,1068,3.018,1070,3.018,1073,3.018,1074,3.018,1081,3.018,1085,3.358,1111,2.763,1151,3.358,1294,2.181,1301,2.181,1303,2.181,1304,3.358,1305,2.181,1306,3.358,1329,2.181,1330,2.181,1332,2.181,1333,3.358,1334,2.181,1351,1.553,1353,1.96,1354,1.96,1391,2.181,1392,2.517,1393,3.875,1394,6.308,1395,6.681,1396,2.517,1397,2.517,1398,2.517,1399,2.517,1400,2.517,1401,3.875,1402,5.308,1403,3.875,1404,2.517,1405,3.875,1406,3.875,1407,6.055,1408,3.875,1409,2.517,1410,5.308,1411,2.517,1412,2.517,1413,2.517,1414,2.517,1415,3.875,1416,2.517,1417,2.517,1418,2.517,1419,2.517,1420,2.517,1421,2.517,1422,3.875,1423,2.517,1424,2.517]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["00:00:00",{"_index":821,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["1",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"overview.html":{}}}],["1.0.0",{"_index":1371,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["1/10",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":607,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"coverage.html":{}}}],["10.0.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":471,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{}}}],["1000).gettime",{"_index":683,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(200)@isoptional",{"_index":610,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/SimpleQueryRequest.html":{}}}],["11",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1012,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["14",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1370,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["1970",{"_index":824,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["1970.'})@expose({name",{"_index":832,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":604,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/SimpleQueryRequest.html":{}}}],["2",{"_index":1368,"title":{},"body":{"overview.html":{}}}],["2.4.1",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":609,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["25",{"_index":1319,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["28",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":484,"title":{},"body":{"entities/ClientEntity.html":{},"classes/CreateClientHandler.html":{},"classes/System1705059848171.html":{}}}],["365",{"_index":726,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["4",{"_index":1367,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":925,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["5/5",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":91,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{}}}],["6",{"_index":1308,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["6/8",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["7200",{"_index":510,"title":{},"body":{"entities/ClientEntity.html":{},"classes/CreateClientHandler.html":{},"classes/System1705059848171.html":{}}}],["75",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1369,"title":{},"body":{"overview.html":{}}}],["80",{"_index":64,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["_",{"_index":1148,"title":{},"body":{"injectables/QueryService.html":{}}}],["_.defaults(currentoptions",{"_index":1171,"title":{},"body":{"injectables/QueryService.html":{}}}],["__oauth2grantstrategy__",{"_index":950,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"miscellaneous/variables.html":{}}}],["_auth",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["_query/:entity",{"_index":1076,"title":{},"body":{"controllers/QueryController.html":{}}}],["_resources",{"_index":1120,"title":{},"body":{"injectables/QueryService.html":{}}}],["_schema",{"_index":1155,"title":{},"body":{"injectables/QueryService.html":{}}}],["_schema.create",{"_index":1160,"title":{},"body":{"injectables/QueryService.html":{}}}],["_schema.metadata.columns",{"_index":1159,"title":{},"body":{"injectables/QueryService.html":{}}}],["_schema.metadata.propertiesmap",{"_index":1157,"title":{},"body":{"injectables/QueryService.html":{}}}],["a.concat(b",{"_index":962,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["access",{"_index":12,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["access_token",{"_index":58,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/OAuth2Response.html":{},"classes/System1705059848171.html":{}}}],["access_token_expires_at",{"_index":67,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/System1705059848171.html":{}}}],["access_token_lifetime",{"_index":483,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["accessable",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessor.decorator",{"_index":1072,"title":{},"body":{"controllers/QueryController.html":{}}}],["accessor.decorator.ts",{"_index":1333,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["accessorrole",{"_index":779,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":1197,"title":{},"body":{"classes/SimpleQueryRequest.html":{}}}],["accesstoken",{"_index":17,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/UserPayload.html":{}}}],["accesstoken.accesstoken",{"_index":467,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.accesstokenexpiresat",{"_index":229,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["accesstoken.accesstokenexpiresat.gettime",{"_index":469,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.client",{"_index":670,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstoken.createdat",{"_index":671,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstoken.createdfrom",{"_index":672,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstoken.refreshtoken",{"_index":468,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.refreshtokenexpiresat.gettime",{"_index":472,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["accesstoken.scope",{"_index":674,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["accesstokencreatedevent",{"_index":1,"title":{"classes/AccessTokenCreatedEvent.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/CreateAccessTokenHandler.html":{},"coverage.html":{}}}],["accesstokenentity",{"_index":49,"title":{"entities/AccessTokenEntity.html":{}},"body":{"entities/AccessTokenEntity.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/UserPayload.html":{},"coverage.html":{}}}],["accesstokenexp",{"_index":849,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["accesstokenexpiresat",{"_index":18,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{}}}],["accesstokenlifetime",{"_index":474,"title":{},"body":{"entities/ClientEntity.html":{},"classes/CreateClientCommand.html":{}}}],["accesstokennotfoundexception",{"_index":109,"title":{"classes/AccessTokenNotFoundException.html":{}},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"coverage.html":{}}}],["accesstokennotfoundexception.withaccesstoken(accesstoken",{"_index":181,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["accesstokennotfoundexception.withrefreshtoken(refreshtoken",{"_index":182,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["accesstokenrepository",{"_index":139,"title":{"injectables/AccessTokenRepository.html":{}},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstokenrepositoryinterface",{"_index":170,"title":{"interfaces/AccessTokenRepositoryInterface.html":{}},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstokenrequired",{"_index":1068,"title":{},"body":{"controllers/QueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accesstokenstrategy",{"_index":203,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["acess",{"_index":857,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["action",{"_index":1251,"title":{},"body":{"classes/System1705059848171.html":{}}}],["admin",{"_index":1151,"title":{},"body":{"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["admin.config",{"_index":281,"title":{},"body":{"modules/AdminModule.html":{},"injectables/QueryService.html":{}}}],["admin_field_decorator_key",{"_index":780,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminauthconfig",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminconfig",{"_index":230,"title":{"interfaces/AdminConfig.html":{}},"body":{"interfaces/AdminConfig.html":{},"modules/AdminModule.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{}}}],["administration",{"_index":1372,"title":{},"body":{"properties.html":{}}}],["administrator",{"_index":424,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["adminloader",{"_index":241,"title":{"injectables/AdminLoader.html":{}},"body":{"injectables/AdminLoader.html":{},"coverage.html":{}}}],["adminmodule",{"_index":256,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules.html":{}}}],["adminoptions",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adminrolename",{"_index":1115,"title":{},"body":{"interfaces/QueryOptions.html":{}}}],["aliases",{"_index":1387,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"classes/OAuth2Response.html":{}}}],["always",{"_index":867,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/UserPayload.html":{}}}],["api",{"_index":94,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/OAuth2Request.html":{}}}],["apibearerauth",{"_index":1066,"title":{},"body":{"controllers/QueryController.html":{}}}],["apiproperty",{"_index":613,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["apiproperty({type",{"_index":811,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/QueryPaginationResource.html":{}}}],["apipropertyoptional",{"_index":612,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["apipropertyoptional({minimum",{"_index":603,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/SimpleQueryRequest.html":{}}}],["apipropertyoptional({type",{"_index":595,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["apipropertyoptional({})@isenum(queryorder",{"_index":1203,"title":{},"body":{"classes/SortableRequest.html":{}}}],["apitags",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"controllers/QueryController.html":{}}}],["apitags('auth",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('query",{"_index":1077,"title":{},"body":{"controllers/QueryController.html":{}}}],["app_guard",{"_index":1110,"title":{},"body":{"modules/QueryModule.html":{}}}],["app_interceptor",{"_index":278,"title":{},"body":{"modules/AdminModule.html":{}}}],["app_pipe",{"_index":279,"title":{},"body":{"modules/AdminModule.html":{}}}],["application",{"_index":195,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["applications",{"_index":517,"title":{},"body":{"entities/ClientEntity.html":{}}}],["applyfilter",{"_index":1073,"title":{},"body":{"controllers/QueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applyfilter(fields",{"_index":1096,"title":{},"body":{"controllers/QueryController.html":{}}}],["applysort",{"_index":1074,"title":{},"body":{"controllers/QueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applysort(fields",{"_index":1093,"title":{},"body":{"controllers/QueryController.html":{}}}],["appropriate",{"_index":1272,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["array",{"_index":500,"title":{},"body":{"entities/ClientEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["asc",{"_index":1357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["assertion",{"_index":818,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["associated",{"_index":906,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["async",{"_index":143,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"classes/RefreshTokenStrategy.html":{},"classes/System1705059848171.html":{}}}],["attrs",{"_index":721,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["auth",{"_index":233,"title":{},"body":{"interfaces/AdminConfig.html":{},"modules/AdminModule.html":{},"modules/AuthSeedingModule.html":{},"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{}}}],["auth.constants",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/decorators/access",{"_index":1069,"title":{},"body":{"controllers/QueryController.html":{}}}],["authcontroller",{"_index":301,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":282,"title":{"modules/AuthModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules.html":{}}}],["authmodule.forroot(options.auth",{"_index":291,"title":{},"body":{"modules/AdminModule.html":{}}}],["author",{"_index":1384,"title":{},"body":{"properties.html":{}}}],["authseedingmodule",{"_index":383,"title":{"modules/AuthSeedingModule.html":{}},"body":{"modules/AuthSeedingModule.html":{},"modules.html":{},"overview.html":{}}}],["authseedingservice",{"_index":390,"title":{"injectables/AuthSeedingService.html":{}},"body":{"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"coverage.html":{},"overview.html":{}}}],["autoincrement",{"_index":1241,"title":{},"body":{"classes/System1705059848171.html":{}}}],["avaiablefields",{"_index":1101,"title":{},"body":{"controllers/QueryController.html":{}}}],["available",{"_index":908,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"modules.html":{}}}],["await",{"_index":177,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"classes/RefreshTokenStrategy.html":{},"classes/System1705059848171.html":{}}}],["b",{"_index":961,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["baseentity",{"_index":584,"title":{},"body":{"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["bearer",{"_index":215,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/OAuth2Response.html":{},"dependencies.html":{}}}],["body",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"controllers/QueryController.html":{}}}],["boolean",{"_index":689,"title":{},"body":{"classes/CreateClientCommand.html":{},"guards/EntityAccessorGuard.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":253,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["browse",{"_index":1362,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1363,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1378,"title":{},"body":{"properties.html":{}}}],["build",{"_index":854,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["callback",{"_index":956,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["canactivate",{"_index":747,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["canactivate(context",{"_index":751,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["cant",{"_index":767,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["case",{"_index":866,"title":{},"body":{"classes/OAuth2Response.html":{},"classes/UserPayload.html":{}}}],["cert",{"_index":475,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["cert_expires_at",{"_index":490,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["certexpiresat",{"_index":429,"title":{},"body":{"classes/ClientCreatedEvent.html":{},"entities/ClientEntity.html":{}}}],["changed",{"_index":1280,"title":{},"body":{"classes/UserPayload.html":{}}}],["class",{"_index":0,"title":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/FilterableRequest.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"classes/PasswordStrategy.html":{},"classes/QueryPaginationResource.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"classes/System1705059848171.html":{},"classes/UserPayload.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"classes/UserPayload.html":{},"coverage.html":{},"dependencies.html":{}}}],["classdecorator",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"classes/FilterableRequest.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"classes/PasswordStrategy.html":{},"classes/QueryPaginationResource.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"classes/System1705059848171.html":{},"classes/UserPayload.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":272,"title":{},"body":{"modules/AdminModule.html":{},"controllers/AuthController.html":{}}}],["classserializerinterceptor(reflector",{"_index":298,"title":{},"body":{"modules/AdminModule.html":{}}}],["client",{"_index":53,"title":{},"body":{"entities/AccessTokenEntity.html":{},"injectables/AccessTokenRepository.html":{},"controllers/AuthController.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"miscellaneous/enumerations.html":{}}}],["client's",{"_index":533,"title":{},"body":{"classes/ClientPayload.html":{}}}],["client.accesstokenlifetime",{"_index":682,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["client.cert",{"_index":731,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.certexpiresat",{"_index":734,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.clientid",{"_index":710,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.clientsecret",{"_index":450,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["client.command",{"_index":701,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.command.ts",{"_index":685,"title":{},"body":{"classes/CreateClientCommand.html":{},"coverage.html":{}}}],["client.command.ts:10",{"_index":695,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:11",{"_index":691,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:12",{"_index":696,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:4",{"_index":690,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:6",{"_index":694,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:7",{"_index":697,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:8",{"_index":692,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.command.ts:9",{"_index":693,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["client.deletedat",{"_index":452,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["client.entity",{"_index":105,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["client.grants",{"_index":717,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.grants.includes(request.granttype",{"_index":454,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["client.handler.ts",{"_index":698,"title":{},"body":{"classes/CreateClientHandler.html":{},"coverage.html":{}}}],["client.handler.ts:13",{"_index":699,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.handler.ts:25",{"_index":700,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.id",{"_index":463,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["client.name",{"_index":708,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.privatekey",{"_index":727,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.publickey",{"_index":729,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.refreshtokenlifetime",{"_index":715,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client.scope",{"_index":713,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["client_credentials",{"_index":719,"title":{},"body":{"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{}}}],["client_credentials,refresh_token",{"_index":501,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["client_id",{"_index":72,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"classes/OAuth2Request.html":{},"classes/System1705059848171.html":{}}}],["client_secret",{"_index":493,"title":{},"body":{"entities/ClientEntity.html":{},"classes/OAuth2Request.html":{},"classes/System1705059848171.html":{}}}],["clientcreatedevent",{"_index":425,"title":{"classes/ClientCreatedEvent.html":{}},"body":{"classes/ClientCreatedEvent.html":{},"classes/CreateClientHandler.html":{},"coverage.html":{}}}],["clientcredentialsstrategy",{"_index":357,"title":{"classes/ClientCredentialsStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cliententity",{"_index":69,"title":{"entities/ClientEntity.html":{}},"body":{"entities/AccessTokenEntity.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["clientid",{"_index":19,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/OAuth2Request.html":{}}}],["clientnotfoundexception",{"_index":520,"title":{"classes/ClientNotFoundException.html":{}},"body":{"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"coverage.html":{}}}],["clientnotfoundexception.withclientid(clientid",{"_index":567,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientnotfoundexception.withid(id",{"_index":566,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientnotfoundexception.withname(name",{"_index":568,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientpayload",{"_index":224,"title":{"classes/ClientPayload.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/ClientPayload.html":{},"coverage.html":{}}}],["clientrepository",{"_index":327,"title":{"injectables/ClientRepository.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientrepositoryinterface",{"_index":318,"title":{"interfaces/ClientRepositoryInterface.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientrolesentity",{"_index":343,"title":{"entities/ClientRolesEntity.html":{}},"body":{"modules/AuthModule.html":{},"entities/ClientRolesEntity.html":{},"coverage.html":{}}}],["clients",{"_index":570,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{},"classes/CreateClientCommand.html":{}}}],["clientsecret",{"_index":476,"title":{},"body":{"entities/ClientEntity.html":{},"classes/OAuth2Request.html":{}}}],["cluster_authseedingmodule",{"_index":387,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["cluster_authseedingmodule_exports",{"_index":389,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["cluster_authseedingmodule_providers",{"_index":388,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["column",{"_index":100,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["column('datetime",{"_index":66,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["column('varchar",{"_index":1011,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["column({length",{"_index":512,"title":{},"body":{"entities/ClientEntity.html":{}}}],["column({name",{"_index":57,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{}}}],["column({nullable",{"_index":90,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["column({type",{"_index":486,"title":{},"body":{"entities/ClientEntity.html":{}}}],["command",{"_index":657,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{}}}],["command.accesstokenlifetime",{"_index":714,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.clientid",{"_index":665,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["command.exp",{"_index":680,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["command.grants",{"_index":718,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.name",{"_index":709,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.nosecret",{"_index":711,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.refreshtokenlifetime",{"_index":716,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["command.request",{"_index":673,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["command.scope",{"_index":675,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["commandbus",{"_index":435,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["commandhandler",{"_index":659,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["commandhandler(createaccesstokencommand",{"_index":663,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["commandhandler(createclientcommand",{"_index":707,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["commandhandlers",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["commands/create",{"_index":446,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["common",{"_index":940,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["commonname",{"_index":722,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["complexqueryrequest",{"_index":587,"title":{"classes/ComplexQueryRequest.html":{}},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"controllers/QueryController.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"coverage.html":{}}}],["config_inject_key",{"_index":283,"title":{},"body":{"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":276,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure",{"_index":259,"title":{},"body":{"modules/AdminModule.html":{}}}],["configure(consumer",{"_index":260,"title":{},"body":{"modules/AdminModule.html":{}}}],["connected",{"_index":547,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["connector",{"_index":1374,"title":{},"body":{"properties.html":{}}}],["console.log(httpadapter",{"_index":254,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["const",{"_index":176,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":284,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AuthSeedingService.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"modules/QueryModule.html":{},"injectables/QueryService.html":{}}}],["constraint",{"_index":1233,"title":{},"body":{"classes/System1705059848171.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"classes/UserPayload.html":{}}}],["constructor(accesstoken",{"_index":535,"title":{},"body":{"classes/ClientPayload.html":{},"classes/OAuth2Response.html":{},"classes/UserPayload.html":{}}}],["constructor(accesstokenrepository",{"_index":209,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/CreateAccessTokenHandler.html":{}}}],["constructor(clientid",{"_index":642,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["constructor(clientrepository",{"_index":434,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["constructor(data",{"_index":995,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["constructor(httpadapter",{"_index":244,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["constructor(id",{"_index":27,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["constructor(moduleref",{"_index":893,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["constructor(modulescontainer",{"_index":1206,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["constructor(name",{"_index":688,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["constructor(options",{"_index":1127,"title":{},"body":{"injectables/QueryService.html":{}}}],["constructor(permissiongrouprepo",{"_index":401,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["constructor(private",{"_index":288,"title":{},"body":{"modules/AdminModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"controllers/QueryController.html":{},"injectables/StrategyExplorer.html":{}}}],["constructor(queryservice",{"_index":748,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["constructor(repository",{"_index":149,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{}}}],["constructor(undefined",{"_index":978,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["consumer",{"_index":263,"title":{},"body":{"modules/AdminModule.html":{}}}],["contain",{"_index":514,"title":{},"body":{"entities/ClientEntity.html":{}}}],["container",{"_index":949,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["context",{"_index":754,"title":{},"body":{"guards/EntityAccessorGuard.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["context.switchtohttp().getrequest",{"_index":759,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["controller",{"_index":300,"title":{"controllers/AuthController.html":{},"controllers/QueryController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/QueryController.html":{},"coverage.html":{}}}],["controllers",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"overview.html":{}}}],["controllers/query.controller",{"_index":1112,"title":{},"body":{"modules/QueryModule.html":{}}}],["coverage",{"_index":1288,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cqrsmodule",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["create",{"_index":144,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"modules/AuthModule.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"controllers/QueryController.html":{}}}],["create(@param('entity",{"_index":1078,"title":{},"body":{"controllers/QueryController.html":{}}}],["create(accesstoken",{"_index":152,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["create(client",{"_index":553,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["create(schema",{"_index":1039,"title":{},"body":{"controllers/QueryController.html":{}}}],["createaccesstokencommand",{"_index":445,"title":{"classes/CreateAccessTokenCommand.html":{}},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["createaccesstokenhandler",{"_index":351,"title":{"classes/CreateAccessTokenHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/CreateAccessTokenHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createclientcommand",{"_index":684,"title":{"classes/CreateClientCommand.html":{}},"body":{"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"coverage.html":{}}}],["createclienthandler",{"_index":352,"title":{"classes/CreateClientHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/CreateClientHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":428,"title":{},"body":{"classes/ClientCreatedEvent.html":{},"classes/CreateClientHandler.html":{}}}],["created.event",{"_index":662,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["created.event.ts",{"_index":8,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{},"coverage.html":{}}}],["created.event.ts:10",{"_index":41,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:11",{"_index":42,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:12",{"_index":43,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:13",{"_index":44,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{}}}],["created.event.ts:4",{"_index":31,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:6",{"_index":40,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:7",{"_index":39,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:8",{"_index":37,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created.event.ts:9",{"_index":38,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{}}}],["created_at",{"_index":495,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["created_from",{"_index":80,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/System1705059848171.html":{}}}],["created_on",{"_index":75,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/System1705059848171.html":{}}}],["createdat",{"_index":54,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{}}}],["createdclient",{"_index":735,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.certexpiresat",{"_index":742,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.clientid",{"_index":741,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.id",{"_index":739,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdclient.name",{"_index":740,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["createdfrom",{"_index":55,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["createmodel",{"_index":1033,"title":{},"body":{"controllers/QueryController.html":{}}}],["createmodel(type",{"_index":1043,"title":{},"body":{"controllers/QueryController.html":{}}}],["createoauth2options",{"_index":931,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["createuserdto",{"_index":1040,"title":{},"body":{"controllers/QueryController.html":{}}}],["credentials.strategy.ts",{"_index":431,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"coverage.html":{}}}],["credentials.strategy.ts:15",{"_index":436,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["credentials.strategy.ts:28",{"_index":440,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["credentials.strategy.ts:47",{"_index":438,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["crypto",{"_index":660,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["crypto.randombytes(32).tostring('hex",{"_index":712,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["current",{"_index":546,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{}}}],["currently",{"_index":939,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["currentoptions",{"_index":1168,"title":{},"body":{"injectables/QueryService.html":{}}}],["dashboard",{"_index":1373,"title":{},"body":{"properties.html":{}}}],["data",{"_index":809,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["database",{"_index":571,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["datasource",{"_index":1128,"title":{},"body":{"injectables/QueryService.html":{}}}],["date",{"_index":29,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/ClientCreatedEvent.html":{},"entities/ClientEntity.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["date(now",{"_index":681,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["date.now",{"_index":470,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{}}}],["datetime",{"_index":489,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["days",{"_index":725,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["deal",{"_index":193,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{}}}],["declarations",{"_index":386,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["decorator",{"_index":881,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"controllers/QueryController.html":{}}}],["decorator.ts",{"_index":1304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":56,"title":{},"body":{"entities/AccessTokenEntity.html":{},"controllers/AuthController.html":{},"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["decorators/entity",{"_index":1071,"title":{},"body":{"controllers/QueryController.html":{}}}],["decorators/oauth2",{"_index":442,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["default",{"_index":76,"title":{},"body":{"entities/AccessTokenEntity.html":{},"injectables/AdminLoader.html":{},"entities/ClientEntity.html":{},"classes/ClientPayload.html":{},"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"classes/System1705059848171.html":{},"classes/UserPayload.html":{},"miscellaneous/variables.html":{}}}],["default_admin_role_name",{"_index":410,"title":{},"body":{"injectables/AuthSeedingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_system_permission_group",{"_index":407,"title":{},"body":{"injectables/AuthSeedingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_system_roles_permission_name",{"_index":408,"title":{},"body":{"injectables/AuthSeedingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_user_role_name",{"_index":409,"title":{},"body":{"injectables/AuthSeedingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgroup",{"_index":414,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["defaultoptions",{"_index":1170,"title":{},"body":{"injectables/QueryService.html":{}}}],["define",{"_index":938,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{},"miscellaneous/enumerations.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PaginationMeta.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["delete",{"_index":145,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{},"controllers/QueryController.html":{},"classes/System1705059848171.html":{}}}],["delete(':id",{"_index":1106,"title":{},"body":{"controllers/QueryController.html":{}}}],["delete(':id')@version('1",{"_index":1058,"title":{},"body":{"controllers/QueryController.html":{}}}],["delete(accesstoken",{"_index":155,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["delete(client",{"_index":555,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["deletebyid",{"_index":146,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["deletebyid(id",{"_index":157,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["deleted_at",{"_index":497,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["deletedat",{"_index":477,"title":{},"body":{"entities/ClientEntity.html":{}}}],["deleteresult",{"_index":165,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["dependencies",{"_index":384,"title":{"dependencies.html":{}},"body":{"modules/AuthSeedingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateClientCommand.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"properties.html":{}}}],["displaytitle",{"_index":417,"title":{},"body":{"injectables/AuthSeedingService.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{},"classes/System1705059848171.html":{}}}],["documentation",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["down",{"_index":1219,"title":{},"body":{"classes/System1705059848171.html":{}}}],["down(queryrunner",{"_index":1222,"title":{},"body":{"classes/System1705059848171.html":{}}}],["dynamicmodule",{"_index":269,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/QueryModule.html":{}}}],["each",{"_index":637,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["editpermission",{"_index":774,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"injectables/QueryService.html":{}}}],["element",{"_index":964,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["email",{"_index":1269,"title":{},"body":{"interfaces/UserInterface.html":{},"classes/UserPayload.html":{}}}],["emit",{"_index":737,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["ends_with",{"_index":784,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/enumerations.html":{}}}],["ensure",{"_index":677,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["entities",{"_index":50,"title":{},"body":{"entities/AccessTokenEntity.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{},"classes/CreateClientHandler.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"entities/RoleEntity.html":{},"overview.html":{}}}],["entities/accoss",{"_index":166,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/UserPayload.html":{}}}],["entities/auth",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["entities/client.entity",{"_index":448,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["entity",{"_index":48,"title":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{},"guards/EntityAccessorGuard.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{},"coverage.html":{}}}],["entity('schema_access_tokens",{"_index":108,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["entity('schema_auth_client_roles",{"_index":586,"title":{},"body":{"entities/ClientRolesEntity.html":{}}}],["entity('schema_auth_clients",{"_index":518,"title":{},"body":{"entities/ClientEntity.html":{}}}],["entity('schema_auth_permission_groups",{"_index":1030,"title":{},"body":{"entities/PermissionGroupEntity.html":{}}}],["entity('schema_auth_permissions",{"_index":1024,"title":{},"body":{"entities/PermissionEntity.html":{}}}],["entity('schema_auth_roles",{"_index":1196,"title":{},"body":{"entities/RoleEntity.html":{}}}],["entityaccessor",{"_index":790,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityaccessorguard",{"_index":744,"title":{"guards/EntityAccessorGuard.html":{}},"body":{"guards/EntityAccessorGuard.html":{},"modules/QueryModule.html":{},"coverage.html":{}}}],["entityaccessorvalidation",{"_index":1070,"title":{},"body":{"controllers/QueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entityclassorschema",{"_index":1139,"title":{},"body":{"injectables/QueryService.html":{}}}],["enum",{"_index":781,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["enumerations",{"_index":1352,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["event",{"_index":10,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/ClientCreatedEvent.html":{},"classes/CreateClientHandler.html":{}}}],["eventbus",{"_index":653,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["eventhandlers",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["events/access",{"_index":661,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["events/client",{"_index":706,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["exact",{"_index":785,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/enumerations.html":{}}}],["exception",{"_index":112,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["exceptions/access",{"_index":168,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["exceptions/client",{"_index":563,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["exclude",{"_index":870,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["execute",{"_index":652,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["execute(command",{"_index":655,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["executioncontext",{"_index":752,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["existence",{"_index":1287,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["exists",{"_index":1284,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["exp",{"_index":640,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{}}}],["exp.setdate(exp.getdate",{"_index":733,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["expiration",{"_index":678,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/OAuth2Request.html":{}}}],["expiredtoken",{"_index":1185,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["expiredtoken.refreshtokenexpiresat",{"_index":1188,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["expires",{"_index":858,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["expires_in",{"_index":859,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["explore",{"_index":951,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["explorerservice",{"_index":372,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":45,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["exports",{"_index":299,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"modules/QueryModule.html":{},"overview.html":{}}}],["expose",{"_index":845,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["extends",{"_index":115,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"classes/ClientNotFoundException.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/InvalidUserException.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["extractmetadata",{"_index":1205,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["extractmetadata(instance",{"_index":968,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["factory.interface.ts",{"_index":930,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{},"coverage.html":{}}}],["factory.interface.ts:4",{"_index":932,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["false",{"_index":62,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{}}}],["false})@joincolumn({name",{"_index":71,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["field",{"_index":626,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"injectables/QueryService.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"miscellaneous/variables.html":{}}}],["field.field",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.isnullable",{"_index":1173,"title":{},"body":{"injectables/QueryService.html":{}}}],["field.isprimary",{"_index":1166,"title":{},"body":{"injectables/QueryService.html":{}}}],["field.order",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field.propertyname",{"_index":1165,"title":{},"body":{"injectables/QueryService.html":{}}}],["field.term",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1081,"title":{},"body":{"controllers/QueryController.html":{},"injectables/QueryService.html":{},"miscellaneous/variables.html":{}}}],["fields[field",{"_index":1176,"title":{},"body":{"injectables/QueryService.html":{}}}],["fields[field.field",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["filter",{"_index":590,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"miscellaneous/variables.html":{}}}],["filter(field",{"_index":1163,"title":{},"body":{"injectables/QueryService.html":{}}}],["filter[field.field",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterablerequest",{"_index":594,"title":{"classes/FilterableRequest.html":{}},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filtermatch",{"_index":775,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/enumerations.html":{}}}],["filtermatch.ends_with",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtermatch.exact",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtermatch.starts_or_ends",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtermatch.starts_with",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterprovider",{"_index":965,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["filterprovider(wrapper",{"_index":1210,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["find",{"_index":200,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"guards/EntityAccessorGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["find(id",{"_index":557,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyaccesstoken",{"_index":147,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findbyaccesstoken(accesstoken",{"_index":159,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findbyclientid",{"_index":550,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyclientid(clientid",{"_index":559,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyname",{"_index":551,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyname(name",{"_index":561,"title":{},"body":{"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["findbyrefreshtoken",{"_index":148,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findbyrefreshtoken(refreshtoken",{"_index":161,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{}}}],["findone",{"_index":1034,"title":{},"body":{"controllers/QueryController.html":{}}}],["findone(@param('id",{"_index":1103,"title":{},"body":{"controllers/QueryController.html":{}}}],["findone(id",{"_index":1045,"title":{},"body":{"controllers/QueryController.html":{}}}],["finds",{"_index":573,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["finish",{"_index":937,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["fixme",{"_index":666,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["fk_9119b10057145abf25ea35f5bcf",{"_index":1259,"title":{},"body":{"classes/System1705059848171.html":{}}}],["fk_a1ab8619e6e68943beb98d7e887",{"_index":1248,"title":{},"body":{"classes/System1705059848171.html":{}}}],["fk_cf45404b988e029dc71b416dd1f",{"_index":1262,"title":{},"body":{"classes/System1705059848171.html":{}}}],["flatmap",{"_index":955,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["flatmap(modules",{"_index":1212,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["forbiddenexception",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["foreign",{"_index":1249,"title":{},"body":{"classes/System1705059848171.html":{}}}],["forroot",{"_index":265,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/QueryModule.html":{}}}],["forroot(options",{"_index":266,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/QueryModule.html":{}}}],["found",{"_index":114,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["found.exception",{"_index":169,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{}}}],["found.exception.ts",{"_index":111,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:12",{"_index":129,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["found.exception.ts:16",{"_index":526,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["found.exception.ts:23",{"_index":123,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["found.exception.ts:27",{"_index":525,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["found.exception.ts:34",{"_index":131,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["found.exception.ts:38",{"_index":528,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["foundfield",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foundfield.filtermatch",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foundfield.isfilterable",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foundfield.issortable",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":1214,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["function(object",{"_index":791,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":676,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["generated",{"_index":11,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/OAuth2Response.html":{}}}],["get('id/:id",{"_index":1102,"title":{},"body":{"controllers/QueryController.html":{}}}],["get('id/:id')@version('1",{"_index":1046,"title":{},"body":{"controllers/QueryController.html":{}}}],["get('list",{"_index":1099,"title":{},"body":{"controllers/QueryController.html":{}}}],["get('list')@version('1",{"_index":1052,"title":{},"body":{"controllers/QueryController.html":{}}}],["get()@version('1",{"_index":1055,"title":{},"body":{"controllers/QueryController.html":{}}}],["getallfields",{"_index":1121,"title":{},"body":{"injectables/QueryService.html":{}}}],["getallfields(schema",{"_index":1130,"title":{},"body":{"injectables/QueryService.html":{}}}],["getmetadatafield",{"_index":1122,"title":{},"body":{"injectables/QueryService.html":{}}}],["getmetadatafield(schema",{"_index":1132,"title":{},"body":{"injectables/QueryService.html":{}}}],["getmetadatafields",{"_index":1123,"title":{},"body":{"injectables/QueryService.html":{}}}],["getmetadatafields(schema",{"_index":1134,"title":{},"body":{"injectables/QueryService.html":{}}}],["getoauth2response",{"_index":433,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["getoauth2response(request",{"_index":437,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["getrecords",{"_index":1035,"title":{},"body":{"controllers/QueryController.html":{}}}],["getrecords(schema",{"_index":1048,"title":{},"body":{"controllers/QueryController.html":{}}}],["getrecordssimple",{"_index":1036,"title":{},"body":{"controllers/QueryController.html":{}}}],["getrecordssimple(schema",{"_index":1051,"title":{},"body":{"controllers/QueryController.html":{}}}],["getrepository",{"_index":1124,"title":{},"body":{"injectables/QueryService.html":{}}}],["getrepository(schema",{"_index":1136,"title":{},"body":{"injectables/QueryService.html":{}}}],["getschema",{"_index":1037,"title":{},"body":{"controllers/QueryController.html":{},"injectables/QueryService.html":{}}}],["getschema(@param('entity",{"_index":1100,"title":{},"body":{"controllers/QueryController.html":{}}}],["getschema(schema",{"_index":1054,"title":{},"body":{"controllers/QueryController.html":{},"injectables/QueryService.html":{}}}],["getskip",{"_index":1200,"title":{},"body":{"classes/SimpleQueryRequest.html":{}}}],["getting",{"_index":1359,"title":{"index.html":{}},"body":{}}],["given",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/OAuth2Request.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/UserValidatorInterface.html":{}}}],["global",{"_index":273,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["grant",{"_index":443,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/OAuth2Request.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["grant_type",{"_index":830,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["granted",{"_index":96,"title":{},"body":{"entities/AccessTokenEntity.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["grants",{"_index":478,"title":{},"body":{"entities/ClientEntity.html":{},"classes/CreateClientCommand.html":{},"classes/System1705059848171.html":{}}}],["granttype",{"_index":810,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["graph",{"_index":1361,"title":{},"body":{"modules.html":{}}}],["group",{"_index":421,"title":{},"body":{"injectables/AuthSeedingService.html":{},"entities/PermissionEntity.html":{}}}],["group.entity",{"_index":1023,"title":{},"body":{"entities/PermissionEntity.html":{}}}],["group.entity.ts",{"_index":1025,"title":{},"body":{"entities/PermissionGroupEntity.html":{},"coverage.html":{}}}],["group.entity.ts:14",{"_index":1026,"title":{},"body":{"entities/PermissionGroupEntity.html":{}}}],["group.entity.ts:17",{"_index":1027,"title":{},"body":{"entities/PermissionGroupEntity.html":{}}}],["group.entity.ts:9",{"_index":1028,"title":{},"body":{"entities/PermissionGroupEntity.html":{}}}],["group.slug",{"_index":1014,"title":{},"body":{"entities/PermissionEntity.html":{}}}],["groupslug",{"_index":1239,"title":{},"body":{"classes/System1705059848171.html":{}}}],["guard",{"_index":743,"title":{"guards/EntityAccessorGuard.html":{}},"body":{"interfaces/Oauth2PayloadInterface.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":745,"title":{},"body":{"guards/EntityAccessorGuard.html":{},"modules/QueryModule.html":{}}}],["handler",{"_index":878,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["handlers",{"_index":879,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["hasnextpage",{"_index":974,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["haspreviouspage",{"_index":975,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["hasschema",{"_index":1125,"title":{},"body":{"injectables/QueryService.html":{}}}],["hasschema(schema",{"_index":1140,"title":{},"body":{"injectables/QueryService.html":{}}}],["header",{"_index":218,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["helpers",{"_index":1075,"title":{},"body":{"controllers/QueryController.html":{}}}],["himalaya/dashboard",{"_index":1375,"title":{},"body":{"properties.html":{}}}],["hour",{"_index":825,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["http",{"_index":217,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"dependencies.html":{}}}],["httpadapter",{"_index":247,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["httpadapterhost",{"_index":245,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{}}}],["httpexception",{"_index":909,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["https://github.com/red",{"_index":1379,"title":{},"body":{"properties.html":{}}}],["iat",{"_index":641,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"classes/OAuth2Request.html":{}}}],["icommandhandler",{"_index":651,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["id",{"_index":20,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"classes/ClientCreatedEvent.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/InvalidUserException.html":{},"interfaces/Oauth2PayloadInterface.html":{},"controllers/QueryController.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{}}}],["identifier",{"_index":577,"title":{},"body":{"entities/ClientRolesEntity.html":{},"classes/System1705059848171.html":{},"coverage.html":{}}}],["ids",{"_index":95,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["ientityaccessoroptions",{"_index":772,"title":{"interfaces/IEntityAccessorOptions.html":{}},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ilike(`${field.term",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ilike(`%${field.term",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implement",{"_index":191,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["implements",{"_index":173,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/System1705059848171.html":{},"classes/UserPayload.html":{}}}],["import",{"_index":99,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["imports",{"_index":290,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"modules/QueryModule.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"controllers/AuthController.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1189,"title":{},"body":{"interfaces/ResourceDictonary.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["inherited",{"_index":605,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["initialized",{"_index":289,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["inject",{"_index":221,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/PasswordStrategy.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{}}}],["inject('accesstokenrepositoryinterface",{"_index":225,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/RefreshTokenStrategy.html":{}}}],["inject('clientrepositoryinterface",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["inject('userloaderinterface",{"_index":226,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["inject('uservalidatorinterface",{"_index":1004,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["inject(oauth2_server_options",{"_index":371,"title":{},"body":{"modules/AuthModule.html":{}}}],["inject(query_module_config_key",{"_index":1149,"title":{},"body":{"injectables/QueryService.html":{}}}],["inject(queryservice",{"_index":758,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["injectable",{"_index":138,"title":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"injectables/AuthSeedingService.html":{},"injectables/ClientRepository.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"injectables/QueryService.html":{},"injectables/StrategyExplorer.html":{}},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"injectables/AuthSeedingService.html":{},"injectables/ClientRepository.html":{},"guards/EntityAccessorGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/QueryService.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"injectables/AuthSeedingService.html":{},"injectables/ClientRepository.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"injectables/QueryService.html":{},"injectables/StrategyExplorer.html":{},"overview.html":{}}}],["injectdatasource",{"_index":1145,"title":{},"body":{"injectables/QueryService.html":{}}}],["injectrepository",{"_index":163,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AuthSeedingService.html":{},"injectables/ClientRepository.html":{}}}],["injectrepository(accesstokenentity",{"_index":174,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["injectrepository(cliententity",{"_index":564,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["injectrepository(permissionentity",{"_index":413,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["injectrepository(permissiongroupentity",{"_index":411,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["injectrepository(roleentity",{"_index":412,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["instance",{"_index":915,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/QueryService.html":{},"injectables/StrategyExplorer.html":{}}}],["instance.constructor",{"_index":969,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["instancewrapper",{"_index":943,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["integer",{"_index":1232,"title":{},"body":{"classes/System1705059848171.html":{}}}],["interface",{"_index":186,"title":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/AdminConfig.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"interfaces/PaginationMetaParameters.html":{},"interfaces/QueryOptions.html":{},"interfaces/ResourceDictonary.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/AdminConfig.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"interfaces/ResourceDictonary.html":{},"injectables/StrategyExplorer.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":187,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"classes/ClientCredentialsStrategy.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{},"overview.html":{}}}],["interfaces/access",{"_index":171,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"classes/CreateAccessTokenHandler.html":{}}}],["interfaces/client",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["interfaces/oauth2",{"_index":912,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["interfaces/query",{"_index":624,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["internalservererrorexception",{"_index":529,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["invalid",{"_index":798,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["invaliduserexception",{"_index":795,"title":{"classes/InvalidUserException.html":{}},"body":{"classes/InvalidUserException.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["isarray",{"_index":596,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["isarray()@apiproperty({isarray",{"_index":1117,"title":{},"body":{"classes/QueryPaginationResource.html":{}}}],["isarray(options.filter",{"_index":1095,"title":{},"body":{"controllers/QueryController.html":{}}}],["isarray(options.sort",{"_index":1091,"title":{},"body":{"controllers/QueryController.html":{}}}],["isenum",{"_index":616,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["isenum(queryorder",{"_index":627,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["isfilterable",{"_index":776,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"injectables/QueryService.html":{}}}],["isint",{"_index":617,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["isnotempty",{"_index":844,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["isnullable",{"_index":787,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{}}}],["isoptional",{"_index":619,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["isprimary",{"_index":788,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{}}}],["issortable",{"_index":777,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"injectables/QueryService.html":{}}}],["isstring",{"_index":615,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["isstring()@apipropertyoptional({})@type(undefined",{"_index":769,"title":{},"body":{"classes/FilterableRequest.html":{},"classes/SortableRequest.html":{}}}],["issued",{"_index":826,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["item",{"_index":1092,"title":{},"body":{"controllers/QueryController.html":{}}}],["itemcount",{"_index":976,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{}}}],["items",{"_index":957,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["items.filter(element",{"_index":963,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["itypeormaddionalfields",{"_index":786,"title":{"interfaces/ITypeOrmAddionalFields.html":{}},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"coverage.html":{}}}],["january",{"_index":823,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["joincolumn",{"_index":101,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["json",{"_index":81,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/System1705059848171.html":{}}}],["json.parse(client.scope",{"_index":456,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["json.stringify(requestscopes",{"_index":464,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["key",{"_index":239,"title":{},"body":{"interfaces/AdminConfig.html":{},"classes/OAuth2Request.html":{},"interfaces/ResourceDictonary.html":{},"classes/System1705059848171.html":{}}}],["keys",{"_index":720,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["keywords",{"_index":1376,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":124,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["legend",{"_index":385,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["length",{"_index":63,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["license",{"_index":1382,"title":{},"body":{"properties.html":{}}}],["list",{"_index":93,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["literal",{"_index":907,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":1273,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["load(userid",{"_index":1274,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["loader",{"_index":252,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["loader.interface.ts",{"_index":1271,"title":{},"body":{"interfaces/UserLoaderInterface.html":{},"coverage.html":{}}}],["loader.interface.ts:12",{"_index":1275,"title":{},"body":{"interfaces/UserLoaderInterface.html":{}}}],["lodash",{"_index":1065,"title":{},"body":{"controllers/QueryController.html":{},"injectables/QueryService.html":{}}}],["logger",{"_index":243,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["logger('admincoremodule",{"_index":249,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["logger('adminmodule",{"_index":287,"title":{},"body":{"modules/AdminModule.html":{}}}],["logger('authmodule",{"_index":370,"title":{},"body":{"modules/AuthModule.html":{}}}],["main",{"_index":190,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/UserLoaderInterface.html":{}}}],["manytoone",{"_index":102,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{}}}],["manytoone(type",{"_index":70,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["manytoone(undefined",{"_index":581,"title":{},"body":{"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{}}}],["map(field",{"_index":1167,"title":{},"body":{"injectables/QueryService.html":{}}}],["map(module",{"_index":958,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["matching",{"_index":47,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.itemcount",{"_index":991,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["max",{"_index":620,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["max(200",{"_index":632,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["maximum",{"_index":608,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["message",{"_index":125,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["meta",{"_index":994,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["metadata",{"_index":970,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"dependencies.html":{}}}],["metadatakey",{"_index":966,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["metadataresult",{"_index":789,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"injectables/QueryService.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":853,"title":{},"body":{"classes/OAuth2Response.html":{},"interfaces/UserValidatorInterface.html":{}}}],["methods",{"_index":117,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/InvalidUserException.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["middlewareconsumer",{"_index":261,"title":{},"body":{"modules/AdminModule.html":{}}}],["migrationinterface",{"_index":1218,"title":{},"body":{"classes/System1705059848171.html":{}}}],["min",{"_index":618,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["min(1",{"_index":631,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["minimum",{"_index":630,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["miscellaneous",{"_index":1351,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1383,"title":{},"body":{"properties.html":{}}}],["modelfields",{"_index":1161,"title":{},"body":{"injectables/QueryService.html":{}}}],["module",{"_index":255,"title":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"modules/QueryModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"interfaces/Oauth2StrategyOptions.html":{},"modules/QueryModule.html":{},"injectables/StrategyExplorer.html":{},"overview.html":{}}}],["module.providers.values()].map(callback",{"_index":959,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["modulemetadata",{"_index":237,"title":{},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{}}}],["moduleref",{"_index":894,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["modules",{"_index":257,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"interfaces/Oauth2StrategyOptions.html":{},"modules/QueryModule.html":{},"injectables/StrategyExplorer.html":{},"modules.html":{},"overview.html":{}}}],["modulescontainer",{"_index":947,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["name",{"_index":34,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PaginationMeta.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":1381,"title":{},"body":{"properties.html":{}}}],["nestjs",{"_index":1377,"title":{},"body":{"properties.html":{}}}],["nestjs/common",{"_index":132,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/InvalidUserException.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"injectables/StrategyExplorer.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":277,"title":{},"body":{"modules/AdminModule.html":{}}}],["nestjs/core",{"_index":250,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"modules/QueryModule.html":{},"dependencies.html":{}}}],["nestjs/core/injector/instance",{"_index":944,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["nestjs/core/injector/module",{"_index":946,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["nestjs/core/injector/modules",{"_index":948,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["nestjs/cqrs",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":220,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["nestjs/typeorm",{"_index":164,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"injectables/ClientRepository.html":{},"injectables/QueryService.html":{},"dependencies.html":{}}}],["nestjs/typeorm/dist/interfaces/entity",{"_index":1146,"title":{},"body":{"injectables/QueryService.html":{}}}],["nestmodule",{"_index":274,"title":{},"body":{"modules/AdminModule.html":{}}}],["new",{"_index":135,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/InvalidUserException.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ninjas/himalaya",{"_index":1380,"title":{},"body":{"properties.html":{}}}],["nosecret",{"_index":687,"title":{},"body":{"classes/CreateClientCommand.html":{}}}],["notfoundexception",{"_index":116,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{}}}],["now",{"_index":77,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/System1705059848171.html":{}}}],["null",{"_index":453,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/System1705059848171.html":{}}}],["nullable",{"_index":61,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{}}}],["number",{"_index":482,"title":{},"body":{"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["oauth2",{"_index":543,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"classes/UserPayload.html":{}}}],["oauth2_server_options",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2_strategy_metadata",{"_index":910,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2grantstrategy",{"_index":441,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2grantstrategy('client_credentials",{"_index":449,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["oauth2grantstrategy('password",{"_index":1003,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["oauth2grantstrategy('refresh_token",{"_index":1184,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["oauth2grantstrategyinterface",{"_index":432,"title":{"interfaces/Oauth2GrantStrategyInterface.html":{}},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{}}}],["oauth2grantstrategyregistry",{"_index":316,"title":{"injectables/Oauth2GrantStrategyRegistry.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2grantstrategytype",{"_index":898,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"miscellaneous/typealiases.html":{}}}],["oauth2options",{"_index":235,"title":{},"body":{"interfaces/AdminConfig.html":{},"modules/AuthModule.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/ResourceDictonary.html":{},"miscellaneous/typealiases.html":{}}}],["oauth2optionsfactoryinterface",{"_index":929,"title":{"interfaces/Oauth2OptionsFactoryInterface.html":{}},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{},"coverage.html":{}}}],["oauth2optionsprovider",{"_index":373,"title":{},"body":{"modules/AuthModule.html":{}}}],["oauth2payloadinterface",{"_index":222,"title":{"interfaces/Oauth2PayloadInterface.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{},"coverage.html":{}}}],["oauth2payloadtype",{"_index":541,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{},"miscellaneous/enumerations.html":{}}}],["oauth2payloadtype.client",{"_index":542,"title":{},"body":{"classes/ClientPayload.html":{}}}],["oauth2payloadtype.user",{"_index":1279,"title":{},"body":{"classes/UserPayload.html":{}}}],["oauth2request",{"_index":79,"title":{"classes/OAuth2Request.html":{}},"body":{"entities/AccessTokenEntity.html":{},"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/OAuth2Request.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["oauth2response",{"_index":313,"title":{"classes/OAuth2Response.html":{}},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["oauth2strategies",{"_index":369,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["oauth2strategy('grant_type",{"_index":882,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["oauth2strategyoptions",{"_index":941,"title":{"interfaces/Oauth2StrategyOptions.html":{}},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{}}}],["object",{"_index":792,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"miscellaneous/variables.html":{}}}],["object.fromentries",{"_index":1162,"title":{},"body":{"injectables/QueryService.html":{}}}],["object.keys(fields",{"_index":1158,"title":{},"body":{"injectables/QueryService.html":{}}}],["object.keys(this._resources).includes(schema",{"_index":1154,"title":{},"body":{"injectables/QueryService.html":{}}}],["observable",{"_index":755,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["old",{"_index":669,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["onetomany",{"_index":1020,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["onetomany(undefined",{"_index":1016,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["onmoduleinit",{"_index":270,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PaginationMeta.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["options",{"_index":268,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options.filter",{"_index":1094,"title":{},"body":{"controllers/QueryController.html":{}}}],["options.interface.ts",{"_index":1114,"title":{},"body":{"interfaces/QueryOptions.html":{},"coverage.html":{}}}],["options.isnullable",{"_index":1172,"title":{},"body":{"injectables/QueryService.html":{}}}],["options.isprimary",{"_index":1174,"title":{},"body":{"injectables/QueryService.html":{}}}],["options.page",{"_index":987,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["options.sort",{"_index":1090,"title":{},"body":{"controllers/QueryController.html":{}}}],["options.take",{"_index":988,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["options.type",{"_index":934,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["options.type.ts",{"_index":1389,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["options.userloader",{"_index":375,"title":{},"body":{"modules/AuthModule.html":{}}}],["options.uservalidator",{"_index":378,"title":{},"body":{"modules/AuthModule.html":{}}}],["order",{"_index":628,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"interfaces/UserLoaderInterface.html":{},"miscellaneous/variables.html":{}}}],["order.enum",{"_index":625,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["order.enum.ts",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["out",{"_index":393,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["overview",{"_index":1366,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1338,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":592,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["pagecount",{"_index":977,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["pagemetadto",{"_index":1097,"title":{},"body":{"controllers/QueryController.html":{}}}],["paginationmeta",{"_index":972,"title":{"classes/PaginationMeta.html":{}},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"coverage.html":{}}}],["paginationmetaparameters",{"_index":979,"title":{"interfaces/PaginationMetaParameters.html":{}},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"coverage.html":{}}}],["param",{"_index":133,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["param('entity",{"_index":1080,"title":{},"body":{"controllers/QueryController.html":{}}}],["param('id",{"_index":1105,"title":{},"body":{"controllers/QueryController.html":{}}}],["parameter",{"_index":765,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PaginationMeta.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["params",{"_index":760,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["params.entity",{"_index":762,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["party",{"_index":516,"title":{},"body":{"entities/ClientEntity.html":{}}}],["passport",{"_index":219,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":206,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["password",{"_index":803,"title":{},"body":{"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"interfaces/UserValidatorInterface.html":{}}}],["password_grant",{"_index":846,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["password_grant\"'})@expose({name",{"_index":835,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["passwordstrategy",{"_index":358,"title":{"classes/PasswordStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":1064,"title":{},"body":{"controllers/QueryController.html":{}}}],["patch(':id",{"_index":1104,"title":{},"body":{"controllers/QueryController.html":{}}}],["patch(':id')@version('1",{"_index":1062,"title":{},"body":{"controllers/QueryController.html":{}}}],["path",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"controllers/QueryController.html":{}}}],["payload",{"_index":534,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"miscellaneous/enumerations.html":{}}}],["payload.interface",{"_index":544,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payload.interface.ts",{"_index":531,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/UserPayload.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["payload.interface.ts:13",{"_index":536,"title":{},"body":{"classes/ClientPayload.html":{}}}],["payload.interface.ts:14",{"_index":1277,"title":{},"body":{"classes/UserPayload.html":{}}}],["payload.interface.ts:16",{"_index":537,"title":{},"body":{"classes/ClientPayload.html":{}}}],["payload.interface.ts:17",{"_index":539,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payload.interface.ts:18",{"_index":538,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payload.interface.ts:19",{"_index":540,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["payload.interface.ts:20",{"_index":1278,"title":{},"body":{"classes/UserPayload.html":{}}}],["payloads",{"_index":935,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["peer",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["pem",{"_index":723,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["pem.cert",{"_index":732,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["pem.private",{"_index":728,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["pem.public",{"_index":730,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["permission",{"_index":1022,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{},"coverage.html":{}}}],["permission.entity",{"_index":1029,"title":{},"body":{"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["permission.entity.ts",{"_index":1010,"title":{},"body":{"entities/PermissionEntity.html":{},"coverage.html":{}}}],["permission.entity.ts:17",{"_index":1019,"title":{},"body":{"entities/PermissionEntity.html":{}}}],["permission.entity.ts:20",{"_index":1017,"title":{},"body":{"entities/PermissionEntity.html":{}}}],["permission.entity.ts:25",{"_index":1013,"title":{},"body":{"entities/PermissionEntity.html":{}}}],["permission.entity.ts:28",{"_index":1015,"title":{},"body":{"entities/PermissionEntity.html":{}}}],["permission.slug",{"_index":1193,"title":{},"body":{"entities/RoleEntity.html":{}}}],["permissionentity",{"_index":396,"title":{"entities/PermissionEntity.html":{}},"body":{"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{},"coverage.html":{}}}],["permissiongroupentity",{"_index":397,"title":{"entities/PermissionGroupEntity.html":{}},"body":{"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"coverage.html":{}}}],["permissiongrouprepo",{"_index":405,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["permissionrepo",{"_index":403,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["permissions",{"_index":839,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["pick",{"_index":232,"title":{},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{}}}],["post",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"controllers/QueryController.html":{}}}],["post('list",{"_index":1079,"title":{},"body":{"controllers/QueryController.html":{}}}],["post('list')@version('1",{"_index":1049,"title":{},"body":{"controllers/QueryController.html":{}}}],["post('token",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@version('1",{"_index":1041,"title":{},"body":{"controllers/QueryController.html":{}}}],["primary",{"_index":59,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/System1705059848171.html":{}}}],["primarycolumn",{"_index":1021,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["primarycolumn('varchar",{"_index":1018,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{}}}],["primarygeneratedcolumn",{"_index":103,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":83,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{}}}],["private",{"_index":175,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{}}}],["private_key",{"_index":505,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["privatekey",{"_index":479,"title":{},"body":{"entities/ClientEntity.html":{}}}],["promise",{"_index":154,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"guards/EntityAccessorGuard.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"classes/RefreshTokenStrategy.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["properties",{"_index":14,"title":{"properties.html":{}},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"classes/ClientCreatedEvent.html":{},"entities/ClientEntity.html":{},"classes/ClientPayload.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"classes/UserPayload.html":{},"properties.html":{}}}],["propertykey",{"_index":793,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":891,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["provide",{"_index":294,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"modules/QueryModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":293,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"modules/QueryModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"modules/QueryModule.html":{},"injectables/QueryService.html":{},"classes/System1705059848171.html":{},"classes/UserPayload.html":{}}}],["public_key",{"_index":507,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["publickey",{"_index":480,"title":{},"body":{"entities/ClientEntity.html":{}}}],["published",{"_index":427,"title":{},"body":{"classes/ClientCreatedEvent.html":{}}}],["query",{"_index":234,"title":{},"body":{"interfaces/AdminConfig.html":{},"controllers/QueryController.html":{},"interfaces/ResourceDictonary.html":{}}}],["query/query.module",{"_index":286,"title":{},"body":{"modules/AdminModule.html":{}}}],["query_module_config_key",{"_index":1111,"title":{},"body":{"modules/QueryModule.html":{},"injectables/QueryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querybuilder",{"_index":1085,"title":{},"body":{"controllers/QueryController.html":{},"miscellaneous/variables.html":{}}}],["querybuilder.getcount",{"_index":1088,"title":{},"body":{"controllers/QueryController.html":{}}}],["querybuilder.getrawandentities",{"_index":1089,"title":{},"body":{"controllers/QueryController.html":{}}}],["querybuilder.orderby(field.field",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querybuilder.skip(options.skip).take(options.take",{"_index":1087,"title":{},"body":{"controllers/QueryController.html":{}}}],["querybuilder.where(filter",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["querycontroller",{"_index":1031,"title":{"controllers/QueryController.html":{}},"body":{"controllers/QueryController.html":{},"modules/QueryModule.html":{},"coverage.html":{}}}],["queryhandlers",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querymodule",{"_index":285,"title":{"modules/QueryModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/QueryModule.html":{},"modules.html":{}}}],["querymodule.forroot(options.query",{"_index":292,"title":{},"body":{"modules/AdminModule.html":{}}}],["queryoptions",{"_index":236,"title":{"interfaces/QueryOptions.html":{}},"body":{"interfaces/AdminConfig.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"injectables/QueryService.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{}}}],["queryorder",{"_index":623,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"miscellaneous/enumerations.html":{}}}],["queryorder.asc",{"_index":629,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["querypaginationresource",{"_index":1067,"title":{"classes/QueryPaginationResource.html":{}},"body":{"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"coverage.html":{}}}],["querypaginationresource(entities",{"_index":1098,"title":{},"body":{"controllers/QueryController.html":{}}}],["queryrunner",{"_index":1223,"title":{},"body":{"classes/System1705059848171.html":{}}}],["queryrunner.query(`alter",{"_index":1256,"title":{},"body":{"classes/System1705059848171.html":{}}}],["queryrunner.query(`create",{"_index":1227,"title":{},"body":{"classes/System1705059848171.html":{}}}],["queryrunner.query(`drop",{"_index":1255,"title":{},"body":{"classes/System1705059848171.html":{}}}],["queryrunner.query(`insert",{"_index":1252,"title":{},"body":{"classes/System1705059848171.html":{}}}],["queryservice",{"_index":749,"title":{"injectables/QueryService.html":{}},"body":{"guards/EntityAccessorGuard.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"injectables/QueryService.html":{},"coverage.html":{}}}],["readonly",{"_index":16,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/UserPayload.html":{}}}],["readpermission",{"_index":778,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"injectables/QueryService.html":{}}}],["redninjas",{"_index":1385,"title":{},"body":{"properties.html":{}}}],["reduce((a",{"_index":960,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["referencedcolumnname",{"_index":73,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["references",{"_index":1250,"title":{},"body":{"classes/System1705059848171.html":{}}}],["reflect",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["reflect.definemetadata",{"_index":794,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/variables.html":{}}}],["reflect.definemetadata(oauth2_strategy_metadata",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect.getmetadata",{"_index":1169,"title":{},"body":{"injectables/QueryService.html":{}}}],["reflect.getmetadata(metadatakey",{"_index":971,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["reflect.getmetadata(oauth2_strategy_metadata",{"_index":928,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["reflect.hasmetadata",{"_index":1164,"title":{},"body":{"injectables/QueryService.html":{}}}],["reflector",{"_index":280,"title":{},"body":{"modules/AdminModule.html":{}}}],["reflectstrategyname",{"_index":890,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["reflectstrategyname(strategy",{"_index":897,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["refresh",{"_index":137,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["refresh_token",{"_index":85,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/System1705059848171.html":{}}}],["refresh_token\"'})@expose({name",{"_index":837,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["refresh_token_expires_at",{"_index":88,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/System1705059848171.html":{}}}],["refresh_token_lifetime",{"_index":509,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["refreshtoken",{"_index":21,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["refreshtokenexp",{"_index":850,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["refreshtokenexpiresat",{"_index":22,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{}}}],["refreshtokenlifetime",{"_index":481,"title":{},"body":{"entities/ClientEntity.html":{},"classes/CreateClientCommand.html":{}}}],["refreshtokenstrategy",{"_index":359,"title":{"classes/RefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":197,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"modules/AuthModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["register(strategies",{"_index":900,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["registered",{"_index":880,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["registerentity",{"_index":1126,"title":{},"body":{"injectables/QueryService.html":{}}}],["registerentity(schemaname",{"_index":1142,"title":{},"body":{"injectables/QueryService.html":{}}}],["registerstrategy",{"_index":892,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["registerstrategy(strategy",{"_index":902,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["registry",{"_index":889,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["relations",{"_index":179,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["remove",{"_index":668,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"controllers/QueryController.html":{}}}],["remove(@param('id",{"_index":1107,"title":{},"body":{"controllers/QueryController.html":{}}}],["remove(id",{"_index":1057,"title":{},"body":{"controllers/QueryController.html":{}}}],["rename",{"_index":1257,"title":{},"body":{"classes/System1705059848171.html":{}}}],["repo",{"_index":1083,"title":{},"body":{"controllers/QueryController.html":{}}}],["repo.createquerybuilder",{"_index":1086,"title":{},"body":{"controllers/QueryController.html":{}}}],["repository",{"_index":150,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"injectables/QueryService.html":{},"properties.html":{}}}],["repository.interface",{"_index":172,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"controllers/AuthController.html":{},"injectables/ClientRepository.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["repository.interface.ts",{"_index":189,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{},"coverage.html":{}}}],["repository.interface.ts:15",{"_index":199,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["repository.interface.ts:24",{"_index":201,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["repository.interface.ts:31",{"_index":196,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{}}}],["repository.interface.ts:33",{"_index":574,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["repository.interface.ts:40",{"_index":572,"title":{},"body":{"interfaces/ClientRepositoryInterface.html":{}}}],["represents",{"_index":532,"title":{},"body":{"classes/ClientPayload.html":{},"classes/UserPayload.html":{}}}],["request",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"guards/EntityAccessorGuard.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["request.clientsecret",{"_index":451,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["request.dto",{"_index":107,"title":{},"body":{"entities/AccessTokenEntity.html":{},"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["request.dto.ts",{"_index":807,"title":{},"body":{"classes/OAuth2Request.html":{},"coverage.html":{}}}],["request.dto.ts:17",{"_index":831,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:26",{"_index":814,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:34",{"_index":816,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:42",{"_index":828,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:50",{"_index":833,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:59",{"_index":842,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:67",{"_index":838,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:74",{"_index":843,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.dto.ts:81",{"_index":836,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["request.exp",{"_index":465,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["request.granttype",{"_index":923,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["request.iat",{"_index":466,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["request.params",{"_index":761,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["request.password",{"_index":1007,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["request.refreshtoken",{"_index":1187,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["request.scopes",{"_index":459,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["request.username",{"_index":1006,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["requested",{"_index":865,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["requestedexp",{"_index":679,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["requesting",{"_index":829,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["requests",{"_index":841,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["requests/oauth2",{"_index":106,"title":{},"body":{"entities/AccessTokenEntity.html":{},"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenCommand.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["requests/requests",{"_index":986,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["requestscopes",{"_index":457,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["requestscopes.every(scope",{"_index":460,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["required",{"_index":812,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["reset",{"_index":392,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}],["resolvers",{"_index":368,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["resourcedictonary",{"_index":238,"title":{"interfaces/ResourceDictonary.html":{}},"body":{"interfaces/AdminConfig.html":{},"injectables/QueryService.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resources",{"_index":548,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["resources/oauth2",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["response",{"_index":884,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["response.dto",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["response.dto.ts",{"_index":848,"title":{},"body":{"classes/OAuth2Response.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":855,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:22",{"_index":869,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:30",{"_index":861,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:38",{"_index":860,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:47",{"_index":863,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["response.dto.ts:55",{"_index":852,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["results",{"_index":46,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":134,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":126,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientNotFoundException.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/InvalidUserException.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"classes/PasswordStrategy.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["role",{"_index":578,"title":{},"body":{"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{}}}],["role.entity",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{}}}],["role.entity.ts",{"_index":1191,"title":{},"body":{"entities/RoleEntity.html":{},"coverage.html":{}}}],["role.entity.ts:14",{"_index":1192,"title":{},"body":{"entities/RoleEntity.html":{}}}],["role.entity.ts:17",{"_index":1194,"title":{},"body":{"entities/RoleEntity.html":{}}}],["role.entity.ts:9",{"_index":1195,"title":{},"body":{"entities/RoleEntity.html":{}}}],["role.slug",{"_index":582,"title":{},"body":{"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{}}}],["roleentity",{"_index":354,"title":{"entities/RoleEntity.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/RoleEntity.html":{},"coverage.html":{}}}],["rolerepo",{"_index":402,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["roles",{"_index":420,"title":{},"body":{"injectables/AuthSeedingService.html":{},"miscellaneous/variables.html":{}}}],["roles.entity.ts",{"_index":576,"title":{},"body":{"entities/ClientRolesEntity.html":{},"coverage.html":{}}}],["roles.entity.ts:16",{"_index":579,"title":{},"body":{"entities/ClientRolesEntity.html":{}}}],["roles.entity.ts:19",{"_index":583,"title":{},"body":{"entities/ClientRolesEntity.html":{}}}],["roles.entity.ts:22",{"_index":580,"title":{},"body":{"entities/ClientRolesEntity.html":{}}}],["roleslug",{"_index":1242,"title":{},"body":{"classes/System1705059848171.html":{}}}],["root",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["run",{"_index":400,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["rxjs",{"_index":756,"title":{},"body":{"guards/EntityAccessorGuard.html":{},"dependencies.html":{}}}],["s",{"_index":914,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["sagas",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":768,"title":{},"body":{"guards/EntityAccessorGuard.html":{},"controllers/QueryController.html":{},"injectables/QueryService.html":{}}}],["schema.type",{"_index":1147,"title":{},"body":{"injectables/QueryService.html":{}}}],["schema_access_tokens",{"_index":1244,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_access_tokens\"(\"id",{"_index":1264,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_auth_client_roles",{"_index":1240,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_auth_client_roles\"(\"id",{"_index":1265,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_auth_clients",{"_index":1229,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_auth_permission_groups",{"_index":1235,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_auth_permissions",{"_index":1238,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_auth_permissions\"(\"slug",{"_index":1266,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schema_auth_roles",{"_index":1237,"title":{},"body":{"classes/System1705059848171.html":{}}}],["schemaname",{"_index":1144,"title":{},"body":{"injectables/QueryService.html":{}}}],["scope",{"_index":23,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/OAuth2Response.html":{},"classes/System1705059848171.html":{}}}],["scopes",{"_index":455,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["scopes.includes(scope",{"_index":461,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{}}}],["seconds",{"_index":820,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["seeding.module.ts",{"_index":395,"title":{},"body":{"modules/AuthSeedingModule.html":{}}}],["seeding.service",{"_index":398,"title":{},"body":{"modules/AuthSeedingModule.html":{}}}],["seeding.service.ts",{"_index":399,"title":{},"body":{"injectables/AuthSeedingService.html":{},"coverage.html":{}}}],["seeding.service.ts:18",{"_index":404,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["seeding.service.ts:29",{"_index":406,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["select",{"_index":1254,"title":{},"body":{"classes/System1705059848171.html":{}}}],["selectquerybuilder",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selfsigned",{"_index":705,"title":{},"body":{"classes/CreateClientHandler.html":{},"dependencies.html":{}}}],["selfsigned.generate(attrs",{"_index":724,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["servicenames",{"_index":367,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/query.service",{"_index":757,"title":{},"body":{"guards/EntityAccessorGuard.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{}}}],["services/strategy.registry",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["set",{"_index":834,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["shall",{"_index":667,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["simple",{"_index":499,"title":{},"body":{"entities/ClientEntity.html":{}}}],["simplequeryrequest",{"_index":589,"title":{"classes/SimpleQueryRequest.html":{}},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"coverage.html":{}}}],["simplequeryrequest:35",{"_index":606,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["simplequeryrequest:47",{"_index":611,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["single",{"_index":904,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["skip",{"_index":633,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["slug",{"_index":416,"title":{},"body":{"injectables/AuthSeedingService.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{},"classes/System1705059848171.html":{}}}],["sort",{"_index":591,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["sortablerequest",{"_index":600,"title":{"classes/SortableRequest.html":{}},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["specified",{"_index":819,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["src/.../access",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.constants.ts",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decorators.ts",{"_index":1353,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../entity",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../oauth2",{"_index":1354,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../query",{"_index":1355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../strategy.explorer.ts",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../strategy.registry.ts",{"_index":1388,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/admin.config.ts",{"_index":231,"title":{},"body":{"interfaces/AdminConfig.html":{},"interfaces/ResourceDictonary.html":{},"coverage.html":{}}}],["src/admin.config.ts:6",{"_index":1190,"title":{},"body":{"interfaces/ResourceDictonary.html":{}}}],["src/admin.module.ts",{"_index":258,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin.module.ts:31",{"_index":262,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin.module.ts:33",{"_index":271,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin.module.ts:37",{"_index":267,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/auth/auth.constants.ts",{"_index":1294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.module.ts:133",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.module.ts:76",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/commands/create",{"_index":638,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"coverage.html":{}}}],["src/auth/constants/index.ts",{"_index":1301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/controllers/auth.controller.ts",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/controllers/auth.controller.ts:38",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/decorators/access",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/oauth2",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/entities/accoss",{"_index":51,"title":{},"body":{"entities/AccessTokenEntity.html":{},"coverage.html":{}}}],["src/auth/entities/auth",{"_index":1009,"title":{},"body":{"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"entities/RoleEntity.html":{},"coverage.html":{}}}],["src/auth/entities/client",{"_index":575,"title":{},"body":{"entities/ClientRolesEntity.html":{},"coverage.html":{}}}],["src/auth/entities/client.entity.ts",{"_index":473,"title":{},"body":{"entities/ClientEntity.html":{},"coverage.html":{}}}],["src/auth/entities/client.entity.ts:10",{"_index":504,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:13",{"_index":492,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:16",{"_index":494,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:24",{"_index":502,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:31",{"_index":513,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:34",{"_index":485,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:37",{"_index":511,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:40",{"_index":506,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:43",{"_index":508,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:46",{"_index":488,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:49",{"_index":491,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:57",{"_index":496,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:60",{"_index":498,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/entities/client.entity.ts:7",{"_index":503,"title":{},"body":{"entities/ClientEntity.html":{}}}],["src/auth/events/access",{"_index":6,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"coverage.html":{}}}],["src/auth/events/client",{"_index":426,"title":{},"body":{"classes/ClientCreatedEvent.html":{},"coverage.html":{}}}],["src/auth/exceptions/access",{"_index":110,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"coverage.html":{}}}],["src/auth/exceptions/client",{"_index":521,"title":{},"body":{"classes/ClientNotFoundException.html":{},"coverage.html":{}}}],["src/auth/exceptions/invalid",{"_index":796,"title":{},"body":{"classes/InvalidUserException.html":{},"coverage.html":{}}}],["src/auth/interfaces/access",{"_index":188,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/client",{"_index":530,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/oauth2",{"_index":876,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2OptionsFactoryInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/interfaces/user",{"_index":1270,"title":{},"body":{"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["src/auth/interfaces/user.interface.ts",{"_index":1268,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/auth/loader.ts",{"_index":242,"title":{},"body":{"injectables/AdminLoader.html":{},"coverage.html":{}}}],["src/auth/loader.ts:6",{"_index":246,"title":{},"body":{"injectables/AdminLoader.html":{}}}],["src/auth/repository/access",{"_index":141,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"coverage.html":{}}}],["src/auth/repository/client.repository.ts",{"_index":549,"title":{},"body":{"injectables/ClientRepository.html":{},"coverage.html":{}}}],["src/auth/repository/client.repository.ts:15",{"_index":558,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:25",{"_index":560,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:39",{"_index":562,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:53",{"_index":554,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:57",{"_index":556,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/repository/client.repository.ts:9",{"_index":552,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/auth/requests/oauth2",{"_index":806,"title":{},"body":{"classes/OAuth2Request.html":{},"coverage.html":{}}}],["src/auth/resources/oauth2",{"_index":847,"title":{},"body":{"classes/OAuth2Response.html":{},"coverage.html":{}}}],["src/auth/seeds/auth",{"_index":394,"title":{},"body":{"modules/AuthSeedingModule.html":{},"injectables/AuthSeedingService.html":{},"coverage.html":{}}}],["src/auth/services/strategy.explorer.ts",{"_index":942,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/services/strategy.explorer.ts:14",{"_index":1207,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:17",{"_index":1208,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:27",{"_index":1213,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:37",{"_index":1211,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.explorer.ts:48",{"_index":1209,"title":{},"body":{"injectables/StrategyExplorer.html":{}}}],["src/auth/services/strategy.registry.ts",{"_index":888,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/auth/services/strategy.registry.ts:19",{"_index":895,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:28",{"_index":903,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:43",{"_index":901,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:53",{"_index":905,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:73",{"_index":896,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/services/strategy.registry.ts:90",{"_index":899,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["src/auth/strategies/access",{"_index":204,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/client",{"_index":430,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/password.strategy.ts",{"_index":998,"title":{},"body":{"classes/PasswordStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/password.strategy.ts:16",{"_index":1000,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["src/auth/strategies/password.strategy.ts:32",{"_index":1002,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["src/auth/strategies/password.strategy.ts:47",{"_index":1001,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["src/auth/strategies/refresh",{"_index":1181,"title":{},"body":{"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/types/oauth2",{"_index":1390,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/constants.ts",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/migrations/1705059848171",{"_index":1216,"title":{},"body":{"classes/System1705059848171.html":{},"coverage.html":{}}}],["src/query/constants/index.ts",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/query/controllers/query.controller.ts",{"_index":1032,"title":{},"body":{"controllers/QueryController.html":{},"coverage.html":{}}}],["src/query/controllers/query.controller.ts:104",{"_index":1047,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/controllers/query.controller.ts:110",{"_index":1063,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/controllers/query.controller.ts:118",{"_index":1059,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/controllers/query.controller.ts:39",{"_index":1042,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/controllers/query.controller.ts:43",{"_index":1050,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/controllers/query.controller.ts:74",{"_index":1053,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/controllers/query.controller.ts:91",{"_index":1044,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/controllers/query.controller.ts:97",{"_index":1056,"title":{},"body":{"controllers/QueryController.html":{}}}],["src/query/decorators.ts",{"_index":773,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/query/decorators/entity",{"_index":1332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/query/guards/acccesor.guard.ts",{"_index":746,"title":{},"body":{"guards/EntityAccessorGuard.html":{},"coverage.html":{}}}],["src/query/guards/acccesor.guard.ts:12",{"_index":750,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["src/query/guards/acccesor.guard.ts:16",{"_index":753,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["src/query/helpers/index.ts",{"_index":1334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/query/interfaces/query",{"_index":1113,"title":{},"body":{"interfaces/QueryOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/query/query.module.ts",{"_index":1108,"title":{},"body":{"modules/QueryModule.html":{}}}],["src/query/query.module.ts:11",{"_index":1109,"title":{},"body":{"modules/QueryModule.html":{}}}],["src/query/requests/requests.ts",{"_index":588,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"coverage.html":{}}}],["src/query/requests/requests.ts:19",{"_index":1202,"title":{},"body":{"classes/SortableRequest.html":{}}}],["src/query/requests/requests.ts:23",{"_index":1204,"title":{},"body":{"classes/SortableRequest.html":{}}}],["src/query/requests/requests.ts:35",{"_index":1198,"title":{},"body":{"classes/SimpleQueryRequest.html":{}}}],["src/query/requests/requests.ts:47",{"_index":1199,"title":{},"body":{"classes/SimpleQueryRequest.html":{}}}],["src/query/requests/requests.ts:49",{"_index":1201,"title":{},"body":{"classes/SimpleQueryRequest.html":{}}}],["src/query/requests/requests.ts:57",{"_index":770,"title":{},"body":{"classes/FilterableRequest.html":{}}}],["src/query/requests/requests.ts:62",{"_index":771,"title":{},"body":{"classes/FilterableRequest.html":{}}}],["src/query/requests/requests.ts:71",{"_index":602,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["src/query/requests/requests.ts:77",{"_index":599,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["src/query/resources/resources.ts",{"_index":973,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"coverage.html":{}}}],["src/query/resources/resources.ts:12",{"_index":983,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/query/resources/resources.ts:15",{"_index":985,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/query/resources/resources.ts:18",{"_index":982,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/query/resources/resources.ts:21",{"_index":984,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/query/resources/resources.ts:24",{"_index":981,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/query/resources/resources.ts:27",{"_index":980,"title":{},"body":{"classes/PaginationMeta.html":{}}}],["src/query/resources/resources.ts:42",{"_index":1118,"title":{},"body":{"classes/QueryPaginationResource.html":{}}}],["src/query/resources/resources.ts:45",{"_index":1116,"title":{},"body":{"classes/QueryPaginationResource.html":{}}}],["src/query/services/query.service.ts",{"_index":1119,"title":{},"body":{"injectables/QueryService.html":{},"coverage.html":{}}}],["src/query/services/query.service.ts:15",{"_index":1129,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/query/services/query.service.ts:27",{"_index":1141,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/query/services/query.service.ts:31",{"_index":1131,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/query/services/query.service.ts:38",{"_index":1135,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/query/services/query.service.ts:81",{"_index":1133,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/query/services/query.service.ts:89",{"_index":1138,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/query/services/query.service.ts:93",{"_index":1137,"title":{},"body":{"injectables/QueryService.html":{}}}],["src/query/services/query.service.ts:98",{"_index":1143,"title":{},"body":{"injectables/QueryService.html":{}}}],["started",{"_index":1360,"title":{"index.html":{}},"body":{}}],["starts_or_ends",{"_index":783,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/enumerations.html":{}}}],["starts_with",{"_index":782,"title":{},"body":{"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":118,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"modules/AdminModule.html":{},"modules/AuthModule.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{},"modules/QueryModule.html":{}}}],["still",{"_index":936,"title":{},"body":{"interfaces/Oauth2PayloadInterface.html":{}}}],["storage",{"_index":198,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{}}}],["store",{"_index":545,"title":{},"body":{"classes/ClientPayload.html":{},"interfaces/ClientRepositoryInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["strategies",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["strategies.foreach(strategy",{"_index":921,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategy",{"_index":207,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategy.decorator",{"_index":444,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["strategy.decorator.ts",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy.explorer",{"_index":911,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategy.interface",{"_index":913,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["strategy.interface.ts",{"_index":877,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"coverage.html":{}}}],["strategy.interface.ts:16",{"_index":885,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["strategy.interface.ts:24",{"_index":883,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["strategyexplorer",{"_index":344,"title":{"injectables/StrategyExplorer.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategyname",{"_index":918,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["strategyregistry",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["strict",{"_index":917,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"interfaces/QueryOptions.html":{},"injectables/QueryService.html":{},"interfaces/ResourceDictonary.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":227,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["support",{"_index":1364,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1365,"title":{},"body":{"modules.html":{}}}],["system",{"_index":418,"title":{},"body":{"injectables/AuthSeedingService.html":{},"miscellaneous/variables.html":{}}}],["system.ts",{"_index":1217,"title":{},"body":{"classes/System1705059848171.html":{},"coverage.html":{}}}],["system.ts:27",{"_index":1224,"title":{},"body":{"classes/System1705059848171.html":{}}}],["system.ts:4",{"_index":1221,"title":{},"body":{"classes/System1705059848171.html":{}}}],["system.ts:6",{"_index":1226,"title":{},"body":{"classes/System1705059848171.html":{}}}],["system1705059848171",{"_index":1215,"title":{"classes/System1705059848171.html":{}},"body":{"classes/System1705059848171.html":{},"coverage.html":{}}}],["t",{"_index":240,"title":{},"body":{"interfaces/AdminConfig.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"controllers/QueryController.html":{},"classes/QueryPaginationResource.html":{},"interfaces/ResourceDictonary.html":{},"injectables/StrategyExplorer.html":{}}}],["table",{"_index":1228,"title":{},"body":{"classes/System1705059848171.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":593,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["target",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["temporary_schema_access_tokens",{"_index":1261,"title":{},"body":{"classes/System1705059848171.html":{}}}],["temporary_schema_access_tokens\"(\"id",{"_index":1263,"title":{},"body":{"classes/System1705059848171.html":{}}}],["temporary_schema_auth_client_roles",{"_index":1258,"title":{},"body":{"classes/System1705059848171.html":{}}}],["temporary_schema_auth_client_roles\"(\"id",{"_index":1260,"title":{},"body":{"classes/System1705059848171.html":{}}}],["temporary_schema_auth_permissions",{"_index":1247,"title":{},"body":{"classes/System1705059848171.html":{}}}],["temporary_schema_auth_permissions\"(\"slug",{"_index":1253,"title":{},"body":{"classes/System1705059848171.html":{}}}],["term",{"_index":636,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["text",{"_index":487,"title":{},"body":{"entities/ClientEntity.html":{},"classes/System1705059848171.html":{}}}],["third",{"_index":515,"title":{},"body":{"entities/ClientEntity.html":{}}}],["this._resources",{"_index":1152,"title":{},"body":{"injectables/QueryService.html":{}}}],["this._resources[schema",{"_index":1177,"title":{},"body":{"injectables/QueryService.html":{}}}],["this._resources[schemaname",{"_index":1180,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.accesstoken",{"_index":871,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.accesstokenexp",{"_index":873,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.accesstokenrepository.findbyaccesstoken",{"_index":228,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["this.accesstokenrepository.findbyrefreshtoken",{"_index":1186,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["this.clientrepository.create(client",{"_index":736,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["this.clientrepository.find",{"_index":664,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["this.clientrepository.findbyclientid(request.clientid",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.commandbus.execute",{"_index":462,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["this.data",{"_index":996,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["this.datasource.getrepository(_schema",{"_index":1179,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.eventbus.publish",{"_index":738,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["this.explorerservice.explore",{"_index":381,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.extractmetadata(instance",{"_index":967,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.filterprovider(instance",{"_index":954,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.flatmap",{"_index":953,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.getmetadatafields(schema",{"_index":1175,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.getrepository(schema",{"_index":1156,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.getschema(schema",{"_index":1178,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.hasnextpage",{"_index":993,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["this.haspreviouspage",{"_index":992,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["this.itemcount",{"_index":989,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["this.logger.log('admin",{"_index":251,"title":{},"body":{"injectables/AdminLoader.html":{},"modules/AdminModule.html":{}}}],["this.logger.log('authmodule",{"_index":380,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.meta",{"_index":997,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["this.moduleref.get(strategy",{"_index":916,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.modulescontainer.values",{"_index":952,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["this.options.adminrolename",{"_index":1150,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.options.entities",{"_index":1153,"title":{},"body":{"injectables/QueryService.html":{}}}],["this.page",{"_index":634,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["this.pagecount",{"_index":990,"title":{},"body":{"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{}}}],["this.permissiongrouprepo.save",{"_index":415,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["this.permissionrepo.save",{"_index":419,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["this.queryservice.getmetadatafields(schema",{"_index":1082,"title":{},"body":{"controllers/QueryController.html":{}}}],["this.queryservice.getrepository(schema",{"_index":1084,"title":{},"body":{"controllers/QueryController.html":{}}}],["this.queryservice.hasschema(params.entity",{"_index":766,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["this.reflectstrategyname(strategy",{"_index":919,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.refreshtoken",{"_index":872,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.refreshtokenexp",{"_index":874,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.registerstrategy(strategy",{"_index":922,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry",{"_index":924,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry[request.granttype].getoauth2response",{"_index":927,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry[request.granttype].validate(request",{"_index":926,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.registry[strategyname",{"_index":920,"title":{},"body":{"injectables/Oauth2GrantStrategyRegistry.html":{}}}],["this.repository.delete(accesstoken.id",{"_index":184,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["this.repository.delete(id",{"_index":185,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["this.repository.findone",{"_index":178,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"injectables/ClientRepository.html":{}}}],["this.repository.findoneby",{"_index":565,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["this.repository.save(accesstoken",{"_index":183,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["this.repository.save(client",{"_index":569,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["this.rolerepo.save",{"_index":423,"title":{},"body":{"injectables/AuthSeedingService.html":{}}}],["this.scope",{"_index":875,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["this.strategyregistry.getoauth2response(request",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.strategyregistry.register(strategies",{"_index":382,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.strategyregistry.validate(request",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.take",{"_index":635,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["this.uservalidator.validate",{"_index":1005,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["throw",{"_index":180,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"controllers/AuthController.html":{},"injectables/ClientRepository.html":{},"guards/EntityAccessorGuard.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"miscellaneous/variables.html":{}}}],["thrown",{"_index":113,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["throws",{"_index":202,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["time",{"_index":817,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["time.'})@expose({name",{"_index":827,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["toekn",{"_index":136,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["token",{"_index":7,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2PayloadInterface.html":{},"controllers/QueryController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token(@body",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["token(request",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.command",{"_index":447,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["token.command.ts",{"_index":639,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{},"coverage.html":{}}}],["token.command.ts:10",{"_index":648,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:11",{"_index":645,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:12",{"_index":646,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:13",{"_index":647,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:14",{"_index":649,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:7",{"_index":643,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.command.ts:9",{"_index":644,"title":{},"body":{"classes/CreateAccessTokenCommand.html":{}}}],["token.entity",{"_index":167,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"classes/ClientCredentialsStrategy.html":{},"classes/ClientPayload.html":{},"classes/CreateAccessTokenHandler.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"classes/UserPayload.html":{}}}],["token.entity.ts",{"_index":52,"title":{},"body":{"entities/AccessTokenEntity.html":{},"coverage.html":{}}}],["token.entity.ts:14",{"_index":84,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:22",{"_index":65,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:30",{"_index":87,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:33",{"_index":68,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:36",{"_index":89,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:40",{"_index":74,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:43",{"_index":98,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:49",{"_index":92,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:56",{"_index":78,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.entity.ts:59",{"_index":82,"title":{},"body":{"entities/AccessTokenEntity.html":{}}}],["token.handler.ts",{"_index":650,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"coverage.html":{}}}],["token.handler.ts:14",{"_index":654,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["token.handler.ts:28",{"_index":656,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{}}}],["token.repository.ts",{"_index":142,"title":{},"body":{"injectables/AccessTokenRepository.html":{},"coverage.html":{}}}],["token.repository.ts:10",{"_index":151,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:16",{"_index":160,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:31",{"_index":162,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:46",{"_index":153,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:50",{"_index":156,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.repository.ts:54",{"_index":158,"title":{},"body":{"injectables/AccessTokenRepository.html":{}}}],["token.strategy.ts",{"_index":205,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:16",{"_index":212,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:31",{"_index":214,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["token.strategy.ts:32",{"_index":1183,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["token.strategy.ts:47",{"_index":1182,"title":{},"body":{"classes/RefreshTokenStrategy.html":{}}}],["token_type",{"_index":868,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["tokens",{"_index":194,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"classes/CreateAccessTokenHandler.html":{}}}],["tokentype",{"_index":851,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["tpapps",{"_index":840,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["transform",{"_index":297,"title":{},"body":{"modules/AdminModule.html":{}}}],["transformer",{"_index":614,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"dependencies.html":{}}}],["transport",{"_index":808,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["true",{"_index":60,"title":{},"body":{"entities/AccessTokenEntity.html":{},"modules/AdminModule.html":{},"entities/ClientEntity.html":{},"classes/ComplexQueryRequest.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"classes/QueryPaginationResource.html":{},"classes/RefreshTokenStrategy.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"miscellaneous/variables.html":{}}}],["true})@exclude",{"_index":862,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["true})@expose({name",{"_index":815,"title":{},"body":{"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{}}}],["true})@isarray()@type(undefined",{"_index":601,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["true})@isnotempty()@expose({name",{"_index":813,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["true})@isoptional()@validatenested({each",{"_index":597,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["true})@type(undefined",{"_index":598,"title":{},"body":{"classes/ComplexQueryRequest.html":{}}}],["type",{"_index":35,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenRepository.html":{},"interfaces/AccessTokenRepositoryInterface.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/AdminConfig.html":{},"injectables/AdminLoader.html":{},"modules/AdminModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthSeedingService.html":{},"classes/ClientCreatedEvent.html":{},"classes/ClientCredentialsStrategy.html":{},"entities/ClientEntity.html":{},"classes/ClientNotFoundException.html":{},"classes/ClientPayload.html":{},"injectables/ClientRepository.html":{},"interfaces/ClientRepositoryInterface.html":{},"entities/ClientRolesEntity.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientCommand.html":{},"classes/CreateClientHandler.html":{},"guards/EntityAccessorGuard.html":{},"classes/FilterableRequest.html":{},"interfaces/IEntityAccessorOptions.html":{},"interfaces/ITypeOrmAddionalFields.html":{},"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{},"interfaces/Oauth2StrategyOptions.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/PasswordStrategy.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"controllers/QueryController.html":{},"modules/QueryModule.html":{},"interfaces/QueryOptions.html":{},"classes/QueryPaginationResource.html":{},"injectables/QueryService.html":{},"classes/RefreshTokenStrategy.html":{},"entities/RoleEntity.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"injectables/StrategyExplorer.html":{},"classes/System1705059848171.html":{},"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1386,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":458,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"classes/PasswordStrategy.html":{}}}],["typeorm",{"_index":104,"title":{},"body":{"entities/AccessTokenEntity.html":{},"injectables/AccessTokenRepository.html":{},"injectables/AuthSeedingService.html":{},"entities/ClientEntity.html":{},"injectables/ClientRepository.html":{},"entities/ClientRolesEntity.html":{},"entities/PermissionEntity.html":{},"entities/PermissionGroupEntity.html":{},"injectables/QueryService.html":{},"entities/RoleEntity.html":{},"classes/System1705059848171.html":{}}}],["typeormmodule",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{}}}],["typeormmodule.forfeature",{"_index":379,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthSeedingModule.html":{}}}],["types",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/Oauth2PayloadInterface.html":{},"miscellaneous/enumerations.html":{}}}],["types/oauth2",{"_index":933,"title":{},"body":{"interfaces/Oauth2OptionsFactoryInterface.html":{}}}],["unauthorizedexception",{"_index":127,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"injectables/AccessTokenStrategy.html":{},"classes/ClientNotFoundException.html":{},"guards/EntityAccessorGuard.html":{},"classes/InvalidUserException.html":{},"classes/RefreshTokenStrategy.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('cant",{"_index":764,"title":{},"body":{"guards/EntityAccessorGuard.html":{}}}],["undefined",{"_index":763,"title":{},"body":{"guards/EntityAccessorGuard.html":{},"interfaces/Oauth2StrategyOptions.html":{},"controllers/QueryController.html":{},"injectables/QueryService.html":{},"injectables/StrategyExplorer.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":86,"title":{},"body":{"entities/AccessTokenEntity.html":{},"entities/ClientEntity.html":{},"entities/ClientRolesEntity.html":{},"classes/System1705059848171.html":{}}}],["unique(['clientid",{"_index":519,"title":{},"body":{"entities/ClientEntity.html":{}}}],["unique(['role",{"_index":585,"title":{},"body":{"entities/ClientRolesEntity.html":{}}}],["unknown",{"_index":658,"title":{},"body":{"classes/CreateAccessTokenHandler.html":{},"classes/CreateClientHandler.html":{}}}],["until",{"_index":856,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["up",{"_index":1220,"title":{},"body":{"classes/System1705059848171.html":{}}}],["up(queryrunner",{"_index":1225,"title":{},"body":{"classes/System1705059848171.html":{}}}],["update",{"_index":1038,"title":{},"body":{"controllers/QueryController.html":{},"classes/System1705059848171.html":{}}}],["update(id",{"_index":1060,"title":{},"body":{"controllers/QueryController.html":{}}}],["updateuserdto",{"_index":1061,"title":{},"body":{"controllers/QueryController.html":{}}}],["uq_45bc4feb7bc791056dccef8823d",{"_index":1234,"title":{},"body":{"classes/System1705059848171.html":{}}}],["uq_c2315c06123b7886476f14499fb",{"_index":1246,"title":{},"body":{"classes/System1705059848171.html":{}}}],["uq_d8ed48b2353e2dc8693c867afa2",{"_index":1243,"title":{},"body":{"classes/System1705059848171.html":{}}}],["use",{"_index":864,"title":{},"body":{"classes/OAuth2Response.html":{}}}],["useclass",{"_index":366,"title":{},"body":{"modules/AuthModule.html":{},"modules/QueryModule.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":686,"title":{},"body":{"classes/CreateClientCommand.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["usefactory",{"_index":296,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{}}}],["useguards(authguard('access",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards(entityaccessorguard",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useinterceptors",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":422,"title":{},"body":{"injectables/AuthSeedingService.html":{},"classes/ClientPayload.html":{},"classes/InvalidUserException.html":{},"interfaces/Oauth2PayloadInterface.html":{},"classes/PasswordStrategy.html":{},"interfaces/UserLoaderInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.exception.ts",{"_index":797,"title":{},"body":{"classes/InvalidUserException.html":{},"coverage.html":{}}}],["user.exception.ts:13",{"_index":804,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["user.exception.ts:27",{"_index":801,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["user.id",{"_index":1008,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["user.interface",{"_index":1276,"title":{},"body":{"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{}}}],["user_id",{"_index":97,"title":{},"body":{"entities/AccessTokenEntity.html":{},"classes/System1705059848171.html":{}}}],["userid",{"_index":25,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"entities/AccessTokenEntity.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/InvalidUserException.html":{},"interfaces/UserLoaderInterface.html":{}}}],["userinterface",{"_index":1267,"title":{"interfaces/UserInterface.html":{}},"body":{"interfaces/UserInterface.html":{},"interfaces/UserLoaderInterface.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["userloader",{"_index":210,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["userloaderinterface",{"_index":211,"title":{"interfaces/UserLoaderInterface.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"interfaces/UserLoaderInterface.html":{},"coverage.html":{}}}],["userloaderprovider",{"_index":374,"title":{},"body":{"modules/AuthModule.html":{}}}],["username",{"_index":805,"title":{},"body":{"classes/InvalidUserException.html":{},"classes/OAuth2Request.html":{},"interfaces/UserInterface.html":{},"classes/UserPayload.html":{},"interfaces/UserValidatorInterface.html":{}}}],["usernanme",{"_index":1283,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["userpayload",{"_index":223,"title":{"classes/UserPayload.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"classes/UserPayload.html":{},"coverage.html":{}}}],["uservalidator",{"_index":999,"title":{},"body":{"classes/PasswordStrategy.html":{}}}],["uservalidatorinterface",{"_index":377,"title":{"interfaces/UserValidatorInterface.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordStrategy.html":{},"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["uservalidatorprovider",{"_index":376,"title":{},"body":{"modules/AuthModule.html":{}}}],["usevalue",{"_index":295,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"modules/QueryModule.html":{}}}],["using",{"_index":216,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"interfaces/ClientRepositoryInterface.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["utc",{"_index":822,"title":{},"body":{"classes/OAuth2Request.html":{}}}],["uuid",{"_index":704,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["uuidv4",{"_index":703,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["v4",{"_index":702,"title":{},"body":{"classes/CreateClientHandler.html":{}}}],["valid",{"_index":886,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{}}}],["validate",{"_index":208,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{},"interfaces/UserValidatorInterface.html":{}}}],["validate(bearer",{"_index":213,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["validate(request",{"_index":439,"title":{},"body":{"classes/ClientCredentialsStrategy.html":{},"interfaces/Oauth2GrantStrategyInterface.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/PasswordStrategy.html":{},"classes/RefreshTokenStrategy.html":{}}}],["validate(username",{"_index":1285,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["validatenested",{"_index":621,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{}}}],["validates",{"_index":1282,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["validationpipe",{"_index":275,"title":{},"body":{"modules/AdminModule.html":{}}}],["validator",{"_index":622,"title":{},"body":{"classes/ComplexQueryRequest.html":{},"classes/FilterableRequest.html":{},"classes/OAuth2Request.html":{},"classes/PaginationMeta.html":{},"interfaces/PaginationMetaParameters.html":{},"classes/QueryPaginationResource.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"dependencies.html":{}}}],["validator.interface.ts",{"_index":1281,"title":{},"body":{"interfaces/UserValidatorInterface.html":{},"coverage.html":{}}}],["validator.interface.ts:16",{"_index":1286,"title":{},"body":{"interfaces/UserValidatorInterface.html":{}}}],["value",{"_index":248,"title":{},"body":{"injectables/AdminLoader.html":{},"classes/ClientPayload.html":{},"classes/ComplexQueryRequest.html":{},"classes/CreateClientHandler.html":{},"classes/OAuth2Request.html":{},"classes/OAuth2Response.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"classes/SimpleQueryRequest.html":{},"classes/SortableRequest.html":{},"classes/System1705059848171.html":{},"classes/UserPayload.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":1230,"title":{},"body":{"classes/System1705059848171.html":{}}}],["varchar(120",{"_index":1236,"title":{},"body":{"classes/System1705059848171.html":{}}}],["varchar(500",{"_index":1231,"title":{},"body":{"classes/System1705059848171.html":{}}}],["varchar(80",{"_index":1245,"title":{},"body":{"classes/System1705059848171.html":{}}}],["variable",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1391,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"controllers/QueryController.html":{},"properties.html":{}}}],["version('1",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"controllers/QueryController.html":{}}}],["version('1')@post('token",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["void",{"_index":264,"title":{},"body":{"modules/AdminModule.html":{},"modules/AuthModule.html":{},"injectables/Oauth2GrantStrategyRegistry.html":{},"controllers/QueryController.html":{},"injectables/QueryService.html":{},"injectables/StrategyExplorer.html":{}}}],["want",{"_index":192,"title":{},"body":{"interfaces/AccessTokenRepositoryInterface.html":{},"interfaces/ClientRepositoryInterface.html":{}}}],["withaccesstoken",{"_index":119,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["withaccesstoken(accesstoken",{"_index":122,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["withclientid",{"_index":522,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withclientid(clientid",{"_index":524,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withid",{"_index":120,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{},"classes/InvalidUserException.html":{}}}],["withid(id",{"_index":128,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{},"classes/ClientNotFoundException.html":{}}}],["withid(userid",{"_index":800,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["within",{"_index":887,"title":{},"body":{"interfaces/Oauth2GrantStrategyInterface.html":{},"interfaces/Oauth2PayloadInterface.html":{}}}],["withname",{"_index":523,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withname(name",{"_index":527,"title":{},"body":{"classes/ClientNotFoundException.html":{}}}],["withrefreshtoken",{"_index":121,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["withrefreshtoken(refreshtoken",{"_index":130,"title":{},"body":{"classes/AccessTokenNotFoundException.html":{}}}],["withusernameandpassword",{"_index":799,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["withusernameandpassword(username",{"_index":802,"title":{},"body":{"classes/InvalidUserException.html":{}}}],["wrapper",{"_index":945,"title":{},"body":{"interfaces/Oauth2StrategyOptions.html":{},"injectables/StrategyExplorer.html":{}}}],["yes",{"_index":36,"title":{},"body":{"classes/AccessTokenCreatedEvent.html":{},"classes/CreateAccessTokenCommand.html":{},"classes/CreateClientCommand.html":{},"classes/OAuth2Response.html":{},"modules/QueryModule.html":{}}}],["zoom",{"_index":391,"title":{},"body":{"modules/AuthSeedingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessTokenCreatedEvent.html":{"url":"classes/AccessTokenCreatedEvent.html","title":"class - AccessTokenCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/events/access-token-created.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event generated when an access token is generated\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                accessTokenExpiresAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                refreshTokenExpiresAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                scope\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, clientId: string, accessToken: string, accessTokenExpiresAt: Date, refreshToken: string, refreshTokenExpiresAt: Date, scope: string, userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/events/access-token-created.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/access-token-created.event.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AccessTokenCreatedEvent {\n  constructor(\n    public readonly id: string,\n    public readonly clientId: string,\n    public readonly accessToken: string,\n    public readonly accessTokenExpiresAt: Date,\n    public readonly refreshToken: string,\n    public readonly refreshTokenExpiresAt: Date,\n    public readonly scope: string,\n    public readonly userId?: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/AccessTokenEntity.html":{"url":"entities/AccessTokenEntity.html","title":"entity - AccessTokenEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  AccessTokenEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/accoss-token.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                accessTokenExpiresAt\n                            \n                            \n                                    \n                                    \n                                client\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdFrom\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                refreshTokenExpiresAt\n                            \n                            \n                                    \n                                scope\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token', primary: true, nullable: false, length: 80})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'access_token_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClientEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(type => ClientEntity, {nullable: false})@JoinColumn({name: 'client_id', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'created_on', nullable: false, default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdFrom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuth2Request\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'created_from', type: 'json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token', unique: true, nullable: false, length: 80})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('datetime', {name: 'refresh_token_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, length: 500})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:49\n                        \n                    \n\n            \n                \n                    JSON List of api IDs granted with this token for the client\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/accoss-token.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { ClientEntity } from './client.entity';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\n\n@Entity('schema_access_tokens')\nexport class AccessTokenEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    name: 'access_token',\n    primary: true,\n    nullable: false,\n    length: 80,\n  })\n  accessToken: string;\n\n  @Column({\n    name: 'refresh_token',\n    unique: true,\n    nullable: false,\n    length: 80,\n  })\n  refreshToken: string;\n\n  @Column('datetime', { name: 'access_token_expires_at', nullable: false })\n  accessTokenExpiresAt: Date;\n\n  @Column('datetime', { name: 'refresh_token_expires_at', nullable: false })\n  refreshTokenExpiresAt: Date;\n\n  @ManyToOne(type => ClientEntity, { nullable: false })\n  @JoinColumn({ name: 'client_id', referencedColumnName: 'id' })\n  client: ClientEntity;\n\n  @Column({ nullable: true, name: 'user_id' })\n  userId: string;\n\n  /**\n   * JSON List of api IDs granted with this token for the client\n   */\n  @Column({ nullable: true, length: 500 })\n  scope: string;\n\n  @Column('datetime', {\n    name: 'created_on',\n    nullable: false,\n    default: () => 'now()',\n  })\n  createdAt: Date;\n\n  @Column({ name: 'created_from', type: 'json', nullable: true })\n  createdFrom: OAuth2Request;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccessTokenNotFoundException.html":{"url":"classes/AccessTokenNotFoundException.html","title":"class - AccessTokenNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/access-token-not-found.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when an access token was not found\n\n            \n\n            \n                Extends\n            \n            \n                        NotFoundException\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                withAccessToken\n                            \n                            \n                                    Static\n                                withId\n                            \n                            \n                                    Static\n                                withRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    withAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/access-token-not-found.exception.ts:23\n                        \n                    \n\n\n            \n                \n                        Kind message with accessToken\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UnauthorizedException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/access-token-not-found.exception.ts:12\n                        \n                    \n\n\n            \n                \n                        Kind message with id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         AccessTokenNotFoundException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    withRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/access-token-not-found.exception.ts:34\n                        \n                    \n\n\n            \n                \n                        Kind message with refreshToken\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UnauthorizedException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, UnauthorizedException } from '@nestjs/common';\n\n/**\n * Exception thrown when an access token was not found\n */\nexport class AccessTokenNotFoundException extends NotFoundException {\n  /**\n   * Kind message with id\n   *\n   * @param id\n   */\n  static withId(id: string): AccessTokenNotFoundException {\n    return new AccessTokenNotFoundException(\n      `The access toekn with id \"${id}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with accessToken\n   *\n   * @param accessToken\n   */\n  static withAccessToken(accessToken: string): UnauthorizedException {\n    return new UnauthorizedException(\n      `The access token with accessToken \"${accessToken}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with refreshToken\n   *\n   * @param refreshToken\n   */\n  static withRefreshToken(refreshToken: string): UnauthorizedException {\n    return new UnauthorizedException(\n      `The refresh token with refreshToken \"${refreshToken}\" was not found`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenRepository.html":{"url":"injectables/AccessTokenRepository.html","title":"injectable - AccessTokenRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/repository/access-token.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findByAccessToken\n                            \n                            \n                                    Async\n                                findByRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/repository/access-token.repository.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(accessToken: AccessTokenEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            AccessTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(accessToken: AccessTokenEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            AccessTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/access-token.repository.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { DeleteResult, Repository } from 'typeorm';\nimport { AccessTokenEntity } from '../entities/accoss-token.entity';\nimport { AccessTokenNotFoundException } from '../exceptions/access-token-not-found.exception';\nimport { AccessTokenRepositoryInterface } from '../interfaces/access-token-repository.interface';\n\n@Injectable()\nexport class AccessTokenRepository implements AccessTokenRepositoryInterface {\n  constructor(\n    @InjectRepository(AccessTokenEntity)\n    private readonly repository: Repository,\n  ) {}\n\n  async findByAccessToken(accessToken: string): Promise {\n    const token = await this.repository.findOne({\n      where: {\n        accessToken: accessToken,\n      },\n      relations: ['client'],\n    });\n\n    if (!token) {\n      throw AccessTokenNotFoundException.withAccessToken(accessToken);\n    }\n\n    return token;\n  }\n\n  async findByRefreshToken(refreshToken: string): Promise {\n    const token = await this.repository.findOne({\n      where: {\n        refreshToken: refreshToken,\n      },\n      relations: ['client'],\n    });\n\n    if (!token) {\n      throw AccessTokenNotFoundException.withRefreshToken(refreshToken);\n    }\n\n    return token;\n  }\n\n  async create(accessToken: AccessTokenEntity): Promise {\n    return await this.repository.save(accessToken);\n  }\n\n  async delete(accessToken: AccessTokenEntity): Promise {\n    return await this.repository.delete(accessToken.id);\n  }\n\n  async deleteById(id: string): Promise {\n    return await this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccessTokenRepositoryInterface.html":{"url":"interfaces/AccessTokenRepositoryInterface.html","title":"interface - AccessTokenRepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenRepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/access-token-repository.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Main interface you have to implement if you want to deal with access tokens in your\nApplication\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        findByAccessToken\n                                    \n                                \n                                \n                                    \n                                        findByRefreshToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(accessToken: AccessTokenEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/access-token-repository.interface.ts:31\n                        \n                    \n\n\n            \n                \n                        Register a new access token into the storage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            AccessTokenEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByAccessToken\n                        \n                    \n                \n            \n            \n                \nfindByAccessToken(accessToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/access-token-repository.interface.ts:15\n                        \n                    \n\n\n            \n                \n                        Find by access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accessToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByRefreshToken\n                        \n                    \n                \n            \n            \n                \nfindByRefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/access-token-repository.interface.ts:24\n                        \n                    \n\n\n            \n                \n                        Find by access token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AccessTokenEntity } from '../entities/accoss-token.entity';\n\n/**\n * Main interface you have to implement if you want to deal with access tokens in your\n * Application\n */\nexport interface AccessTokenRepositoryInterface {\n  /**\n   * Find by access token\n   *\n   * @param accessToken\n   *\n   * @throws AccessTokenNotFoundException\n   */\n  findByAccessToken(accessToken: string): Promise;\n\n  /**\n   * Find by access token\n   *\n   * @param refreshToken\n   *\n   * @throws AccessTokenNotFoundException\n   */\n  findByRefreshToken(refreshToken: string): Promise;\n\n  /**\n   * Register a new access token into the storage\n   *\n   * @param accessToken\n   */\n  create(accessToken: AccessTokenEntity): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/access-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(\n  Strategy,\n  'access-token',\n)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessTokenRepository: AccessTokenRepositoryInterface, userLoader: UserLoaderInterface)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/access-token.strategy.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessTokenRepository\n                                                  \n                                                        \n                                                                        AccessTokenRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userLoader\n                                                  \n                                                        \n                                                                        UserLoaderInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(bearer: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/access-token.strategy.ts:31\n                        \n                    \n\n\n            \n                \n                        Validate the bearer (accessToken) using the HTTP Bearer Header strategy\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bearer\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-http-bearer';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport {\n  AccessTokenRepositoryInterface,\n  UserLoaderInterface,\n  Oauth2PayloadInterface,\n  UserPayload,\n  ClientPayload,\n} from '../interfaces';\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(\n  Strategy,\n  'access-token',\n) {\n  constructor(\n    @Inject('AccessTokenRepositoryInterface')\n    private readonly accessTokenRepository: AccessTokenRepositoryInterface,\n    @Inject('UserLoaderInterface')\n    private readonly userLoader: UserLoaderInterface,\n  ) {\n    super();\n  }\n\n  /**\n   * Validate the bearer (accessToken) using the HTTP Bearer Header strategy\n   *\n   * @param bearer\n   */\n  async validate(bearer: string): Promise {\n    const accessToken = await this.accessTokenRepository.findByAccessToken(\n      bearer,\n    );\n    if (\n      !accessToken ||\n      accessToken.accessTokenExpiresAt \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AdminConfig.html":{"url":"interfaces/AdminConfig.html","title":"interface - AdminConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin.config.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:         OAuth2Options\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OAuth2Options\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         QueryOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         QueryOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\nimport { OAuth2Options } from './auth';\nimport { QueryOptions } from './query';\n\nexport interface ResourceDictonary {\n  [Key: string]: T;\n}\nexport interface AdminConfig extends Pick {\n  query?: QueryOptions;\n  auth: OAuth2Options;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminLoader.html":{"url":"injectables/AdminLoader.html","title":"injectable - AdminLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/loader.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapter: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/auth/loader.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapter\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('AdminCoreModule')\n                    \n                \n                    \n                        \n                                Defined in src/auth/loader.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\n\n@Injectable()\nexport class AdminLoader {\n  private readonly logger = new Logger('AdminCoreModule');\n\n  constructor(httpAdapter: HttpAdapterHost) {\n    this.logger.log('Admin Loader Bootstrap!');\n\n    console.log(httpAdapter);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin.module.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: AdminConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin.module.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            AdminConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/admin.module.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  ClassSerializerInterceptor,\n  DynamicModule,\n  Global,\n  Logger,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  OnModuleInit,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  APP_INTERCEPTOR,\n  APP_PIPE,\n  HttpAdapterHost,\n  Reflector,\n} from '@nestjs/core';\nimport { AdminConfig } from './admin.config';\nimport { AuthModule } from './auth';\nimport { CONFIG_INJECT_KEY } from './constants';\nimport { QueryModule } from './query/query.module';\n\n@Module({})\n@Global()\nexport class AdminModule implements OnModuleInit, NestModule {\n  private readonly logger = new Logger('AdminModule');\n\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  configure(consumer: MiddlewareConsumer) {}\n\n  public async onModuleInit() {\n    this.logger.log('Admin Module Initialized');\n  }\n\n  static forRoot(options: AdminConfig): DynamicModule {\n    return {\n      module: AdminModule,\n      imports: [\n        AuthModule.forRoot(options.auth),\n        QueryModule.forRoot(options.query),\n      ],\n      providers: [\n        {\n          provide: CONFIG_INJECT_KEY,\n          useValue: options,\n        },\n        ConfigService,\n        {\n          useFactory: () => {\n            return new ValidationPipe({ transform: true });\n          },\n          provide: APP_PIPE,\n          inject: [],\n        },\n        {\n          provide: APP_INTERCEPTOR,\n          useFactory: (reflector: Reflector) => {\n            return new ClassSerializerInterceptor(reflector);\n          },\n          inject: [Reflector],\n        },\n      ],\n      exports: [],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/controllers/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        token\n                        \n                    \n                \n            \n            \n                \n                        \n                    token(request: OAuth2Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Post('token')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/controllers/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  ClassSerializerInterceptor,\n  Controller,\n  ForbiddenException,\n  Inject,\n  Post,\n  Body,\n  UseInterceptors,\n  Version,\n} from '@nestjs/common';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../resources/oauth2-response.dto';\nimport { Oauth2GrantStrategyRegistry } from '../services/strategy.registry';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller({\n  path: '_auth',\n  version: ['1'],\n})\n@ApiTags('auth')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AuthController {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param strategyRegistry\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly strategyRegistry: Oauth2GrantStrategyRegistry,\n  ) {}\n\n  @Version('1')\n  @Post('token')\n  async token(@Body() request: OAuth2Request): Promise {\n    const client = await this.clientRepository.findByClientId(request.clientId);\n    if (!(await this.strategyRegistry.validate(request, client))) {\n      throw new ForbiddenException(\n        'You are not allowed to access the given resource',\n      );\n    }\n\n    return await this.strategyRegistry.getOauth2Response(request, client);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: OAuth2Options)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.module.ts:76\n                        \n                    \n\n\n            \n                \n                        Create the static for Root Options\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            OAuth2Options\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.module.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  DynamicModule,\n  Global,\n  Inject,\n  Logger,\n  Module,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { AccessTokenEntity, ClientEntity, ClientRolesEntity } from './entities';\n\nimport { Oauth2GrantStrategyRegistry, StrategyExplorer } from './services';\n\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { OAUTH2_SERVER_OPTIONS } from './auth.constants';\nimport { CreateAccessTokenHandler, CreateClientHandler } from './commands';\nimport { AuthController } from './controllers';\nimport { RoleEntity } from './entities/auth-role.entity';\nimport { AccessTokenRepository, ClientRepository } from './repository';\nimport {\n  AccessTokenStrategy,\n  ClientCredentialsStrategy,\n  PasswordStrategy,\n  RefreshTokenStrategy,\n} from './strategies';\nimport { OAuth2Options } from './types';\n\nexport const CommandHandlers = [CreateClientHandler, CreateAccessTokenHandler];\n\nexport const EventHandlers = [];\n\nexport const QueryHandlers = [];\n\nexport const Sagas = [];\n\nexport const Services = [\n  { provide: 'ClientRepositoryInterface', useClass: ClientRepository },\n  {\n    provide: 'AccessTokenRepositoryInterface',\n    useClass: AccessTokenRepository,\n  },\n];\n\nexport const ServiceNames = [\n  'ClientRepositoryInterface',\n  'AccessTokenRepositoryInterface',\n];\n\nexport const Resolvers = [];\n\nexport const Oauth2Strategies = [\n  ClientCredentialsStrategy,\n  RefreshTokenStrategy,\n  PasswordStrategy,\n];\n\nexport const Providers = [StrategyExplorer, Oauth2GrantStrategyRegistry];\n\n@Global()\n@Module({})\nexport class AuthModule implements OnModuleInit {\n  private readonly logger = new Logger('AuthModule');\n\n  constructor(\n    @Inject(OAUTH2_SERVER_OPTIONS)\n    private readonly options: OAuth2Options,\n    private readonly explorerService: StrategyExplorer,\n    private readonly strategyRegistry: Oauth2GrantStrategyRegistry,\n  ) {}\n\n  /**\n   * Create the static for Root Options\n   *\n   * @param options\n   */\n  public static forRoot(options: OAuth2Options): DynamicModule {\n    const oAuth2OptionsProvider = {\n      provide: OAUTH2_SERVER_OPTIONS,\n      useValue: options,\n    };\n\n    const userLoaderProvider = {\n      provide: 'UserLoaderInterface',\n      useFactory: async options => {\n        return options.userLoader;\n      },\n      inject: [OAUTH2_SERVER_OPTIONS],\n    };\n\n    const userValidatorProvider = {\n      provide: 'UserValidatorInterface',\n      useFactory: async options => {\n        return options.userValidator;\n      },\n      inject: [OAUTH2_SERVER_OPTIONS],\n    };\n\n    return {\n      module: AuthModule,\n      imports: [\n        CqrsModule,\n        TypeOrmModule.forFeature([\n          ClientEntity,\n          AccessTokenEntity,\n          RoleEntity,\n          ClientRolesEntity,\n        ]),\n      ],\n      controllers: [AuthController],\n      providers: [\n        oAuth2OptionsProvider,\n        userValidatorProvider,\n        userLoaderProvider,\n        ...Providers,\n        ...Services,\n        ...Resolvers,\n        ...Oauth2Strategies,\n        ...CommandHandlers,\n        ...EventHandlers,\n        ...QueryHandlers,\n        ...Sagas,\n        AccessTokenStrategy,\n      ],\n      exports: [\n        ...Providers,\n        ...ServiceNames,\n        userValidatorProvider,\n        userLoaderProvider,\n      ],\n    };\n  }\n\n  onModuleInit() {\n    this.logger.log('AuthModule Register Strategies');\n\n    const { strategies } = this.explorerService.explore();\n    this.strategyRegistry.register(strategies);\n\n    this.logger.log('AuthModule Initialized');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthSeedingModule.html":{"url":"modules/AuthSeedingModule.html","title":"module - AuthSeedingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthSeedingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthSeedingModule\n\n\n\ncluster_AuthSeedingModule_providers\n\n\n\ncluster_AuthSeedingModule_exports\n\n\n\n\nAuthSeedingService \n\nAuthSeedingService \n\n\n\nAuthSeedingModule\n\nAuthSeedingModule\n\nAuthSeedingService  -->\n\nAuthSeedingModule->AuthSeedingService \n\n\n\n\n\nAuthSeedingService\n\nAuthSeedingService\n\nAuthSeedingModule -->\n\nAuthSeedingService->AuthSeedingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/seeds/auth-seeding.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthSeedingService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthSeedingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport {\n  PermissionEntity,\n  PermissionGroupEntity,\n  RoleEntity,\n} from '../entities';\nimport { AuthSeedingService } from './auth-seeding.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      PermissionGroupEntity,\n      RoleEntity,\n      PermissionEntity,\n    ]),\n  ],\n  providers: [AuthSeedingService],\n  exports: [AuthSeedingService],\n})\nexport class AuthSeedingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthSeedingService.html":{"url":"injectables/AuthSeedingService.html","title":"injectable - AuthSeedingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthSeedingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/seeds/auth-seeding.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionGroupRepo: Repository, roleRepo: Repository, permissionRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/seeds/auth-seeding.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionGroupRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/seeds/auth-seeding.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Repository } from 'typeorm';\nimport {\n  PermissionGroupEntity,\n  RoleEntity,\n  PermissionEntity,\n} from '../entities';\nimport {\n  DEFAULT_SYSTEM_PERMISSION_GROUP,\n  DEFAULT_SYSTEM_ROLES_PERMISSION_NAME,\n  DEFAULT_USER_ROLE_NAME,\n  DEFAULT_ADMIN_ROLE_NAME,\n} from '../constants';\n\n@Injectable()\nexport class AuthSeedingService {\n  constructor(\n    @InjectRepository(PermissionGroupEntity)\n    private permissionGroupRepo: Repository,\n    @InjectRepository(RoleEntity)\n    private roleRepo: Repository,\n\n    @InjectRepository(PermissionEntity)\n    private permissionRepo: Repository,\n  ) {}\n\n  async run() {\n    const defaultGroup = await this.permissionGroupRepo.save({\n      slug: DEFAULT_SYSTEM_PERMISSION_GROUP,\n      displayTitle: 'System',\n    });\n\n    await this.permissionRepo.save({\n      slug: DEFAULT_SYSTEM_ROLES_PERMISSION_NAME,\n      displayTitle: 'Roles',\n      group: defaultGroup,\n    });\n\n    await this.permissionGroupRepo.save({\n      slug: DEFAULT_USER_ROLE_NAME,\n      displayTitle: 'User',\n    });\n\n    await this.roleRepo.save({\n      slug: DEFAULT_ADMIN_ROLE_NAME,\n      displayTitle: 'Administrator',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientCreatedEvent.html":{"url":"classes/ClientCreatedEvent.html","title":"class - ClientCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/events/client-created.event.ts\n        \n\n\n            \n                Description\n            \n            \n                Event published when a client is created\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                certExpiresAt\n                            \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, name: string, clientId: string, certExpiresAt: Date)\n                    \n                \n                        \n                            \n                                Defined in src/auth/events/client-created.event.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        certExpiresAt\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        certExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/events/client-created.event.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ClientCreatedEvent {\n  constructor(\n    public readonly id: string,\n    public readonly name: string,\n    public readonly clientId: string,\n    public readonly certExpiresAt: Date,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientCredentialsStrategy.html":{"url":"classes/ClientCredentialsStrategy.html","title":"class - ClientCredentialsStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientCredentialsStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/client-credentials.strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Oauth2GrantStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/client-credentials.strategy.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/client-credentials.strategy.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/client-credentials.strategy.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { Oauth2GrantStrategy } from '../decorators/oauth2-grant-strategy.decorator';\nimport { CreateAccessTokenCommand } from '../commands/create-access-token.command';\nimport { ClientEntity } from '../entities/client.entity';\nimport { AccessTokenEntity } from '../entities/accoss-token.entity';\nimport {\n  Oauth2GrantStrategyInterface,\n  ClientRepositoryInterface,\n} from '../interfaces';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../resources/oauth2-response.dto';\n\n@Oauth2GrantStrategy('client_credentials')\nexport class ClientCredentialsStrategy implements Oauth2GrantStrategyInterface {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param commandBus\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly commandBus: CommandBus,\n  ) {}\n\n  async validate(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    if (\n      client.clientSecret !== request.clientSecret ||\n      !request.clientSecret ||\n      client.deletedAt !== null ||\n      !client.grants.includes(request.grantType)\n    ) {\n      return false;\n    }\n\n    const scopes: string[] = JSON.parse(client.scope);\n    const requestScopes =\n      typeof request.scopes === 'string' ? [request.scopes] : request.scopes;\n    return requestScopes.every(scope => scopes.includes(scope));\n  }\n\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    const requestScopes =\n      typeof request.scopes === 'string' ? [request.scopes] : request.scopes;\n    const accessToken: AccessTokenEntity = await this.commandBus.execute(\n      new CreateAccessTokenCommand(\n        client.id,\n        JSON.stringify(requestScopes),\n        request.exp,\n        request.iat,\n        request,\n      ),\n    );\n\n    return new OAuth2Response(\n      accessToken.accessToken,\n      accessToken.refreshToken,\n      ~~((accessToken.accessTokenExpiresAt.getTime() - Date.now()) / 1000),\n      ~~((accessToken.refreshTokenExpiresAt.getTime() - Date.now()) / 1000),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ClientEntity.html":{"url":"entities/ClientEntity.html","title":"entity - ClientEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ClientEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/client.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessTokenLifetime\n                            \n                            \n                                    \n                                cert\n                            \n                            \n                                    \n                                certExpiresAt\n                            \n                            \n                                    \n                                clientId\n                            \n                            \n                                    \n                                clientSecret\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                grants\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                privateKey\n                            \n                            \n                                    \n                                publicKey\n                            \n                            \n                                    \n                                refreshTokenLifetime\n                            \n                            \n                                    \n                                scope\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'access_token_lifetime', nullable: false, default: 3600})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cert\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        certExpiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', name: 'cert_expires_at', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_id', type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        clientSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'client_secret', type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', name: 'created_at', nullable: false, default: () => now()})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'datetime', name: 'deleted_at', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        grants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'grants', type: 'simple-array', nullable: false, default: 'client_credentials,refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        privateKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'private_key', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        publicKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', name: 'public_key', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'refresh_token_lifetime', nullable: false, default: 7200})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 500, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client.entity.ts:31\n                        \n                    \n\n            \n                \n                    Client scope. The scope should contain the list of third party applications\nthe client has access to\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn, Unique } from 'typeorm';\n\n@Entity('schema_auth_clients')\n@Unique(['clientId'])\nexport class ClientEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ type: 'text', nullable: false })\n  name: string;\n\n  @Column({ name: 'client_id', type: 'text', nullable: false })\n  clientId: string;\n\n  @Column({ name: 'client_secret', type: 'text', nullable: true })\n  clientSecret: string;\n\n  @Column({\n    name: 'grants',\n    type: 'simple-array',\n    nullable: false,\n    default: 'client_credentials,refresh_token',\n  })\n  grants: string[];\n\n  /**\n   * Client scope. The scope should contain the list of third party applications\n   * the client has access to\n   */\n  @Column({ length: 500, nullable: false })\n  scope: string;\n\n  @Column({ name: 'access_token_lifetime', nullable: false, default: 3600 })\n  accessTokenLifetime: number;\n\n  @Column({ name: 'refresh_token_lifetime', nullable: false, default: 7200 })\n  refreshTokenLifetime: number;\n\n  @Column({ type: 'text', name: 'private_key', nullable: false })\n  privateKey: string;\n\n  @Column({ type: 'text', name: 'public_key', nullable: false })\n  publicKey: string;\n\n  @Column({ type: 'text', nullable: false })\n  cert: string;\n\n  @Column({ type: 'datetime', name: 'cert_expires_at', nullable: false })\n  certExpiresAt: Date;\n\n  @Column({\n    type: 'datetime',\n    name: 'created_at',\n    nullable: false,\n    default: () => 'now()',\n  })\n  createdAt: Date;\n\n  @Column({ type: 'datetime', name: 'deleted_at', nullable: true })\n  deletedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientNotFoundException.html":{"url":"classes/ClientNotFoundException.html","title":"class - ClientNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/client-not-found.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when a client was not found\n\n            \n\n            \n                Extends\n            \n            \n                        NotFoundException\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                withClientId\n                            \n                            \n                                    Static\n                                withId\n                            \n                            \n                                    Static\n                                withName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withClientId(clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/client-not-found.exception.ts:27\n                        \n                    \n\n\n            \n                \n                        Kind message with client ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     UnauthorizedException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/client-not-found.exception.ts:16\n                        \n                    \n\n\n            \n                \n                        Kind message with id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ClientNotFoundException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withName\n                        \n                    \n                \n            \n            \n                \n                        \n                    withName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/client-not-found.exception.ts:38\n                        \n                    \n\n\n            \n                \n                        Kind message with client ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     InternalServerErrorException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  InternalServerErrorException,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\n\n/**\n * Exception thrown when a client was not found\n */\nexport class ClientNotFoundException extends NotFoundException {\n  /**\n   * Kind message with id\n   *\n   * @param id\n   */\n  static withId(id: string): ClientNotFoundException {\n    return new ClientNotFoundException(\n      `The client with id \"${id}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with client ID\n   *\n   * @param clientId\n   */\n  static withClientId(clientId: string): UnauthorizedException {\n    return new UnauthorizedException(\n      `The client with clientId \"${clientId}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with client ID\n   *\n   * @param name\n   */\n  static withName(name: string): InternalServerErrorException {\n    return new UnauthorizedException(\n      `The client with name \"${name}\" was not found`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientPayload.html":{"url":"classes/ClientPayload.html","title":"class - ClientPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/client-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a client's payload\n\n            \n\n\n            \n                Implements\n            \n            \n                            Oauth2PayloadInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: AccessTokenEntity, id: string, clientId: string, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/interfaces/client-payload.interface.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        AccessTokenEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccessTokenEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Oauth2PayloadType\n\n                    \n                \n                \n                    \n                        Default value : Oauth2PayloadType.CLIENT\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/client-payload.interface.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccessTokenEntity } from '../entities/accoss-token.entity';\nimport {\n  Oauth2PayloadInterface,\n  Oauth2PayloadType,\n} from './oauth2-payload.interface';\n\n/**\n * Represents a client's payload\n */\nexport class ClientPayload implements Oauth2PayloadInterface {\n  // Store the current type of payload user or client\n  // When the client is connected he should only be able to access his own resources\n  readonly type: Oauth2PayloadType = Oauth2PayloadType.CLIENT;\n\n  constructor(\n    public readonly accessToken: AccessTokenEntity,\n    public readonly id: string,\n    public readonly clientId: string,\n    public readonly name: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientRepository.html":{"url":"injectables/ClientRepository.html","title":"injectable - ClientRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/repository/client.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findByClientId\n                            \n                            \n                                    Async\n                                findByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/repository/client.repository.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByClientId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByClientId(clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/repository/client.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ClientEntity } from '../entities/client.entity';\nimport { ClientNotFoundException } from '../exceptions/client-not-found.exception';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\n\n@Injectable()\nexport class ClientRepository implements ClientRepositoryInterface {\n  constructor(\n    @InjectRepository(ClientEntity)\n    private readonly repository: Repository,\n  ) {}\n\n  async find(id: string): Promise {\n    const client = await this.repository.findOneBy({ id });\n\n    if (!client) {\n      throw ClientNotFoundException.withId(id);\n    }\n\n    return client;\n  }\n\n  async findByClientId(clientId: string): Promise {\n    const client = await this.repository.findOne({\n      where: {\n        clientId: clientId,\n      },\n    });\n\n    if (!client) {\n      throw ClientNotFoundException.withClientId(clientId);\n    }\n\n    return client;\n  }\n\n  async findByName(name: string): Promise {\n    const client = await this.repository.findOne({\n      where: {\n        name: name,\n      },\n    });\n\n    if (!client) {\n      throw ClientNotFoundException.withName(name);\n    }\n\n    return client;\n  }\n\n  async create(client: ClientEntity): Promise {\n    return await this.repository.save(client);\n  }\n\n  async delete(client: ClientEntity): Promise {\n    client.deletedAt = new Date();\n\n    return await this.repository.save(client);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientRepositoryInterface.html":{"url":"interfaces/ClientRepositoryInterface.html","title":"interface - ClientRepositoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClientRepositoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/client-repository.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the main repository you have to implement if you want to\nstore clients in the database\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findByClientId\n                                    \n                                \n                                \n                                    \n                                        findByName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:40\n                        \n                    \n\n\n            \n                \n                        Create a new oAuth2 client\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:15\n                        \n                    \n\n\n            \n                \n                        Find the client with the given ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByClientId\n                        \n                    \n                \n            \n            \n                \nfindByClientId(clientId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:24\n                        \n                    \n\n\n            \n                \n                        Finds a client using its clientId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByName\n                        \n                    \n                \n            \n            \n                \nfindByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/client-repository.interface.ts:33\n                        \n                    \n\n\n            \n                \n                        Finds a client using its name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ClientEntity } from '../entities/client.entity';\n\n/**\n * This is the main repository you have to implement if you want to\n * store clients in the database\n */\nexport interface ClientRepositoryInterface {\n  /**\n   * Find the client with the given ID\n   *\n   * @param id\n   *\n   * @throws ClientNotFoundException\n   */\n  find(id: string): Promise;\n\n  /**\n   * Finds a client using its clientId\n   *\n   * @param clientId\n   *\n   * @throws ClientNotFoundException\n   */\n  findByClientId(clientId: string): Promise;\n\n  /**\n   * Finds a client using its name\n   *\n   * @param name\n   *\n   * @throws ClientNotFoundException\n   */\n  findByName(name: string): Promise;\n\n  /**\n   * Create a new oAuth2 client\n   *\n   * @param client\n   */\n  create(client: ClientEntity): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ClientRolesEntity.html":{"url":"entities/ClientRolesEntity.html","title":"entity - ClientRolesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ClientRolesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/client-roles.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                identifier\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client-roles.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        identifier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client-roles.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, role => role.slug)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/client-roles.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  Entity,\n  Index,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\nimport { RoleEntity } from './auth-role.entity';\n\n@Unique(['role', 'identifier'])\n@Entity('schema_auth_client_roles')\nexport class ClientRolesEntity extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(() => RoleEntity, role => role.slug)\n  role: RoleEntity;\n\n  @Column()\n  identifier: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComplexQueryRequest.html":{"url":"classes/ComplexQueryRequest.html","title":"class - ComplexQueryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComplexQueryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/requests/requests.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            SimpleQueryRequest\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                filter\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sort\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterableRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: FilterableRequest, isArray: true})@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortableRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: SortableRequest, isArray: true})@IsOptional()@ValidateNested({each: true})@IsArray()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SimpleQueryRequest\n\n                            \n                        \n                    \n                        \n                                Defined in         SimpleQueryRequest:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 200, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(200)@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SimpleQueryRequest\n\n                            \n                        \n                    \n                        \n                                Defined in         SimpleQueryRequest:47\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsString,\n  IsEnum,\n  IsInt,\n  Min,\n  IsOptional,\n  Max,\n  ValidateNested,\n  IsArray,\n} from 'class-validator';\nimport { QueryOrder } from '../interfaces/query-order.enum';\n\nexport class SortableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @ApiPropertyOptional({})\n  @IsEnum(QueryOrder)\n  readonly order: QueryOrder = QueryOrder.ASC;\n}\n\nexport class SimpleQueryRequest {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 200,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(200)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n}\nexport class FilterableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly term: string;\n}\n\nexport class ComplexQueryRequest extends SimpleQueryRequest {\n  @ApiPropertyOptional({ type: SortableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @IsArray()\n  @Type(() => SortableRequest)\n  readonly sort?: SortableRequest[];\n\n  @ApiPropertyOptional({ type: FilterableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => FilterableRequest)\n  readonly filter?: FilterableRequest[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessTokenCommand.html":{"url":"classes/CreateAccessTokenCommand.html","title":"class - CreateAccessTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-access-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                exp\n                            \n                            \n                                    Public\n                                    Readonly\n                                iat\n                            \n                            \n                                    Public\n                                    Readonly\n                                request\n                            \n                            \n                                    Public\n                                    Readonly\n                                scope\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string, scope: string, exp: number, iat: number, request: OAuth2Request, userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-access-token.command.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        iat\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        OAuth2Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        exp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        request\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuth2Request\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-access-token.command.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OAuth2Request } from '../requests/oauth2-request.dto';\n\nexport class CreateAccessTokenCommand {\n  constructor(\n    public readonly clientId: string,\n    public readonly scope: string,\n    public readonly exp: number,\n    public readonly iat: number,\n    public readonly request: OAuth2Request,\n    public readonly userId?: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAccessTokenHandler.html":{"url":"classes/CreateAccessTokenHandler.html","title":"class - CreateAccessTokenHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAccessTokenHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-access-token.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessTokenRepository: AccessTokenRepositoryInterface, clientRepository: ClientRepositoryInterface, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-access-token.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessTokenRepository\n                                                  \n                                                        \n                                                                        AccessTokenRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateAccessTokenCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/commands/create-access-token.handler.ts:28\n                        \n                    \n\n\n            \n                \n                        Execute the create AccessToken Command\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateAccessTokenCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { CreateAccessTokenCommand } from './create-access-token.command';\n\nimport * as crypto from 'crypto';\nimport { ClientEntity } from '../entities/client.entity';\nimport { AccessTokenEntity } from '../entities/accoss-token.entity';\nimport { AccessTokenCreatedEvent } from '../events/access-token-created.event';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\nimport { AccessTokenRepositoryInterface } from '../interfaces/access-token-repository.interface';\n\n@CommandHandler(CreateAccessTokenCommand)\nexport class CreateAccessTokenHandler\n  implements ICommandHandler {\n  constructor(\n    @Inject('AccessTokenRepositoryInterface')\n    private readonly accessTokenRepository: AccessTokenRepositoryInterface,\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Execute the create AccessToken Command\n   *\n   * @param command\n   */\n  async execute(command: CreateAccessTokenCommand) {\n    const client: ClientEntity = await this.clientRepository.find(\n      command.clientId,\n    );\n    // @fixme: Shall we remove old tokens ?\n\n    const accessToken = new AccessTokenEntity();\n    accessToken.client = client;\n    accessToken.createdAt = new Date();\n    accessToken.createdFrom = command.request;\n    accessToken.scope = command.scope;\n\n    // generate access & refresh tokens\n    const now = Date.now();\n    // Ensure we have an expiration\n    const requestedExp =\n      command.exp ||\n      new Date(now + client.accessTokenLifetime * 1000).getTime() / 1000;\n    const exp =\n      now + client.accessTokenLifetime * 1000 \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientCommand.html":{"url":"classes/CreateClientCommand.html","title":"class - CreateClientCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-client.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command used to create clients\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                accessTokenLifetime\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                grants\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                noSecret\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                refreshTokenLifetime\n                            \n                            \n                                    Public\n                                    Readonly\n                                scope\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, scope: string, clientId?: string, grants?: string[], noSecret?: boolean, accessTokenLifetime?: number, refreshTokenLifetime?: number)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-client.command.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        grants\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        noSecret\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenLifetime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenLifetime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        accessTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        grants\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        noSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        refreshTokenLifetime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/commands/create-client.command.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateClientCommand {\n  constructor(\n    public readonly name: string,\n    public readonly scope: string,\n    public readonly clientId?: string,\n    public readonly grants?: string[],\n    public readonly noSecret?: boolean,\n    public readonly accessTokenLifetime?: number,\n    public readonly refreshTokenLifetime?: number,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClientHandler.html":{"url":"classes/CreateClientHandler.html","title":"class - CreateClientHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClientHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/commands/create-client.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/commands/create-client.handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(command: CreateClientCommand)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/commands/create-client.handler.ts:25\n                        \n                    \n\n\n            \n                \n                        Execute the create Client Command\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                command\n                                            \n                                                            CreateClientCommand\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { Inject } from '@nestjs/common';\nimport { CreateClientCommand } from './create-client.command';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as crypto from 'crypto';\nimport * as selfsigned from 'selfsigned';\nimport { ClientEntity } from '../entities';\nimport { ClientCreatedEvent } from '../events/client-created.event';\nimport { ClientRepositoryInterface } from '../interfaces/client-repository.interface';\n\n@CommandHandler(CreateClientCommand)\nexport class CreateClientHandler\n  implements ICommandHandler {\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  /**\n   * Execute the create Client Command\n   *\n   * @param command\n   */\n  async execute(command: CreateClientCommand) {\n    const client = new ClientEntity();\n    client.name = command.name;\n    client.clientId = command.clientId || uuidv4();\n    if (!command.noSecret) {\n      client.clientSecret = crypto.randomBytes(32).toString('hex');\n    }\n\n    client.scope = command.scope;\n    client.accessTokenLifetime = command.accessTokenLifetime || 3600;\n    client.refreshTokenLifetime = command.refreshTokenLifetime || 7200;\n    client.grants = command.grants || ['client_credentials', 'refresh_token'];\n\n    // generate keys\n    const attrs = [{ name: 'commonName', value: command.name }];\n    const pem = selfsigned.generate(attrs, { days: 365 });\n\n    client.privateKey = pem.private;\n    client.publicKey = pem.public;\n    client.cert = pem.cert;\n\n    const exp = new Date();\n    exp.setDate(exp.getDate() + 365);\n    client.certExpiresAt = exp;\n\n    const createdClient = await this.clientRepository.create(client);\n\n    // emit an access token created event\n    this.eventBus.publish(\n      new ClientCreatedEvent(\n        createdClient.id,\n        createdClient.name,\n        createdClient.clientId,\n        createdClient.certExpiresAt,\n      ),\n    );\n\n    return createdClient;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/EntityAccessorGuard.html":{"url":"guards/EntityAccessorGuard.html","title":"guard - EntityAccessorGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    EntityAccessorGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/query/guards/acccesor.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(queryService: QueryService)\n                    \n                \n                        \n                            \n                                Defined in src/query/guards/acccesor.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryService\n                                                  \n                                                        \n                                                                        QueryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/guards/acccesor.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { QueryService } from '../services/query.service';\n\n@Injectable()\nexport class EntityAccessorGuard implements CanActivate {\n  constructor(\n    @Inject(QueryService) private readonly queryService: QueryService,\n  ) {}\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request = context.switchToHttp().getRequest();\n    const params = request.params;\n\n    if (params.entity === undefined) {\n      throw new UnauthorizedException('Cant find a entity parameter.');\n    }\n\n    if (!this.queryService.hasSchema(params.entity)) {\n      throw new UnauthorizedException(\n        'Cant find a entity schema: ' + params.entity,\n      );\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilterableRequest.html":{"url":"classes/FilterableRequest.html","title":"class - FilterableRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilterableRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/requests/requests.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                field\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiPropertyOptional({})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        term\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiPropertyOptional({})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:62\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsString,\n  IsEnum,\n  IsInt,\n  Min,\n  IsOptional,\n  Max,\n  ValidateNested,\n  IsArray,\n} from 'class-validator';\nimport { QueryOrder } from '../interfaces/query-order.enum';\n\nexport class SortableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @ApiPropertyOptional({})\n  @IsEnum(QueryOrder)\n  readonly order: QueryOrder = QueryOrder.ASC;\n}\n\nexport class SimpleQueryRequest {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 200,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(200)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n}\nexport class FilterableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly term: string;\n}\n\nexport class ComplexQueryRequest extends SimpleQueryRequest {\n  @ApiPropertyOptional({ type: SortableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @IsArray()\n  @Type(() => SortableRequest)\n  readonly sort?: SortableRequest[];\n\n  @ApiPropertyOptional({ type: FilterableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => FilterableRequest)\n  readonly filter?: FilterableRequest[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IEntityAccessorOptions.html":{"url":"interfaces/IEntityAccessorOptions.html","title":"interface - IEntityAccessorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IEntityAccessorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/decorators.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            editPermission\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterMatch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isFilterable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isSortable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            readPermission\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editPermission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editPermission:         AccessorRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccessorRole\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterMatch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterMatch:         FilterMatch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterMatch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFilterable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFilterable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSortable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSortable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readPermission\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readPermission:         AccessorRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccessorRole\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ADMIN_FIELD_DECORATOR_KEY } from '../constants';\n\nexport type AccessorRole = string | string[] | boolean;\nexport enum FilterMatch {\n  STARTS_WITH,\n  STARTS_OR_ENDS,\n  ENDS_WITH,\n  EXACT,\n}\n\nexport interface IEntityAccessorOptions {\n  readPermission?: AccessorRole;\n  editPermission?: AccessorRole;\n  isFilterable?: boolean;\n  isSortable?: boolean;\n  filterMatch?: FilterMatch;\n}\n\nexport interface ITypeOrmAddionalFields {\n  isNullable?: boolean;\n  isPrimary?: boolean;\n}\n\nexport type MetaDataResult = IEntityAccessorOptions & ITypeOrmAddionalFields;\n\nexport const EntityAccessor = (options?: IEntityAccessorOptions) => {\n  return function(object: Object, propertyKey: string) {\n    Reflect.defineMetadata(\n      ADMIN_FIELD_DECORATOR_KEY,\n      options || {},\n      object,\n      propertyKey,\n    );\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITypeOrmAddionalFields.html":{"url":"interfaces/ITypeOrmAddionalFields.html","title":"interface - ITypeOrmAddionalFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITypeOrmAddionalFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/decorators.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            isNullable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPrimary\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isNullable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isNullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPrimary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPrimary:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ADMIN_FIELD_DECORATOR_KEY } from '../constants';\n\nexport type AccessorRole = string | string[] | boolean;\nexport enum FilterMatch {\n  STARTS_WITH,\n  STARTS_OR_ENDS,\n  ENDS_WITH,\n  EXACT,\n}\n\nexport interface IEntityAccessorOptions {\n  readPermission?: AccessorRole;\n  editPermission?: AccessorRole;\n  isFilterable?: boolean;\n  isSortable?: boolean;\n  filterMatch?: FilterMatch;\n}\n\nexport interface ITypeOrmAddionalFields {\n  isNullable?: boolean;\n  isPrimary?: boolean;\n}\n\nexport type MetaDataResult = IEntityAccessorOptions & ITypeOrmAddionalFields;\n\nexport const EntityAccessor = (options?: IEntityAccessorOptions) => {\n  return function(object: Object, propertyKey: string) {\n    Reflect.defineMetadata(\n      ADMIN_FIELD_DECORATOR_KEY,\n      options || {},\n      object,\n      propertyKey,\n    );\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidUserException.html":{"url":"classes/InvalidUserException.html","title":"class - InvalidUserException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidUserException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/exceptions/invalid-user.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when a user is invalid\n\n            \n\n            \n                Extends\n            \n            \n                        UnauthorizedException\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                withId\n                            \n                            \n                                    Static\n                                withUsernameAndPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withId\n                        \n                    \n                \n            \n            \n                \n                        \n                    withId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/invalid-user.exception.ts:27\n                        \n                    \n\n\n            \n                \n                        Kind message with id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         InvalidUserException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        withUsernameAndPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    withUsernameAndPassword(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/exceptions/invalid-user.exception.ts:13\n                        \n                    \n\n\n            \n                \n                        Kind message with username and password\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         InvalidUserException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UnauthorizedException } from '@nestjs/common';\n\n/**\n * Exception thrown when a user is invalid\n */\nexport class InvalidUserException extends UnauthorizedException {\n  /**\n   * Kind message with username and password\n   *\n   * @param username\n   * @param password\n   */\n  static withUsernameAndPassword(\n    username: string,\n    password: string,\n  ): InvalidUserException {\n    return new InvalidUserException(\n      `The user with username \"${username}\" and password \"${password}\" was not found`,\n    );\n  }\n\n  /**\n   * Kind message with id\n   *\n   * @param userId\n   */\n  static withId(userId: string): InvalidUserException {\n    return new InvalidUserException(\n      `The user with id \"${userId}\" was not found`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuth2Request.html":{"url":"classes/OAuth2Request.html","title":"class - OAuth2Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuth2Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/requests/oauth2-request.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Main object used to transport data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                clientId\n                            \n                            \n                                    \n                                    \n                                clientSecret\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                exp\n                            \n                            \n                                    \n                                    \n                                    \n                                grantType\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                iat\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                scopes\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The API Key given by the application', required: true})@IsNotEmpty()@Expose({name: 'client_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clientSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The API Token given by the application', required: true})@Expose({name: 'client_secret'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        exp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The expiration time of the assertion, specified as seconds since 00:00:00 UTC, January 1, 1970. This value has a maximum of 1 hour after the issued time.'})@Expose({name: 'exp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        grantType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The type of grant you are requesting, must be \"client_credentials\"', required: true})@IsNotEmpty()@Expose({name: 'grant_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The time the assertion was issued, specified as seconds since 00:00:00 UTC, January 1, 1970.'})@Expose({name: 'iat'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The password when grant_type is set to \"password_grant\"'})@Expose({name: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The refresh token only when grant_type is set to \"refresh_token\"'})@Expose({name: 'refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        scopes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The list of the permissions (tpApps) that the application requests.', isArray: true})@Expose({name: 'scopes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The username only when grant_type is set to \"refresh_token\"'})@Expose({name: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/requests/oauth2-request.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\nimport { Expose } from 'class-transformer';\n\n/**\n * Main object used to transport data\n */\nexport class OAuth2Request {\n  @ApiProperty({\n    type: String,\n    description:\n      'The type of grant you are requesting, must be \"client_credentials\"',\n    required: true,\n  })\n  @IsNotEmpty()\n  @Expose({ name: 'grant_type' })\n  grantType: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The API Key given by the application',\n    required: true,\n  })\n  @IsNotEmpty()\n  @Expose({ name: 'client_id' })\n  clientId: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The API Token given by the application',\n    required: true,\n  })\n  @Expose({ name: 'client_secret' })\n  clientSecret: string;\n\n  @ApiProperty({\n    type: Number,\n    description:\n      'The expiration time of the assertion, specified as seconds since 00:00:00 UTC, January 1, 1970. This value has a maximum of 1 hour after the issued time.',\n  })\n  @Expose({ name: 'exp' })\n  exp?: number;\n\n  @ApiProperty({\n    type: Number,\n    description:\n      'The time the assertion was issued, specified as seconds since 00:00:00 UTC, January 1, 1970.',\n  })\n  @Expose({ name: 'iat' })\n  iat?: number;\n\n  @ApiProperty({\n    type: String,\n    description:\n      'The list of the permissions (tpApps) that the application requests.',\n    isArray: true,\n  })\n  @Expose({ name: 'scopes' })\n  scopes?: string | string[];\n\n  @ApiProperty({\n    type: String,\n    description:\n      'The refresh token only when grant_type is set to \"refresh_token\"',\n  })\n  @Expose({ name: 'refresh_token' })\n  refreshToken?: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The username only when grant_type is set to \"refresh_token\"',\n  })\n  @Expose({ name: 'username' })\n  username?: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The password when grant_type is set to \"password_grant\"',\n  })\n  @Expose({ name: 'password' })\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuth2Response.html":{"url":"classes/OAuth2Response.html","title":"class - OAuth2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuth2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/resources/oauth2-response.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Main object used to transport data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                    \n                                accessTokenExp\n                            \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                refreshTokenExp\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                scope\n                            \n                            \n                                    \n                                    \n                                tokenType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: string, refreshToken: string, accessTokenExp: number, refreshTokenExp: number, scope?: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/resources/oauth2-response.dto.ts:55\n                            \n                        \n\n                \n                    \n                            Main method used to build this object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenExp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshTokenExp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scope\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The generated access token', required: true})@Expose({name: 'access_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/resources/oauth2-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessTokenExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'Number of seconds until the acess token expires', required: true})@Expose({name: 'expires_in'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/resources/oauth2-response.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The generated refresh token', required: true})@Expose({name: 'refresh_token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/resources/oauth2-response.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshTokenExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The list of the permissions (tpApps) that the application requests.', required: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/resources/oauth2-response.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Scopes you are allowed to use if any requested', required: true})@Expose({name: 'scope'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/resources/oauth2-response.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tokenType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bearer'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The type of token, in our case should always be \"bearer\"', required: true})@Expose({name: 'token_type'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/resources/oauth2-response.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\n\n/**\n * Main object used to transport data\n */\nexport class OAuth2Response {\n  @ApiProperty({\n    type: String,\n    description: 'The generated access token',\n    required: true,\n  })\n  @Expose({ name: 'access_token' })\n  accessToken: string;\n\n  @ApiProperty({\n    type: String,\n    description: 'The type of token, in our case should always be \"bearer\"',\n    required: true,\n  })\n  @Expose({ name: 'token_type' })\n  tokenType: string = 'bearer';\n\n  @ApiProperty({\n    type: String,\n    description: 'The generated refresh token',\n    required: true,\n  })\n  @Expose({ name: 'refresh_token' })\n  refreshToken: string;\n\n  @ApiProperty({\n    type: Number,\n    description: 'Number of seconds until the acess token expires',\n    required: true,\n  })\n  @Expose({ name: 'expires_in' })\n  accessTokenExp: number;\n\n  @ApiProperty({\n    type: Number,\n    description:\n      'The list of the permissions (tpApps) that the application requests.',\n    required: true,\n  })\n  @Exclude()\n  refreshTokenExp: number;\n\n  @ApiProperty({\n    type: String,\n    description: 'Scopes you are allowed to use if any requested',\n    required: true,\n  })\n  @Expose({ name: 'scope' })\n  scope?: string;\n\n  /**\n   * Main method used to build this object\n   *\n   * @param accessToken\n   * @param refreshToken\n   * @param accessTokenExp\n   * @param refreshTokenExp\n   * @param scope\n   */\n  constructor(\n    accessToken: string,\n    refreshToken: string,\n    accessTokenExp: number,\n    refreshTokenExp: number,\n    scope?: string,\n  ) {\n    this.accessToken = accessToken;\n    this.refreshToken = refreshToken;\n    this.accessTokenExp = accessTokenExp;\n    this.refreshTokenExp = refreshTokenExp;\n    this.scope = scope;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2GrantStrategyInterface.html":{"url":"interfaces/Oauth2GrantStrategyInterface.html","title":"interface - Oauth2GrantStrategyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2GrantStrategyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/oauth2-grant-strategy.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Implement this interface to provide an oauth2 grant type handler. Handlers must be registered using the\ndecorator @Oauth2Strategy('grant_type')\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getOauth2Response\n                                    \n                                \n                                \n                                    \n                                        validate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \ngetOauth2Response(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/oauth2-grant-strategy.interface.ts:24\n                        \n                    \n\n\n            \n                \n                        Get a request from the given response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/oauth2-grant-strategy.interface.ts:16\n                        \n                    \n\n\n            \n                \n                        Validate the request return false if the request is not valid within the context of this strategy\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ClientEntity } from '../entities/client.entity';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../resources/oauth2-response.dto';\n\n/**\n * Implement this interface to provide an oauth2 grant type handler. Handlers must be registered using the\n * decorator @Oauth2Strategy('grant_type')\n */\nexport interface Oauth2GrantStrategyInterface {\n  /**\n   * Validate the request return false if the request is not valid within the context of this strategy\n   *\n   * @param request\n   * @param client\n   */\n  validate(request: OAuth2Request, client: ClientEntity): Promise;\n\n  /**\n   * Get a request from the given response\n   *\n   * @param request\n   * @param client\n   */\n  getOauth2Response(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Oauth2GrantStrategyRegistry.html":{"url":"injectables/Oauth2GrantStrategyRegistry.html","title":"injectable - Oauth2GrantStrategyRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Oauth2GrantStrategyRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/strategy.registry.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the main class used to execute strategies\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                registry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Private\n                                reflectStrategyName\n                            \n                            \n                                register\n                            \n                            \n                                    Protected\n                                registerStrategy\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/strategy.registry.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:73\n                        \n                    \n\n\n            \n                \n                        Get the response\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        reflectStrategyName\n                        \n                    \n                \n            \n            \n                \n                        \n                    reflectStrategyName(strategy: Oauth2GrantStrategyType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                strategy\n                                            \n                                                            Oauth2GrantStrategyType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(strategies: Oauth2GrantStrategyType[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:43\n                        \n                    \n\n\n            \n                \n                        Register all strategies with the decorator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                strategies\n                                            \n                                                            Oauth2GrantStrategyType[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        registerStrategy\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerStrategy(strategy: Oauth2GrantStrategyType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:28\n                        \n                    \n\n\n            \n                \n                        Register a single strategy\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                strategy\n                                            \n                                                            Oauth2GrantStrategyType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.registry.ts:53\n                        \n                    \n\n\n            \n                \n                        Validate the client associated to the given request\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/auth/services/strategy.registry.ts:19\n                        \n                    \n\n            \n                \n                    Store all available granted strategy\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Type } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { OAUTH2_STRATEGY_METADATA } from './strategy.explorer';\nimport { Oauth2GrantStrategyInterface } from '../interfaces/oauth2-grant-strategy.interface';\nimport { ClientEntity } from '../entities/client.entity';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../resources/oauth2-response.dto';\n\nexport type Oauth2GrantStrategyType = Type;\n\n/**\n * This is the main class used to execute strategies\n */\n@Injectable()\nexport class Oauth2GrantStrategyRegistry {\n  /**\n   * Store all available granted strategy\n   */\n  private registry: { [s: string]: Oauth2GrantStrategyInterface } = {};\n\n  constructor(private readonly moduleRef: ModuleRef) {}\n\n  /**\n   * Register a single strategy\n   *\n   * @param strategy\n   */\n  protected registerStrategy(strategy: Oauth2GrantStrategyType): void {\n    const instance = this.moduleRef.get(strategy, { strict: false });\n    if (!instance) {\n      return;\n    }\n\n    const strategyName = this.reflectStrategyName(strategy);\n    this.registry[strategyName] = instance as Oauth2GrantStrategyInterface;\n  }\n\n  /**\n   * Register all strategies with the decorator\n   *\n   * @param strategies\n   */\n  register(strategies: Oauth2GrantStrategyType[] = []) {\n    strategies.forEach(strategy => this.registerStrategy(strategy));\n  }\n\n  /**\n   * Validate the client associated to the given request\n   *\n   * @param request\n   * @param client\n   */\n  async validate(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    if (!(request.grantType in this.registry)) {\n      throw new HttpException(\n        `Cannot find the a strategy for the grant type \"${request.grantType}\"`,\n        400,\n      );\n    }\n\n    return await this.registry[request.grantType].validate(request, client);\n  }\n\n  /**\n   * Get the response\n   *\n   * @param request\n   * @param client\n   */\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    if (!(request.grantType in this.registry)) {\n      throw new HttpException(\n        `Cannot find the a strategy for the grant type \"${request.grantType}\"`,\n        400,\n      );\n    }\n\n    return await this.registry[request.grantType].getOauth2Response(\n      request,\n      client,\n    );\n  }\n\n  private reflectStrategyName(strategy: Oauth2GrantStrategyType): string {\n    return Reflect.getMetadata(OAUTH2_STRATEGY_METADATA, strategy);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2OptionsFactoryInterface.html":{"url":"interfaces/Oauth2OptionsFactoryInterface.html","title":"interface - Oauth2OptionsFactoryInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2OptionsFactoryInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/oauth2-options-factory.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createOauth2Options\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOauth2Options\n                        \n                    \n                \n            \n            \n                \ncreateOauth2Options()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/oauth2-options-factory.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise | OAuth2Options\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { OAuth2Options } from '../types/oauth2-options.type';\n\nexport interface Oauth2OptionsFactoryInterface {\n  createOauth2Options(): Promise | OAuth2Options;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2PayloadInterface.html":{"url":"interfaces/Oauth2PayloadInterface.html","title":"interface - Oauth2PayloadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2PayloadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/oauth2-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                User payloads are used in the guard when the user still finish\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         AccessTokenEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccessTokenEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         Oauth2PayloadType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Oauth2PayloadType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AccessTokenEntity } from '../entities/accoss-token.entity';\n\n/** define payload types */\nexport enum Oauth2PayloadType {\n  CLIENT = 'client',\n  USER = 'user',\n}\n\n/**\n * User payloads are used in the guard when the user still finish\n */\nexport interface Oauth2PayloadInterface {\n  // Store the current type of payload user or client\n  // When the client is connected he should only be able to access his own resources\n  readonly type: Oauth2PayloadType;\n\n  // This is the access token which is currently connected within the application\n  readonly accessToken: AccessTokenEntity;\n\n  // The ID is common to all\n  readonly id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Oauth2StrategyOptions.html":{"url":"interfaces/Oauth2StrategyOptions.html","title":"interface - Oauth2StrategyOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Oauth2StrategyOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/strategy.explorer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            strategies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        strategies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strategies:         Type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Type } from '@nestjs/common';\nimport { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';\nimport { Module } from '@nestjs/core/injector/module';\nimport { ModulesContainer } from '@nestjs/core/injector/modules-container';\nimport { Oauth2GrantStrategyInterface } from '../interfaces/oauth2-grant-strategy.interface';\n\nexport const OAUTH2_STRATEGY_METADATA = '__oauth2GrantStrategy__';\n\nexport interface Oauth2StrategyOptions {\n  strategies: Type[];\n}\n\n@Injectable()\nexport class StrategyExplorer {\n  constructor(private readonly modulesContainer: ModulesContainer) {}\n\n  explore(): Oauth2StrategyOptions {\n    const modules = [...this.modulesContainer.values()];\n    const strategies = this.flatMap(\n      modules,\n      instance => this.filterProvider(instance, OAUTH2_STRATEGY_METADATA),\n    );\n\n    return { strategies };\n  }\n\n  flatMap(\n    modules: Module[],\n    callback: (instance: InstanceWrapper) => Type | undefined,\n  ): Type[] {\n    const items = modules\n      .map(module => [...module.providers.values()].map(callback))\n      .reduce((a, b) => a.concat(b), []);\n    return items.filter(element => !!element) as Type[];\n  }\n\n  filterProvider(\n    wrapper: InstanceWrapper,\n    metadataKey: string,\n  ): Type | undefined {\n    const { instance } = wrapper;\n    if (!instance) {\n      return undefined;\n    }\n    return this.extractMetadata(instance, metadataKey);\n  }\n\n  extractMetadata(instance: Object, metadataKey: string): Type {\n    if (!instance.constructor) {\n      return;\n    }\n    const metadata = Reflect.getMetadata(metadataKey, instance.constructor);\n    return metadata ? (instance.constructor as Type) : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationMeta.html":{"url":"classes/PaginationMeta.html","title":"class - PaginationMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/resources/resources.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    \n                                    Readonly\n                                page\n                            \n                            \n                                    \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PaginationMetaParameters)\n                    \n                \n                        \n                            \n                                Defined in src/query/resources/resources.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PaginationMetaParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nimport { SimpleQueryRequest } from '../requests/requests';\n\nexport interface PaginationMetaParameters {\n  options: SimpleQueryRequest;\n  itemCount: number;\n}\n\nexport class PaginationMeta {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ options, itemCount }: PaginationMetaParameters) {\n    this.page = options.page;\n    this.take = options.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page  {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PaginationMeta })\n  readonly meta: PaginationMeta;\n\n  constructor(data: T[], meta: PaginationMeta) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationMetaParameters.html":{"url":"interfaces/PaginationMetaParameters.html","title":"interface - PaginationMetaParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginationMetaParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/resources/resources.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         SimpleQueryRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SimpleQueryRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nimport { SimpleQueryRequest } from '../requests/requests';\n\nexport interface PaginationMetaParameters {\n  options: SimpleQueryRequest;\n  itemCount: number;\n}\n\nexport class PaginationMeta {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ options, itemCount }: PaginationMetaParameters) {\n    this.page = options.page;\n    this.take = options.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page  {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PaginationMeta })\n  readonly meta: PaginationMeta;\n\n  constructor(data: T[], meta: PaginationMeta) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordStrategy.html":{"url":"classes/PasswordStrategy.html","title":"class - PasswordStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/password.strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Oauth2GrantStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, userValidator: UserValidatorInterface, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/password.strategy.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userValidator\n                                                  \n                                                        \n                                                                        UserValidatorInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/password.strategy.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/password.strategy.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateAccessTokenCommand } from '../commands/create-access-token.command';\nimport { Oauth2GrantStrategy } from '../decorators/oauth2-grant-strategy.decorator';\nimport { ClientEntity } from '../entities/client.entity';\nimport { AccessTokenEntity } from '../entities/accoss-token.entity';\nimport {\n  Oauth2GrantStrategyInterface,\n  ClientRepositoryInterface,\n  UserValidatorInterface,\n} from '../interfaces';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../resources/oauth2-response.dto';\n\n@Oauth2GrantStrategy('password')\nexport class PasswordStrategy implements Oauth2GrantStrategyInterface {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param userValidator\n   * @param commandBus\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    @Inject('UserValidatorInterface')\n    private readonly userValidator: UserValidatorInterface,\n    private readonly commandBus: CommandBus,\n  ) {}\n\n  async validate(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    if (\n      (client.clientSecret && client.clientSecret !== request.clientSecret) ||\n      client.deletedAt !== null ||\n      !client.grants.includes(request.grantType)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    const user = await this.userValidator.validate(\n      request.username,\n      request.password,\n    );\n    const requestScopes =\n      typeof request.scopes === 'string' ? [request.scopes] : request.scopes;\n    const accessToken: AccessTokenEntity = await this.commandBus.execute(\n      new CreateAccessTokenCommand(\n        client.id,\n        JSON.stringify(requestScopes),\n        request.exp,\n        request.iat,\n        request,\n        user.id,\n      ),\n    );\n\n    return new OAuth2Response(\n      accessToken.accessToken,\n      accessToken.refreshToken,\n      ~~((accessToken.accessTokenExpiresAt.getTime() - Date.now()) / 1000),\n      ~~((accessToken.refreshTokenExpiresAt.getTime() - Date.now()) / 1000),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PermissionEntity.html":{"url":"entities/PermissionEntity.html","title":"entity - PermissionEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PermissionEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayTitle\n                            \n                            \n                                    \n                                group\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionGroupEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, group => group.slug)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, role => role.slug)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  Entity,\n  ManyToOne,\n  OneToMany,\n  PrimaryColumn,\n} from 'typeorm';\nimport { PermissionGroupEntity } from './auth-permission-group.entity';\nimport { RoleEntity } from './auth-role.entity';\n\n@Entity('schema_auth_permissions')\nexport class PermissionEntity extends BaseEntity {\n  @PrimaryColumn('varchar', {\n    length: 120,\n  })\n  slug: string;\n\n  @OneToMany(() => RoleEntity, role => role.slug)\n  role: Array;\n\n  @Column('varchar', {\n    length: 120,\n  })\n  displayTitle: string;\n\n  @ManyToOne(() => PermissionGroupEntity, group => group.slug)\n  group: PermissionGroupEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/PermissionGroupEntity.html":{"url":"entities/PermissionGroupEntity.html","title":"entity - PermissionGroupEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  PermissionGroupEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-permission-group.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayTitle\n                            \n                            \n                                    \n                                    Optional\n                                permissions\n                            \n                            \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission-group.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, role => role.slug)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission-group.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-permission-group.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, OneToMany, PrimaryColumn } from 'typeorm';\nimport { PermissionEntity } from './auth-permission.entity';\n\n@Entity('schema_auth_permission_groups')\nexport class PermissionGroupEntity extends BaseEntity {\n  @PrimaryColumn('varchar', {\n    length: 120,\n  })\n  slug: string;\n\n  @Column('varchar', {\n    length: 120,\n  })\n  displayTitle: string;\n\n  @OneToMany(() => PermissionEntity, role => role.slug)\n  permissions?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QueryController.html":{"url":"controllers/QueryController.html","title":"controller - QueryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QueryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/controllers/query.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                createModel\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getRecords\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getRecordsSimple\n                            \n                            \n                                    \n                                    \n                                getSchema\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(schema: string, createUserDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createModel\n                        \n                    \n                \n            \n            \n                \ncreateModel(type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:91\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, schema: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('id/:id')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getRecords\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRecords(schema: string, options: ComplexQueryRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('list')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ComplexQueryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getRecordsSimple\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRecordsSimple(schema: string, options: SimpleQueryRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            SimpleQueryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSchema(schema: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, schema: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, schema: string, updateUserDto: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@Version('1')\n                \n            \n\n                    \n                        \n                            Defined in src/query/controllers/query.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Version,\n} from '@nestjs/common';\nimport { isArray } from 'lodash';\nimport { QueryService } from '../services/query.service';\n\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport {\n  ComplexQueryRequest,\n  PaginationMeta,\n  QueryPaginationResource,\n  SimpleQueryRequest,\n} from '..';\nimport { AccessTokenRequired } from '../../auth/decorators/access-token-decorator';\nimport { EntityAccessorValidation } from '../decorators/entity-accessor.decorator';\nimport { applyFilter, applySort } from '../helpers';\n\n@Controller({\n  path: '_query/:entity',\n  version: ['1'],\n})\n@EntityAccessorValidation()\n@AccessTokenRequired()\n@ApiTags('query')\n@ApiBearerAuth()\nexport class QueryController {\n  constructor(private readonly queryService: QueryService) {}\n\n  @Post()\n  @Version('1')\n  create(@Param('entity') schema: string, @Body() createUserDto: any) {}\n\n  @Post('list')\n  @Version('1')\n  async getRecords(\n    @Param('entity') schema: string,\n    @Body() options: ComplexQueryRequest,\n  ): Promise> {\n    const fields = this.queryService.getMetaDataFields(schema);\n    const repo = this.queryService.getRepository(schema);\n    const queryBuilder = repo.createQueryBuilder();\n\n    queryBuilder.skip(options.skip).take(options.take);\n\n    const itemCount = await queryBuilder.getCount();\n    const { entities } = await queryBuilder.getRawAndEntities();\n\n    if (options.sort !== undefined && isArray(options.sort)) {\n      for (let item of options.sort) {\n        applySort(fields, item, queryBuilder);\n      }\n    }\n\n    if (options.filter !== undefined && isArray(options.filter)) {\n      for (let item of options.filter) {\n        applyFilter(fields, item, queryBuilder);\n      }\n    }\n\n    const pageMetaDto = new PaginationMeta({ itemCount, options });\n    return new QueryPaginationResource(entities, pageMetaDto);\n  }\n\n  @Get('list')\n  @Version('1')\n  async getRecordsSimple(\n    @Param('entity') schema: string,\n    @Query() options: SimpleQueryRequest,\n  ): Promise> {\n    const fields = this.queryService.getMetaDataFields(schema);\n    const repo = this.queryService.getRepository(schema);\n    const queryBuilder = repo.createQueryBuilder();\n\n    queryBuilder.skip(options.skip).take(options.take);\n\n    const itemCount = await queryBuilder.getCount();\n    const { entities } = await queryBuilder.getRawAndEntities();\n\n    const pageMetaDto = new PaginationMeta({ itemCount, options });\n    return new QueryPaginationResource(entities, pageMetaDto);\n  }\n\n  createModel(type: new () => T): T {\n    return new type();\n  }\n\n  @Get()\n  @Version('1')\n  getSchema(@Param('entity') schema: string) {\n    const avaiableFields = this.queryService.getMetaDataFields(schema);\n    return avaiableFields;\n  }\n\n  @Get('id/:id')\n  @Version('1')\n  findOne(@Param('id') id: string, @Param('entity') schema: string) {\n    return schema;\n  }\n\n  @Patch(':id')\n  @Version('1')\n  update(\n    @Param('id') id: string,\n    @Param('entity') schema: string,\n    @Body() updateUserDto: any,\n  ) {}\n\n  @Delete(':id')\n  @Version('1')\n  remove(@Param('id') id: string, @Param('entity') schema: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryModule.html":{"url":"modules/QueryModule.html","title":"module - QueryModule","body":"\n                   \n\n\n\n\n    Modules\n    QueryModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/query/query.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/query.module.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { QUERY_MODULE_CONFIG_KEY } from './constants';\nimport { QueryController } from './controllers/query.controller';\nimport { EntityAccessorGuard } from './guards';\nimport { QueryOptions } from './interfaces';\nimport { QueryService } from './services/query.service';\n\n@Module({})\nexport class QueryModule {\n  public static forRoot(options?: QueryOptions): DynamicModule {\n    return {\n      module: QueryModule,\n      imports: [],\n      controllers: [QueryController],\n      providers: [\n        {\n          provide: QUERY_MODULE_CONFIG_KEY,\n          useValue: options || {},\n        },\n        QueryService,\n        {\n          provide: APP_GUARD,\n          useClass: EntityAccessorGuard,\n        },\n      ],\n      exports: [QueryService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryOptions.html":{"url":"interfaces/QueryOptions.html","title":"interface - QueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/interfaces/query-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminRoleName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminRoleName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminRoleName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryOptions {\n  adminRoleName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryPaginationResource.html":{"url":"classes/QueryPaginationResource.html","title":"class - QueryPaginationResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryPaginationResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/resources/resources.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                data\n                            \n                            \n                                    \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PaginationMeta)\n                    \n                \n                        \n                            \n                                Defined in src/query/resources/resources.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PaginationMeta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaginationMeta\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PaginationMeta})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/resources/resources.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nimport { SimpleQueryRequest } from '../requests/requests';\n\nexport interface PaginationMetaParameters {\n  options: SimpleQueryRequest;\n  itemCount: number;\n}\n\nexport class PaginationMeta {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ options, itemCount }: PaginationMetaParameters) {\n    this.page = options.page;\n    this.take = options.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page  {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PaginationMeta })\n  readonly meta: PaginationMeta;\n\n  constructor(data: T[], meta: PaginationMeta) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueryService.html":{"url":"injectables/QueryService.html","title":"injectable - QueryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QueryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/services/query.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resources\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAllFields\n                            \n                            \n                                    Public\n                                getMetaDataField\n                            \n                            \n                                    Public\n                                getMetaDataFields\n                            \n                            \n                                    Public\n                                getRepository\n                            \n                            \n                                    Public\n                                getSchema\n                            \n                            \n                                    Public\n                                hasSchema\n                            \n                            \n                                    Public\n                                registerEntity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: QueryOptions, dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/query/services/query.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        QueryOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getAllFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllFields(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/services/query.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMetaDataField\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetaDataField(schema: string, field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/services/query.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         MetaDataResult | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMetaDataFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMetaDataFields(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/services/query.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ResourceDictonary\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRepository\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRepository(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/services/query.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Repository\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSchema(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/services/query.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     EntityClassOrSchema\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasSchema\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasSchema(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/services/query.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registerEntity\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerEntity(schemaName: string, type: EntityClassOrSchema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/query/services/query.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schemaName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        EntityClassOrSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _resources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ResourceDictonary\n\n                    \n                \n                    \n                        \n                                Defined in src/query/services/query.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { InjectDataSource } from '@nestjs/typeorm';\nimport { EntityClassOrSchema } from '@nestjs/typeorm/dist/interfaces/entity-class-or-schema.type';\nimport { DataSource, Repository } from 'typeorm';\nimport { ResourceDictonary } from '../../admin.config';\nimport { ADMIN_FIELD_DECORATOR_KEY } from '../../constants';\n\nimport _ from 'lodash';\nimport { QUERY_MODULE_CONFIG_KEY } from '../constants';\nimport { MetaDataResult } from '../decorators';\nimport { QueryOptions } from '../interfaces';\n\n@Injectable()\nexport class QueryService {\n  private _resources: ResourceDictonary;\n  constructor(\n    @Inject(QUERY_MODULE_CONFIG_KEY) private options: QueryOptions,\n    @InjectDataSource() private readonly dataSource: DataSource,\n  ) {\n    if (this.options.adminRoleName === undefined) {\n      this.options.adminRoleName = 'admin';\n    }\n    //  this._resources = this.options.entities || {};\n    this._resources = {};\n  }\n\n  public hasSchema(schema: string) {\n    return Object.keys(this._resources).includes(schema);\n  }\n\n  public getAllFields(schema: string) {\n    const _schema = this.getRepository(schema);\n    const fields = _schema.metadata.propertiesMap;\n\n    return Object.keys(fields);\n  }\n\n  public getMetaDataFields(schema: string): ResourceDictonary {\n    const _schema = this.getRepository(schema);\n    const fields = _schema.metadata.columns;\n    const instance = _schema.create();\n\n    const modelFields = Object.fromEntries(\n      fields\n        .filter(field => {\n          return (\n            Reflect.hasMetadata(\n              ADMIN_FIELD_DECORATOR_KEY,\n              instance,\n              field.propertyName,\n            ) || field.isPrimary\n          );\n        })\n        .map(field => {\n          const currentOptions =\n            Reflect.getMetadata(\n              ADMIN_FIELD_DECORATOR_KEY,\n              instance,\n              field.propertyName,\n            ) || {};\n\n          const defaultOptions: MetaDataResult = {\n            readPermission: this.options.adminRoleName,\n            editPermission: this.options.adminRoleName,\n            isFilterable: false,\n            isSortable: false,\n          };\n\n          const options = _.defaults(currentOptions, defaultOptions);\n\n          options.isNullable = field.isNullable;\n          options.isPrimary = field.isPrimary;\n\n          return [field.propertyName, options];\n        }),\n    );\n\n    return modelFields;\n  }\n\n  public getMetaDataField(\n    schema: string,\n    field: string,\n  ): MetaDataResult | undefined {\n    const fields = this.getMetaDataFields(schema);\n    return fields[field];\n  }\n\n  public getSchema(schema: string): EntityClassOrSchema {\n    return this._resources[schema];\n  }\n\n  public getRepository(schema: string): Repository {\n    const _schema = this.getSchema(schema);\n    return this.dataSource.getRepository(_schema);\n  }\n\n  public registerEntity(schemaName: string, type: EntityClassOrSchema) {\n    this._resources[schemaName] = type;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenStrategy.html":{"url":"classes/RefreshTokenStrategy.html","title":"class - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/refresh-token.strategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Oauth2GrantStrategyInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getOauth2Response\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepositoryInterface, accessTokenRepository: AccessTokenRepositoryInterface, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/refresh-token.strategy.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenRepository\n                                                  \n                                                        \n                                                                        AccessTokenRepositoryInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOauth2Response\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOauth2Response(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/refresh-token.strategy.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(request: OAuth2Request, client: ClientEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/refresh-token.strategy.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            OAuth2Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                            ClientEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, UnauthorizedException } from '@nestjs/common';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { CreateAccessTokenCommand } from '../commands/create-access-token.command';\nimport { Oauth2GrantStrategy } from '../decorators/oauth2-grant-strategy.decorator';\nimport { ClientEntity } from '../entities/client.entity';\nimport { AccessTokenEntity } from '../entities/accoss-token.entity';\nimport {\n  Oauth2GrantStrategyInterface,\n  ClientRepositoryInterface,\n  AccessTokenRepositoryInterface,\n} from '../interfaces';\nimport { OAuth2Request } from '../requests/oauth2-request.dto';\nimport { OAuth2Response } from '../resources/oauth2-response.dto';\n\n@Oauth2GrantStrategy('refresh_token')\nexport class RefreshTokenStrategy implements Oauth2GrantStrategyInterface {\n  /**\n   * Constructor\n   *\n   * @param clientRepository\n   * @param accessTokenRepository\n   * @param commandBus\n   */\n  constructor(\n    @Inject('ClientRepositoryInterface')\n    private readonly clientRepository: ClientRepositoryInterface,\n    @Inject('AccessTokenRepositoryInterface')\n    private readonly accessTokenRepository: AccessTokenRepositoryInterface,\n    private readonly commandBus: CommandBus,\n  ) {}\n\n  async validate(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    if (\n      (client.clientSecret && client.clientSecret !== request.clientSecret) ||\n      client.deletedAt !== null ||\n      !client.grants.includes(request.grantType)\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  async getOauth2Response(\n    request: OAuth2Request,\n    client: ClientEntity,\n  ): Promise {\n    const expiredToken = await this.accessTokenRepository.findByRefreshToken(\n      request.refreshToken,\n    );\n    if (\n      expiredToken.refreshTokenExpiresAt \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceDictonary.html":{"url":"interfaces/ResourceDictonary.html","title":"interface - ResourceDictonary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResourceDictonary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin.config.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [Key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/admin.config.ts:6\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ModuleMetadata } from '@nestjs/common';\nimport { OAuth2Options } from './auth';\nimport { QueryOptions } from './query';\n\nexport interface ResourceDictonary {\n  [Key: string]: T;\n}\nexport interface AdminConfig extends Pick {\n  query?: QueryOptions;\n  auth: OAuth2Options;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RoleEntity.html":{"url":"entities/RoleEntity.html","title":"entity - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth-role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                displayTitle\n                            \n                            \n                                    \n                                    Optional\n                                permissions\n                            \n                            \n                                    \n                                slug\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        displayTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, permission => permission.slug)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 120})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/auth-role.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, OneToMany, PrimaryColumn } from 'typeorm';\nimport { PermissionEntity } from './auth-permission.entity';\n\n@Entity('schema_auth_roles')\nexport class RoleEntity extends BaseEntity {\n  @PrimaryColumn('varchar', {\n    length: 120,\n  })\n  slug: string;\n\n  @Column('varchar', {\n    length: 120,\n  })\n  displayTitle: string;\n\n  @OneToMany(() => PermissionEntity, permission => permission.slug)\n  permissions?: Array;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleQueryRequest.html":{"url":"classes/SimpleQueryRequest.html","title":"class - SimpleQueryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleQueryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/requests/requests.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 200, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(200)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/query/requests/requests.ts:49\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsString,\n  IsEnum,\n  IsInt,\n  Min,\n  IsOptional,\n  Max,\n  ValidateNested,\n  IsArray,\n} from 'class-validator';\nimport { QueryOrder } from '../interfaces/query-order.enum';\n\nexport class SortableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @ApiPropertyOptional({})\n  @IsEnum(QueryOrder)\n  readonly order: QueryOrder = QueryOrder.ASC;\n}\n\nexport class SimpleQueryRequest {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 200,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(200)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n}\nexport class FilterableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly term: string;\n}\n\nexport class ComplexQueryRequest extends SimpleQueryRequest {\n  @ApiPropertyOptional({ type: SortableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @IsArray()\n  @Type(() => SortableRequest)\n  readonly sort?: SortableRequest[];\n\n  @ApiPropertyOptional({ type: FilterableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => FilterableRequest)\n  readonly filter?: FilterableRequest[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortableRequest.html":{"url":"classes/SortableRequest.html","title":"class - SortableRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortableRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/query/requests/requests.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                field\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiPropertyOptional({})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryOrder\n\n                    \n                \n                \n                    \n                        Default value : QueryOrder.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({})@IsEnum(QueryOrder)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/query/requests/requests.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsString,\n  IsEnum,\n  IsInt,\n  Min,\n  IsOptional,\n  Max,\n  ValidateNested,\n  IsArray,\n} from 'class-validator';\nimport { QueryOrder } from '../interfaces/query-order.enum';\n\nexport class SortableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @ApiPropertyOptional({})\n  @IsEnum(QueryOrder)\n  readonly order: QueryOrder = QueryOrder.ASC;\n}\n\nexport class SimpleQueryRequest {\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 200,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(200)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n}\nexport class FilterableRequest {\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly field: string;\n\n  @IsString()\n  @ApiPropertyOptional({})\n  @Type(() => String)\n  readonly term: string;\n}\n\nexport class ComplexQueryRequest extends SimpleQueryRequest {\n  @ApiPropertyOptional({ type: SortableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @IsArray()\n  @Type(() => SortableRequest)\n  readonly sort?: SortableRequest[];\n\n  @ApiPropertyOptional({ type: FilterableRequest, isArray: true })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => FilterableRequest)\n  readonly filter?: FilterableRequest[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrategyExplorer.html":{"url":"injectables/StrategyExplorer.html","title":"injectable - StrategyExplorer","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrategyExplorer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/services/strategy.explorer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                explore\n                            \n                            \n                                extractMetadata\n                            \n                            \n                                filterProvider\n                            \n                            \n                                flatMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modulesContainer: ModulesContainer)\n                    \n                \n                        \n                            \n                                Defined in src/auth/services/strategy.explorer.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modulesContainer\n                                                  \n                                                        \n                                                                    ModulesContainer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        explore\n                        \n                    \n                \n            \n            \n                \nexplore()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Oauth2StrategyOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractMetadata\n                        \n                    \n                \n            \n            \n                \nextractMetadata(instance: Object, metadataKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                instance\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadataKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProvider\n                        \n                    \n                \n            \n            \n                \nfilterProvider(wrapper: InstanceWrapper, metadataKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                wrapper\n                                            \n                                                        InstanceWrapper\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadataKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flatMap\n                        \n                    \n                \n            \n            \n                \nflatMap(modules: Module[], callback: (instance: InstanceWrapper) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/services/strategy.explorer.ts:27\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                modules\n                                            \n                                                        Module[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Type[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Type } from '@nestjs/common';\nimport { InstanceWrapper } from '@nestjs/core/injector/instance-wrapper';\nimport { Module } from '@nestjs/core/injector/module';\nimport { ModulesContainer } from '@nestjs/core/injector/modules-container';\nimport { Oauth2GrantStrategyInterface } from '../interfaces/oauth2-grant-strategy.interface';\n\nexport const OAUTH2_STRATEGY_METADATA = '__oauth2GrantStrategy__';\n\nexport interface Oauth2StrategyOptions {\n  strategies: Type[];\n}\n\n@Injectable()\nexport class StrategyExplorer {\n  constructor(private readonly modulesContainer: ModulesContainer) {}\n\n  explore(): Oauth2StrategyOptions {\n    const modules = [...this.modulesContainer.values()];\n    const strategies = this.flatMap(\n      modules,\n      instance => this.filterProvider(instance, OAUTH2_STRATEGY_METADATA),\n    );\n\n    return { strategies };\n  }\n\n  flatMap(\n    modules: Module[],\n    callback: (instance: InstanceWrapper) => Type | undefined,\n  ): Type[] {\n    const items = modules\n      .map(module => [...module.providers.values()].map(callback))\n      .reduce((a, b) => a.concat(b), []);\n    return items.filter(element => !!element) as Type[];\n  }\n\n  filterProvider(\n    wrapper: InstanceWrapper,\n    metadataKey: string,\n  ): Type | undefined {\n    const { instance } = wrapper;\n    if (!instance) {\n      return undefined;\n    }\n    return this.extractMetadata(instance, metadataKey);\n  }\n\n  extractMetadata(instance: Object, metadataKey: string): Type {\n    if (!instance.constructor) {\n      return;\n    }\n    const metadata = Reflect.getMetadata(metadataKey, instance.constructor);\n    return metadata ? (instance.constructor as Type) : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/System1705059848171.html":{"url":"classes/System1705059848171.html","title":"class - System1705059848171","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  System1705059848171\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/migrations/1705059848171-system.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'System1705059848171'\n                    \n                \n                    \n                        \n                                Defined in src/database/migrations/1705059848171-system.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1705059848171-system.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/migrations/1705059848171-system.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class System1705059848171 implements MigrationInterface {\n    name = 'System1705059848171'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`CREATE TABLE \"schema_auth_clients\" (\"id\" varchar PRIMARY KEY NOT NULL, \"name\" text NOT NULL, \"client_id\" text NOT NULL, \"client_secret\" text, \"grants\" text NOT NULL DEFAULT ('client_credentials,refresh_token'), \"scope\" varchar(500) NOT NULL, \"access_token_lifetime\" integer NOT NULL DEFAULT (3600), \"refresh_token_lifetime\" integer NOT NULL DEFAULT (7200), \"private_key\" text NOT NULL, \"public_key\" text NOT NULL, \"cert\" text NOT NULL, \"cert_expires_at\" datetime NOT NULL, \"created_at\" datetime NOT NULL DEFAULT (now()), \"deleted_at\" datetime, CONSTRAINT \"UQ_45bc4feb7bc791056dccef8823d\" UNIQUE (\"client_id\"))`);\n        await queryRunner.query(`CREATE TABLE \"schema_auth_permission_groups\" (\"slug\" varchar(120) PRIMARY KEY NOT NULL, \"displayTitle\" varchar(120) NOT NULL)`);\n        await queryRunner.query(`CREATE TABLE \"schema_auth_roles\" (\"slug\" varchar(120) PRIMARY KEY NOT NULL, \"displayTitle\" varchar(120) NOT NULL)`);\n        await queryRunner.query(`CREATE TABLE \"schema_auth_permissions\" (\"slug\" varchar(120) PRIMARY KEY NOT NULL, \"displayTitle\" varchar(120) NOT NULL, \"groupSlug\" varchar(120))`);\n        await queryRunner.query(`CREATE TABLE \"schema_auth_client_roles\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL, \"identifier\" varchar NOT NULL, \"roleSlug\" varchar(120), CONSTRAINT \"UQ_d8ed48b2353e2dc8693c867afa2\" UNIQUE (\"roleSlug\", \"identifier\"))`);\n        await queryRunner.query(`CREATE TABLE \"schema_access_tokens\" (\"id\" varchar NOT NULL, \"access_token\" varchar(80) NOT NULL, \"refresh_token\" varchar(80) NOT NULL, \"access_token_expires_at\" datetime NOT NULL, \"refresh_token_expires_at\" datetime NOT NULL, \"user_id\" varchar, \"scope\" varchar(500), \"created_on\" datetime NOT NULL DEFAULT (now()), \"created_from\" json, \"client_id\" varchar NOT NULL, CONSTRAINT \"UQ_c2315c06123b7886476f14499fb\" UNIQUE (\"refresh_token\"), PRIMARY KEY (\"id\", \"access_token\"))`);\n        await queryRunner.query(`CREATE TABLE \"temporary_schema_auth_permissions\" (\"slug\" varchar(120) PRIMARY KEY NOT NULL, \"displayTitle\" varchar(120) NOT NULL, \"groupSlug\" varchar(120), CONSTRAINT \"FK_a1ab8619e6e68943beb98d7e887\" FOREIGN KEY (\"groupSlug\") REFERENCES \"schema_auth_permission_groups\" (\"slug\") ON DELETE NO ACTION ON UPDATE NO ACTION)`);\n        await queryRunner.query(`INSERT INTO \"temporary_schema_auth_permissions\"(\"slug\", \"displayTitle\", \"groupSlug\") SELECT \"slug\", \"displayTitle\", \"groupSlug\" FROM \"schema_auth_permissions\"`);\n        await queryRunner.query(`DROP TABLE \"schema_auth_permissions\"`);\n        await queryRunner.query(`ALTER TABLE \"temporary_schema_auth_permissions\" RENAME TO \"schema_auth_permissions\"`);\n        await queryRunner.query(`CREATE TABLE \"temporary_schema_auth_client_roles\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL, \"identifier\" varchar NOT NULL, \"roleSlug\" varchar(120), CONSTRAINT \"UQ_d8ed48b2353e2dc8693c867afa2\" UNIQUE (\"roleSlug\", \"identifier\"), CONSTRAINT \"FK_9119b10057145abf25ea35f5bcf\" FOREIGN KEY (\"roleSlug\") REFERENCES \"schema_auth_roles\" (\"slug\") ON DELETE NO ACTION ON UPDATE NO ACTION)`);\n        await queryRunner.query(`INSERT INTO \"temporary_schema_auth_client_roles\"(\"id\", \"identifier\", \"roleSlug\") SELECT \"id\", \"identifier\", \"roleSlug\" FROM \"schema_auth_client_roles\"`);\n        await queryRunner.query(`DROP TABLE \"schema_auth_client_roles\"`);\n        await queryRunner.query(`ALTER TABLE \"temporary_schema_auth_client_roles\" RENAME TO \"schema_auth_client_roles\"`);\n        await queryRunner.query(`CREATE TABLE \"temporary_schema_access_tokens\" (\"id\" varchar NOT NULL, \"access_token\" varchar(80) NOT NULL, \"refresh_token\" varchar(80) NOT NULL, \"access_token_expires_at\" datetime NOT NULL, \"refresh_token_expires_at\" datetime NOT NULL, \"user_id\" varchar, \"scope\" varchar(500), \"created_on\" datetime NOT NULL DEFAULT (now()), \"created_from\" json, \"client_id\" varchar NOT NULL, CONSTRAINT \"UQ_c2315c06123b7886476f14499fb\" UNIQUE (\"refresh_token\"), CONSTRAINT \"FK_cf45404b988e029dc71b416dd1f\" FOREIGN KEY (\"client_id\") REFERENCES \"schema_auth_clients\" (\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION, PRIMARY KEY (\"id\", \"access_token\"))`);\n        await queryRunner.query(`INSERT INTO \"temporary_schema_access_tokens\"(\"id\", \"access_token\", \"refresh_token\", \"access_token_expires_at\", \"refresh_token_expires_at\", \"user_id\", \"scope\", \"created_on\", \"created_from\", \"client_id\") SELECT \"id\", \"access_token\", \"refresh_token\", \"access_token_expires_at\", \"refresh_token_expires_at\", \"user_id\", \"scope\", \"created_on\", \"created_from\", \"client_id\" FROM \"schema_access_tokens\"`);\n        await queryRunner.query(`DROP TABLE \"schema_access_tokens\"`);\n        await queryRunner.query(`ALTER TABLE \"temporary_schema_access_tokens\" RENAME TO \"schema_access_tokens\"`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \"schema_access_tokens\" RENAME TO \"temporary_schema_access_tokens\"`);\n        await queryRunner.query(`CREATE TABLE \"schema_access_tokens\" (\"id\" varchar NOT NULL, \"access_token\" varchar(80) NOT NULL, \"refresh_token\" varchar(80) NOT NULL, \"access_token_expires_at\" datetime NOT NULL, \"refresh_token_expires_at\" datetime NOT NULL, \"user_id\" varchar, \"scope\" varchar(500), \"created_on\" datetime NOT NULL DEFAULT (now()), \"created_from\" json, \"client_id\" varchar NOT NULL, CONSTRAINT \"UQ_c2315c06123b7886476f14499fb\" UNIQUE (\"refresh_token\"), PRIMARY KEY (\"id\", \"access_token\"))`);\n        await queryRunner.query(`INSERT INTO \"schema_access_tokens\"(\"id\", \"access_token\", \"refresh_token\", \"access_token_expires_at\", \"refresh_token_expires_at\", \"user_id\", \"scope\", \"created_on\", \"created_from\", \"client_id\") SELECT \"id\", \"access_token\", \"refresh_token\", \"access_token_expires_at\", \"refresh_token_expires_at\", \"user_id\", \"scope\", \"created_on\", \"created_from\", \"client_id\" FROM \"temporary_schema_access_tokens\"`);\n        await queryRunner.query(`DROP TABLE \"temporary_schema_access_tokens\"`);\n        await queryRunner.query(`ALTER TABLE \"schema_auth_client_roles\" RENAME TO \"temporary_schema_auth_client_roles\"`);\n        await queryRunner.query(`CREATE TABLE \"schema_auth_client_roles\" (\"id\" integer PRIMARY KEY AUTOINCREMENT NOT NULL, \"identifier\" varchar NOT NULL, \"roleSlug\" varchar(120), CONSTRAINT \"UQ_d8ed48b2353e2dc8693c867afa2\" UNIQUE (\"roleSlug\", \"identifier\"))`);\n        await queryRunner.query(`INSERT INTO \"schema_auth_client_roles\"(\"id\", \"identifier\", \"roleSlug\") SELECT \"id\", \"identifier\", \"roleSlug\" FROM \"temporary_schema_auth_client_roles\"`);\n        await queryRunner.query(`DROP TABLE \"temporary_schema_auth_client_roles\"`);\n        await queryRunner.query(`ALTER TABLE \"schema_auth_permissions\" RENAME TO \"temporary_schema_auth_permissions\"`);\n        await queryRunner.query(`CREATE TABLE \"schema_auth_permissions\" (\"slug\" varchar(120) PRIMARY KEY NOT NULL, \"displayTitle\" varchar(120) NOT NULL, \"groupSlug\" varchar(120))`);\n        await queryRunner.query(`INSERT INTO \"schema_auth_permissions\"(\"slug\", \"displayTitle\", \"groupSlug\") SELECT \"slug\", \"displayTitle\", \"groupSlug\" FROM \"temporary_schema_auth_permissions\"`);\n        await queryRunner.query(`DROP TABLE \"temporary_schema_auth_permissions\"`);\n        await queryRunner.query(`DROP TABLE \"schema_access_tokens\"`);\n        await queryRunner.query(`DROP TABLE \"schema_auth_client_roles\"`);\n        await queryRunner.query(`DROP TABLE \"schema_auth_permissions\"`);\n        await queryRunner.query(`DROP TABLE \"schema_auth_roles\"`);\n        await queryRunner.query(`DROP TABLE \"schema_auth_permission_groups\"`);\n        await queryRunner.query(`DROP TABLE \"schema_auth_clients\"`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n  id: string;\n  username: string;\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserLoaderInterface.html":{"url":"interfaces/UserLoaderInterface.html","title":"interface - UserLoaderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserLoaderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user-loader.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the main interface you have to implement in order to have the appropriate\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        load\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/user-loader.interface.ts:12\n                        \n                    \n\n\n            \n                \n                        Implement this interface to load your user into the payload from its id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserInterface } from './user.interface';\n\n/**\n * This is the main interface you have to implement in order to have the appropriate\n */\nexport interface UserLoaderInterface {\n  /**\n   * Implement this interface to load your user into the payload from its id\n   *\n   * @param userId\n   */\n  load(userId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPayload.html":{"url":"classes/UserPayload.html","title":"class - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user-payload.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a UserPayload\n\n            \n\n\n            \n                Implements\n            \n            \n                            Oauth2PayloadInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: AccessTokenEntity, id: string, username: string, email: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/interfaces/user-payload.interface.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        AccessTokenEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccessTokenEntity\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Oauth2PayloadType\n\n                    \n                \n                \n                    \n                        Default value : Oauth2PayloadType.USER\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:14\n                        \n                    \n\n            \n                \n                    The current payload type should not be changed as it should always be user in this case\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interfaces/user-payload.interface.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccessTokenEntity } from '../entities/accoss-token.entity';\nimport {\n  Oauth2PayloadInterface,\n  Oauth2PayloadType,\n} from './oauth2-payload.interface';\n\n/**\n * Represents a UserPayload\n */\nexport class UserPayload implements Oauth2PayloadInterface {\n  /**\n   * The current payload type should not be changed as it should always be user in this case\n   */\n  readonly type: Oauth2PayloadType = Oauth2PayloadType.USER;\n\n  constructor(\n    public readonly accessToken: AccessTokenEntity,\n    public readonly id: string,\n    public readonly username: string,\n    public readonly email: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserValidatorInterface.html":{"url":"interfaces/UserValidatorInterface.html","title":"interface - UserValidatorInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserValidatorInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user-validator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Validates that the usernanme exists and has the given password\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        validate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(username, password)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/interfaces/user-validator.interface.ts:16\n                        \n                    \n\n\n            \n                \n                        Implement this method to validate the user existence\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                UserInterface\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserInterface } from './user.interface';\n\n/**\n * Validates that the usernanme exists and has the given password\n */\nexport interface UserValidatorInterface {\n  /**\n   * Implement this method to validate the user existence\n   *\n   * @param username\n   * @param password\n   *\n   * @return UserInterface\n   * @throws InvalidUserException\n   */\n  validate(username, password): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin.config.ts\n            \n            interface\n            AdminConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/admin.config.ts\n            \n            interface\n            ResourceDictonary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            OAUTH2_SERVER_OPTIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            CommandHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            EventHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Oauth2Strategies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            QueryHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Resolvers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Sagas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            ServiceNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/commands/create-access-token.command.ts\n            \n            class\n            CreateAccessTokenCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/commands/create-access-token.handler.ts\n            \n            class\n            CreateAccessTokenHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/commands/create-client.command.ts\n            \n            class\n            CreateClientCommand\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/auth/commands/create-client.handler.ts\n            \n            class\n            CreateClientHandler\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_ADMIN_ROLE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_SYSTEM_PERMISSION_GROUP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_SYSTEM_ROLES_PERMISSION_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/constants/index.ts\n            \n            variable\n            DEFAULT_USER_ROLE_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/controllers/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/decorators/access-token-decorator.ts\n            \n            variable\n            AccessTokenRequired\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/oauth2-grant-strategy.decorator.ts\n            \n            variable\n            Oauth2GrantStrategy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/accoss-token.entity.ts\n            \n            entity\n            AccessTokenEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-permission-group.entity.ts\n            \n            entity\n            PermissionGroupEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-permission.entity.ts\n            \n            entity\n            PermissionEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth-role.entity.ts\n            \n            entity\n            RoleEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/client-roles.entity.ts\n            \n            entity\n            ClientRolesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/client-roles.entity.ts\n            \n            class\n            ClientRolesEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/entities/client.entity.ts\n            \n            entity\n            ClientEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/client.entity.ts\n            \n            class\n            ClientEntity\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/auth/events/access-token-created.event.ts\n            \n            class\n            AccessTokenCreatedEvent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/auth/events/client-created.event.ts\n            \n            class\n            ClientCreatedEvent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/auth/exceptions/access-token-not-found.exception.ts\n            \n            class\n            AccessTokenNotFoundException\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/exceptions/client-not-found.exception.ts\n            \n            class\n            ClientNotFoundException\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/exceptions/invalid-user.exception.ts\n            \n            class\n            InvalidUserException\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/access-token-repository.interface.ts\n            \n            interface\n            AccessTokenRepositoryInterface\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/client-payload.interface.ts\n            \n            class\n            ClientPayload\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/auth/interfaces/client-repository.interface.ts\n            \n            interface\n            ClientRepositoryInterface\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/auth/interfaces/oauth2-grant-strategy.interface.ts\n            \n            interface\n            Oauth2GrantStrategyInterface\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/oauth2-options-factory.interface.ts\n            \n            interface\n            Oauth2OptionsFactoryInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/oauth2-payload.interface.ts\n            \n            interface\n            Oauth2PayloadInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user-loader.interface.ts\n            \n            interface\n            UserLoaderInterface\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user-payload.interface.ts\n            \n            class\n            UserPayload\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user-validator.interface.ts\n            \n            interface\n            UserValidatorInterface\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/loader.ts\n            \n            injectable\n            AdminLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/repository/access-token.repository.ts\n            \n            injectable\n            AccessTokenRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/repository/client.repository.ts\n            \n            injectable\n            ClientRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/requests/oauth2-request.dto.ts\n            \n            class\n            OAuth2Request\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/auth/resources/oauth2-response.dto.ts\n            \n            class\n            OAuth2Response\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/auth/seeds/auth-seeding.service.ts\n            \n            injectable\n            AuthSeedingService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.explorer.ts\n            \n            injectable\n            StrategyExplorer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.explorer.ts\n            \n            interface\n            Oauth2StrategyOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.explorer.ts\n            \n            variable\n            OAUTH2_STRATEGY_METADATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/services/strategy.registry.ts\n            \n            injectable\n            Oauth2GrantStrategyRegistry\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/auth/strategies/access-token.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/client-credentials.strategy.ts\n            \n            class\n            ClientCredentialsStrategy\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/password.strategy.ts\n            \n            class\n            PasswordStrategy\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/refresh-token.strategy.ts\n            \n            class\n            RefreshTokenStrategy\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            ADMIN_FIELD_DECORATOR_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            CONFIG_INJECT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/migrations/1705059848171-system.ts\n            \n            class\n            System1705059848171\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/query/constants/index.ts\n            \n            variable\n            QUERY_MODULE_CONFIG_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/query/controllers/query.controller.ts\n            \n            controller\n            QueryController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/query/decorators.ts\n            \n            interface\n            IEntityAccessorOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/query/decorators.ts\n            \n            interface\n            ITypeOrmAddionalFields\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/query/decorators.ts\n            \n            variable\n            EntityAccessor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/query/decorators/entity-accessor.decorator.ts\n            \n            variable\n            EntityAccessorValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/query/guards/acccesor.guard.ts\n            \n            guard\n            EntityAccessorGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/query/helpers/index.ts\n            \n            variable\n            applyFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/query/helpers/index.ts\n            \n            variable\n            applySort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/query/interfaces/query-options.interface.ts\n            \n            interface\n            QueryOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/query/requests/requests.ts\n            \n            class\n            ComplexQueryRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/query/requests/requests.ts\n            \n            class\n            FilterableRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/query/requests/requests.ts\n            \n            class\n            SimpleQueryRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/query/requests/requests.ts\n            \n            class\n            SortableRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/query/resources/resources.ts\n            \n            class\n            PaginationMeta\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/query/resources/resources.ts\n            \n            class\n            QueryPaginationResource\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/query/resources/resources.ts\n            \n            interface\n            PaginationMetaParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/query/services/query.service.ts\n            \n            injectable\n            QueryService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.1\n        \n            passport : ^0.7.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            reflect-metadata : 0.1.13\n        \n            selfsigned : ^2.4.1\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : >=10.2.1\n        \n            @nestjs/core : >=10.2.1\n        \n            @nestjs/cqrs : >=10.2.1\n        \n            @nestjs/passport : >=10.0.0\n        \n            @nestjs/typeorm : >=10.0.1\n        \n            class-transformer : >=0.5.1\n        \n            class-validator : >=0.14.1\n        \n            passport : >=0.7.0\n        \n            passport-http-bearer : >=1.0.1\n        \n            rxjs : >=7.2.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FilterMatch   (src/.../decorators.ts)\n                        \n                        \n                            Oauth2PayloadType   (src/.../oauth2-payload.interface.ts)\n                        \n                        \n                            QueryOrder   (src/.../query-order.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/query/decorators.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterMatch\n                    \n                \n                        \n                            \n                                 STARTS_WITH\n                            \n                        \n                        \n                            \n                                 STARTS_OR_ENDS\n                            \n                        \n                        \n                            \n                                 ENDS_WITH\n                            \n                        \n                        \n                            \n                                 EXACT\n                            \n                        \n            \n        \n\n    src/auth/interfaces/oauth2-payload.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        Oauth2PayloadType\n                    \n                \n                    \n                        \n                            define payload types\n\n                        \n                    \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                Value : client\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n\n    src/query/interfaces/query-order.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOrder\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthSeedingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QueryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthSeedingModule\n\n\n\ncluster_AuthSeedingModule_exports\n\n\n\ncluster_AuthSeedingModule_providers\n\n\n\n\nAuthSeedingService \n\nAuthSeedingService \n\n\n\nAuthSeedingModule\n\nAuthSeedingModule\n\nAuthSeedingService  -->\n\nAuthSeedingModule->AuthSeedingService \n\n\n\n\n\nAuthSeedingService\n\nAuthSeedingService\n\nAuthSeedingModule -->\n\nAuthSeedingService->AuthSeedingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : Administration Dashboard Connector for @himalaya/dashboard\n        \n            Keywords : nestjs\n        \n            Bugs : https://github.com/red-ninjas/himalaya-dashboard-nest\n        \n            License : MIT\n        \n            Repository : https://github.com/red-ninjas/himalaya-dashboard-nest\n        \n            Author : RedNinjas \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessorRole   (src/.../decorators.ts)\n                        \n                        \n                            MetaDataResult   (src/.../decorators.ts)\n                        \n                        \n                            Oauth2GrantStrategyType   (src/.../strategy.registry.ts)\n                        \n                        \n                            OAuth2Options   (src/.../oauth2-options.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/query/decorators.ts\n    \n    \n        \n            \n                \n                    \n                    AccessorRole\n                \n            \n            \n                \n                        string | string[] | boolean\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MetaDataResult\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/services/strategy.registry.ts\n    \n    \n        \n            \n                \n                    \n                    Oauth2GrantStrategyType\n                \n            \n            \n                \n                            Type\n\n                \n            \n        \n    \n    src/auth/types/oauth2-options.type.ts\n    \n    \n        \n            \n                \n                    \n                    OAuth2Options\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccessTokenRequired   (src/.../access-token-decorator.ts)\n                        \n                        \n                            ADMIN_FIELD_DECORATOR_KEY   (src/.../constants.ts)\n                        \n                        \n                            applyFilter   (src/.../index.ts)\n                        \n                        \n                            applySort   (src/.../index.ts)\n                        \n                        \n                            CommandHandlers   (src/.../auth.module.ts)\n                        \n                        \n                            CONFIG_INJECT_KEY   (src/.../constants.ts)\n                        \n                        \n                            DEFAULT_ADMIN_ROLE_NAME   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_SYSTEM_PERMISSION_GROUP   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_SYSTEM_ROLES_PERMISSION_NAME   (src/.../index.ts)\n                        \n                        \n                            DEFAULT_USER_ROLE_NAME   (src/.../index.ts)\n                        \n                        \n                            EntityAccessor   (src/.../decorators.ts)\n                        \n                        \n                            EntityAccessorValidation   (src/.../entity-accessor.decorator.ts)\n                        \n                        \n                            EventHandlers   (src/.../auth.module.ts)\n                        \n                        \n                            OAUTH2_SERVER_OPTIONS   (src/.../auth.constants.ts)\n                        \n                        \n                            OAUTH2_STRATEGY_METADATA   (src/.../strategy.explorer.ts)\n                        \n                        \n                            Oauth2GrantStrategy   (src/.../oauth2-grant-strategy.decorator.ts)\n                        \n                        \n                            Oauth2Strategies   (src/.../auth.module.ts)\n                        \n                        \n                            Providers   (src/.../auth.module.ts)\n                        \n                        \n                            QUERY_MODULE_CONFIG_KEY   (src/.../index.ts)\n                        \n                        \n                            QueryHandlers   (src/.../auth.module.ts)\n                        \n                        \n                            Resolvers   (src/.../auth.module.ts)\n                        \n                        \n                            Sagas   (src/.../auth.module.ts)\n                        \n                        \n                            ServiceNames   (src/.../auth.module.ts)\n                        \n                        \n                            Services   (src/.../auth.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/access-token-decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AccessTokenRequired\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => UseGuards(AuthGuard('access-token'))\n                    \n                \n\n\n        \n    \n\n    src/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_FIELD_DECORATOR_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'admin-field'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CONFIG_INJECT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AdminOptions'\n                    \n                \n\n\n        \n    \n\n    src/query/helpers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  fields: ResourceDictonary,\n  field: FilterableRequest,\n  queryBuilder: SelectQueryBuilder,\n) => {\n  const foundField = fields[field.field];\n\n  if (foundField === undefined || foundField.isFilterable !== true) {\n    throw new UnauthorizedException(\n      field.field + ' is not accessable as filter field.',\n    );\n  } else {\n    const filter = {};\n\n    if (foundField.filterMatch == undefined) {\n      foundField.filterMatch = FilterMatch.STARTS_OR_ENDS;\n    }\n\n    if (foundField.filterMatch == FilterMatch.STARTS_WITH) {\n      filter[field.field] = ILike(`${field.term}%`);\n    } else if (foundField.filterMatch == FilterMatch.EXACT) {\n      filter[field.field] = `${field.term}`;\n    } else if (foundField.filterMatch == FilterMatch.ENDS_WITH) {\n      filter[field.field] = ILike(`%${field.term}`);\n    } else if (foundField.filterMatch == FilterMatch.STARTS_OR_ENDS) {\n      filter[field.field] = ILike(`%${field.term}%`);\n    }\n    queryBuilder.where(filter);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applySort\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  fields: ResourceDictonary,\n  field: SortableRequest,\n  queryBuilder: SelectQueryBuilder,\n) => {\n  const foundField = fields[field.field];\n\n  if (foundField === undefined || foundField.isSortable !== true) {\n    throw new UnauthorizedException(\n      field.field + ' is not accessable as order field.',\n    );\n  } else {\n    queryBuilder.orderBy(field.field, field.order);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CommandHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CreateClientHandler, CreateAccessTokenHandler]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EventHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Oauth2Strategies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ClientCredentialsStrategy,\n  RefreshTokenStrategy,\n  PasswordStrategy,\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [StrategyExplorer, Oauth2GrantStrategyRegistry]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QueryHandlers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resolvers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Sagas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ServiceNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'ClientRepositoryInterface',\n  'AccessTokenRepositoryInterface',\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Services\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: 'ClientRepositoryInterface', useClass: ClientRepository },\n  {\n    provide: 'AccessTokenRepositoryInterface',\n    useClass: AccessTokenRepository,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/auth/constants/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ADMIN_ROLE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'admin'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SYSTEM_PERMISSION_GROUP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'system'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_SYSTEM_ROLES_PERMISSION_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_USER_ROLE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/query/decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EntityAccessor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options?: IEntityAccessorOptions) => {\n  return function(object: Object, propertyKey: string) {\n    Reflect.defineMetadata(\n      ADMIN_FIELD_DECORATOR_KEY,\n      options || {},\n      object,\n      propertyKey,\n    );\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/query/decorators/entity-accessor.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EntityAccessorValidation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => UseGuards(EntityAccessorGuard)\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OAUTH2_SERVER_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'OAUTH2_SERVER_OPTIONS'\n                    \n                \n\n\n        \n    \n\n    src/auth/services/strategy.explorer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OAUTH2_STRATEGY_METADATA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '__oauth2GrantStrategy__'\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/oauth2-grant-strategy.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Oauth2GrantStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string): ClassDecorator => {\n  return (target: object) => {\n    Reflect.defineMetadata(OAUTH2_STRATEGY_METADATA, name, target);\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/query/constants/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QUERY_MODULE_CONFIG_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AdminAuthConfig'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
